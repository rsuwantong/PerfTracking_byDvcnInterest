<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0520.1152                                -->
<workbook source-build='9.3.2 (9300.16.0520.1152)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' inline='true' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' version='9.3'>
      <connection authentication='no' authentication-type='0' class='hadoophive' connection-type='Impala' dbname='' odbc-connect-string-extras='' one-time-sql='' port='21050' schema='meas_ana' server='impala.prd.sg1.tapad.com' sslcert='' sslmode='' username=''>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[meas_table_dvc_pro].[tapad_id]' />
                <expression op='[impb4click_byoffer].[tapad_id]' />
              </expression>
              <expression op='='>
                <expression op='[meas_table_dvc_pro].[offer]' />
                <expression op='[impb4click_byoffer].[offer]' />
              </expression>
            </expression>
          </clause>
          <relation name='meas_table_dvc_pro' table='[meas_ana].[meas_table_dvc_prop_2017]' type='table' />
          <relation name='impb4click_byoffer' table='[meas_ana].[impb4click_byoffer_tpid_2017]' type='table' />
        </relation>
        <cols>
          <map key='[brand]' value='[meas_table_dvc_pro].[brand]' />
          <map key='[carrier]' value='[meas_table_dvc_pro].[carrier]' />
          <map key='[clicks]' value='[meas_table_dvc_pro].[clicks]' />
          <map key='[cluster]' value='[meas_table_dvc_pro].[cluster]' />
          <map key='[dvc_commercname]' value='[meas_table_dvc_pro].[dvc_commercname]' />
          <map key='[dvc_techname]' value='[meas_table_dvc_pro].[dvc_techname]' />
          <map key='[ful_channel]' value='[meas_table_dvc_pro].[ful_channel]' />
          <map key='[hl_platform]' value='[meas_table_dvc_pro].[hl_platform]' />
          <map key='[impb4click]' value='[impb4click_byoffer].[impb4click]' />
          <map key='[impclick_daydif]' value='[impb4click_byoffer].[impclick_daydif]' />
          <map key='[imps]' value='[meas_table_dvc_pro].[imps]' />
          <map key='[landings]' value='[meas_table_dvc_pro].[landings]' />
          <map key='[offer (impb4click_byoffer)]' value='[impb4click_byoffer].[offer]' />
          <map key='[offer]' value='[meas_table_dvc_pro].[offer]' />
          <map key='[pt_cat]' value='[meas_table_dvc_pro].[pt_cat]' />
          <map key='[release_month]' value='[meas_table_dvc_pro].[release_month]' />
          <map key='[release_price]' value='[meas_table_dvc_pro].[release_price]' />
          <map key='[release_year]' value='[meas_table_dvc_pro].[release_year]' />
          <map key='[room_id]' value='[meas_table_dvc_pro].[room_id]' />
          <map key='[room_name]' value='[meas_table_dvc_pro].[room_name]' />
          <map key='[screensize]' value='[meas_table_dvc_pro].[screensize]' />
          <map key='[selects]' value='[meas_table_dvc_pro].[selects]' />
          <map key='[sighted_date]' value='[meas_table_dvc_pro].[sighted_date]' />
          <map key='[source (impb4click_byoffer)]' value='[impb4click_byoffer].[source]' />
          <map key='[source]' value='[meas_table_dvc_pro].[source]' />
          <map key='[submits]' value='[meas_table_dvc_pro].[submits]' />
          <map key='[tapad_id (impb4click_byoffer)]' value='[impb4click_byoffer].[tapad_id]' />
          <map key='[tapad_id]' value='[meas_table_dvc_pro].[tapad_id]' />
        </cols>
        <connection-customization class='hadoophive' enabled='false' version='9.3'>
          <vendor name='hadoophive' />
          <driver name='hadoophive' />
          <customizations>
            <customization name='CAP_CONNECT_STORED_PROCEDURE' value='no' />
            <customization name='CAP_CREATE_TEMP_TABLES' value='no' />
            <customization name='CAP_DEFERS_CONNECTION_VERIFICATION' value='no' />
            <customization name='CAP_FAST_METADATA' value='no' />
            <customization name='CAP_HIVE_FIX_METADATA_NAMES' value='no' />
            <customization name='CAP_INDEX_TEMP_TABLES' value='no' />
            <customization name='CAP_INSERT_TEMP_EXEC_STORED_PROCEDURE' value='no' />
            <customization name='CAP_ODBC_ALWAYS_THROW_CONNECT_ERRORS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_DATETIME_AS_CHAR' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_DATE_AS_CHAR' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_MAX_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_MEDIUM_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_SIGNED' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_SMALL_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_INT64' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_PREFERRED_TYPES' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_WIDE_CHAR' value='no' />
            <customization name='CAP_ODBC_CURSOR_DYNAMIC' value='no' />
            <customization name='CAP_ODBC_CURSOR_FORWARD_ONLY' value='no' />
            <customization name='CAP_ODBC_CURSOR_KEYSET_DRIVEN' value='no' />
            <customization name='CAP_ODBC_CURSOR_STATIC' value='no' />
            <customization name='CAP_ODBC_DRIVER_HIVE_ASSUME_LATEST' value='no' />
            <customization name='CAP_ODBC_ERROR_IGNORE_FALSE_ALARM' value='no' />
            <customization name='CAP_ODBC_FETCH_BUFFERS_RESIZABLE' value='no' />
            <customization name='CAP_ODBC_FETCH_BUFFERS_SIZE_MASSIVE' value='no' />
            <customization name='CAP_ODBC_FETCH_CONTINUE_ON_ERROR' value='no' />
            <customization name='CAP_ODBC_FORCE_SINGLE_ROW_BINDING' value='no' />
            <customization name='CAP_ODBC_METADATA_STRING_LENGTH_UNKNOWN' value='no' />
            <customization name='CAP_ODBC_REBIND_SKIP_UNBIND' value='no' />
            <customization name='CAP_ODBC_TRIM_VARCHAR_PADDING' value='no' />
            <customization name='CAP_ODBC_UNBIND_AUTO' value='no' />
            <customization name='CAP_ODBC_UNBIND_BATCH' value='no' />
            <customization name='CAP_ODBC_UNBIND_EACH' value='no' />
            <customization name='CAP_ODBC_USE_NATIVE_PROTOCOL' value='no' />
            <customization name='CAP_QUERY_ALWAYS_USE_AQ_CACHE' value='no' />
            <customization name='CAP_QUERY_BLENDING_ALWAYS_USE_LOCAL_MAPPING_TABLES' value='no' />
            <customization name='CAP_QUERY_BLENDING_PREFER_LOCAL_MAPPING_TABLES' value='yes' />
            <customization name='CAP_QUERY_BLENDING_REMOTE_MAPPING_TABLES' value='yes' />
            <customization name='CAP_QUERY_BOOLEXPR_TO_INTEXPR' value='no' />
            <customization name='CAP_QUERY_BOOL_IDENTIFIER_TO_LOGICAL' value='no' />
            <customization name='CAP_QUERY_EMPTY_DOMAIN_TOP' value='no' />
            <customization name='CAP_QUERY_FORCE_AGGREGATE_MEASURES' value='no' />
            <customization name='CAP_QUERY_GROUP_BY_ALIAS' value='no' />
            <customization name='CAP_QUERY_GROUP_BY_DEGREE' value='no' />
            <customization name='CAP_QUERY_HAVING_REQUIRES_GROUP_BY' value='no' />
            <customization name='CAP_QUERY_HAVING_UNSUPPORTED' value='no' />
            <customization name='CAP_QUERY_JOIN_ACROSS_SCHEMAS' value='no' />
            <customization name='CAP_QUERY_JOIN_ASSUME_CONSTRAINED' value='no' />
            <customization name='CAP_QUERY_JOIN_PUSH_DOWN_CONDITION_EXPRESSIONS' value='no' />
            <customization name='CAP_QUERY_JOIN_REQUIRES_SCOPE' value='no' />
            <customization name='CAP_QUERY_JOIN_REQUIRES_SUBQUERY' value='no' />
            <customization name='CAP_QUERY_NULL_REQUIRES_CAST' value='no' />
            <customization name='CAP_QUERY_RECOMPILE_FAILED_QUERY' value='no' />
            <customization name='CAP_QUERY_SELECT_ALIASES_SORTED' value='no' />
            <customization name='CAP_QUERY_SORT_BY' value='yes' />
            <customization name='CAP_QUERY_SORT_BY_DEGREE' value='no' />
            <customization name='CAP_QUERY_SUBQUERIES' value='yes' />
            <customization name='CAP_QUERY_SUBQUERIES_WITH_TOP' value='yes' />
            <customization name='CAP_QUERY_SUBQUERY_DATASOURCE_CONTEXT' value='yes' />
            <customization name='CAP_QUERY_SUBQUERY_QUERY_CONTEXT' value='yes' />
            <customization name='CAP_QUERY_SUPPORTS_LODJOINS' value='yes' />
            <customization name='CAP_QUERY_SUPPRESS_CHECK_DOMAIN_LITERALS_THRESHOLD' value='no' />
            <customization name='CAP_QUERY_SUPPRESS_NULL_CHECK_QUERIES' value='no' />
            <customization name='CAP_QUERY_TOPSTYLE_LIMIT' value='no' />
            <customization name='CAP_QUERY_TOPSTYLE_ROWNUM' value='no' />
            <customization name='CAP_QUERY_TOPSTYLE_TOP' value='no' />
            <customization name='CAP_QUERY_TOP_0_METADATA' value='yes' />
            <customization name='CAP_QUERY_TOP_N' value='yes' />
            <customization name='CAP_QUERY_USE_DOMAIN_RANGES_OPTIMIZATION' value='yes' />
            <customization name='CAP_QUERY_USE_QUERY_FUSION' value='yes' />
            <customization name='CAP_QUERY_WHERE_FALSE_METADATA' value='no' />
            <customization name='CAP_SELECT_INTO' value='no' />
            <customization name='CAP_SELECT_TOP_INTO' value='no' />
            <customization name='CAP_STORED_PROCEDURE_PREFER_TEMP_TABLE' value='no' />
            <customization name='CAP_STORED_PROCEDURE_REPAIR_TEMP_TABLE_STRINGS' value='no' />
            <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_BUFFER' value='no' />
            <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_NEW_PROTOCOL' value='no' />
            <customization name='CAP_SUPPRESS_CONNECTION_POOLING' value='yes' />
            <customization name='CAP_SUPPRESS_DISCOVERY_QUERIES' value='no' />
            <customization name='CAP_SUPPRESS_GET_SERVER_TIME' value='yes' />
            <customization name='CAP_SUPPRESS_QUICK_FILTER_ACCELERATION_VIEWS' value='no' />
          </customizations>
        </connection-customization>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>sighted_date</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sighted_date]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>sighted_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tapad_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tapad_id]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>tapad_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[carrier]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>carrier</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>offer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[offer]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>offer</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[room_id]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>room_id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[room_name]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>room_name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pt_cat</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pt_cat]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>pt_cat</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ful_channel</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ful_channel]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>ful_channel</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>imps</remote-name>
            <remote-type>20</remote-type>
            <local-name>[imps]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>imps</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>clicks</remote-name>
            <remote-type>20</remote-type>
            <local-name>[clicks]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>clicks</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>landings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[landings]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>landings</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>selects</remote-name>
            <remote-type>20</remote-type>
            <local-name>[selects]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>selects</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>submits</remote-name>
            <remote-type>20</remote-type>
            <local-name>[submits]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>submits</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hl_platform</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hl_platform]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>hl_platform</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dvc_techname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dvc_techname]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>dvc_techname</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dvc_commercname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dvc_commercname]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>dvc_commercname</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>brand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[brand]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>brand</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>release_price</remote-name>
            <remote-type>129</remote-type>
            <local-name>[release_price]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>release_price</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>release_year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[release_year]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>release_year</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>release_month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[release_month]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>release_month</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>screensize</remote-name>
            <remote-type>129</remote-type>
            <local-name>[screensize]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>screensize</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cluster</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cluster]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>cluster</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source (impb4click_byoffer)]</local-name>
            <parent-name>[impb4click_byoffer]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>offer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[offer (impb4click_byoffer)]</local-name>
            <parent-name>[impb4click_byoffer]</parent-name>
            <remote-alias>offer</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tapad_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tapad_id (impb4click_byoffer)]</local-name>
            <parent-name>[impb4click_byoffer]</parent-name>
            <remote-alias>tapad_id</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>impb4click</remote-name>
            <remote-type>20</remote-type>
            <local-name>[impb4click]</local-name>
            <parent-name>[impb4click_byoffer]</parent-name>
            <remote-alias>impb4click</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>impclick_daydif</remote-name>
            <remote-type>3</remote-type>
            <local-name>[impclick_daydif]</local-name>
            <parent-name>[impb4click_byoffer]</parent-name>
            <remote-alias>impclick_daydif</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CPM' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[CPSubmit (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [pt_cat]=&apos;cat1&apos; then 250/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat3&apos; then 200/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat6&apos; then 120/35&#13;&#10;ELSE 3&#13;&#10;END' />
      </column>
      <column caption='Ranking' datatype='integer' default-format='n#,##0.00;-#,##0.00' name='[CPSubmit (copy)]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='index()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
      </column>
      <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([submits])/sum([landings])' />
      </column>
      <column caption='CPSubmit' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_417990356997468162]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([imps])/1000)/sum([submits])*MAX([CPSubmit (copy 2)])' />
      </column>
      <column caption='Rank' datatype='integer' name='[Calculation_544935571523895296]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='index()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([tapad_id])' />
      </column>
      <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
      </column>
      <column datatype='integer' name='[Impb4Click (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[impb4click]' />
      </column>
      <column datatype='integer' name='[Impb4Click (group)]' role='dimension' type='ordinal'>
        <calculation class='categorical-bin' column='[impb4click]'>
          <bin value='16'>
            <value>16</value>
            <value>17</value>
            <value>18</value>
            <value>19</value>
            <value>20</value>
            <value>21</value>
            <value>22</value>
            <value>23</value>
            <value>24</value>
            <value>25</value>
            <value>26</value>
            <value>27</value>
            <value>28</value>
            <value>29</value>
            <value>30</value>
            <value>32</value>
            <value>34</value>
            <value>35</value>
            <value>36</value>
            <value>37</value>
            <value>38</value>
            <value>39</value>
            <value>40</value>
            <value>41</value>
            <value>43</value>
            <value>46</value>
            <value>47</value>
            <value>49</value>
            <value>50</value>
            <value>52</value>
            <value>53</value>
            <value>54</value>
            <value>61</value>
            <value>64</value>
            <value>65</value>
            <value>67</value>
            <value>68</value>
            <value>80</value>
            <value>83</value>
            <value>223</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='16' value='&gt; 15' />
        </aliases>
      </column>
      <column datatype='integer' name='[Impclick Daydif (group)]' role='dimension' type='ordinal'>
        <calculation class='categorical-bin' column='[impclick_daydif]'>
          <bin value='11'>
            <value>11</value>
            <value>12</value>
            <value>13</value>
            <value>14</value>
            <value>15</value>
            <value>16</value>
            <value>17</value>
            <value>18</value>
            <value>19</value>
            <value>20</value>
            <value>21</value>
            <value>22</value>
            <value>23</value>
            <value>24</value>
            <value>25</value>
            <value>26</value>
            <value>27</value>
            <value>28</value>
            <value>29</value>
            <value>30</value>
            <value>31</value>
            <value>32</value>
            <value>33</value>
            <value>34</value>
            <value>35</value>
            <value>36</value>
            <value>37</value>
            <value>38</value>
            <value>39</value>
            <value>40</value>
            <value>41</value>
            <value>42</value>
            <value>43</value>
            <value>44</value>
            <value>45</value>
            <value>46</value>
            <value>47</value>
            <value>48</value>
            <value>49</value>
            <value>50</value>
            <value>51</value>
            <value>52</value>
            <value>53</value>
            <value>54</value>
            <value>55</value>
            <value>56</value>
            <value>57</value>
            <value>58</value>
            <value>59</value>
            <value>60</value>
            <value>61</value>
            <value>62</value>
            <value>63</value>
            <value>64</value>
            <value>65</value>
            <value>66</value>
            <value>67</value>
            <value>68</value>
            <value>69</value>
            <value>70</value>
            <value>71</value>
            <value>72</value>
            <value>73</value>
            <value>74</value>
            <value>75</value>
            <value>78</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='11' value='&gt;10' />
        </aliases>
      </column>
      <column caption='Imps dim' datatype='integer' name='[Imps (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[imps]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Rank submit' datatype='integer' name='[Rank (copy)]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='rank(sum([submits]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Release Price (thb)' datatype='integer' name='[Release Price (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[release_price]*40' />
      </column>
      <column caption='Release Price (thb) (bin)' datatype='integer' name='[Release Price (thb) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='3' formula='[Release Price (copy)]' peg='0' size='2000' />
      </column>
      <column datatype='string' name='[Release Year (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[release_year]'>
          <bin value='&quot;2016&quot;'>
            <value>&quot;2016&quot;</value>
            <value>&quot;22016&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;2016&quot;' value='2016' />
        </aliases>
      </column>
      <column datatype='string' name='[Room Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[room_name]'>
          <bin value='&quot;amulet&quot;'>
            <value>&quot;amulet&quot;</value>
            <value>&quot;amuletbang&quot;</value>
            <value>&quot;amuletpathumthani&quot;</value>
            <value>&quot;amuletphra&quot;</value>
            <value>&quot;amuletphrae&quot;</value>
            <value>&quot;amuletprachinburip&quot;</value>
            <value>&quot;amuletrayong&quot;</value>
            <value>&quot;amuletsi&quot;</value>
            <value>&quot;amuletsingburip&quot;</value>
            <value>&quot;amuletwrap&quot;</value>
          </bin>
          <bin value='&quot;astina&quot;'>
            <value>&quot;astina&quot;</value>
            <value>&quot;auto&quot;</value>
            <value>&quot;auto_part&quot;</value>
            <value>&quot;autobangkok_metropolitanp&quot;</value>
            <value>&quot;autoburiram&quot;</value>
            <value>&quot;autochachoengsao&quot;</value>
            <value>&quot;autochiangrai&quot;</value>
            <value>&quot;autocontextual&quot;</value>
            <value>&quot;autokalasinp&quot;</value>
            <value>&quot;autokanchanaburi&quot;</value>
            <value>&quot;autokhonkaen&quot;</value>
            <value>&quot;autokhonkaenp&quot;</value>
            <value>&quot;autoloei&quot;</value>
            <value>&quot;automahasarakham&quot;</value>
            <value>&quot;autonakhonpathom&quot;</value>
            <value>&quot;autonakhonphanom&quot;</value>
            <value>&quot;autonakhonphanomp&quot;</value>
            <value>&quot;autonakhonratchasima&quot;</value>
            <value>&quot;autonakhonsawan&quot;</value>
            <value>&quot;autonakhonsithammarat&quot;</value>
            <value>&quot;autonongbualamphu&quot;</value>
            <value>&quot;autopattanip&quot;</value>
            <value>&quot;autophetchabun&quot;</value>
            <value>&quot;autophichit&quot;</value>
            <value>&quot;autophitsanulok&quot;</value>
            <value>&quot;autorayong&quot;</value>
            <value>&quot;autosakonnakhon&quot;</value>
            <value>&quot;autosaraburi&quot;</value>
            <value>&quot;autosisaket&quot;</value>
            <value>&quot;autosongkhla&quot;</value>
            <value>&quot;autosukhothai&quot;</value>
            <value>&quot;autosuphanburi&quot;</value>
            <value>&quot;autosuratthani&quot;</value>
            <value>&quot;autosurin&quot;</value>
            <value>&quot;autotak&quot;</value>
            <value>&quot;autothanyaburip&quot;</value>
            <value>&quot;autoudonthani&quot;</value>
            <value>&quot;autowrap&quot;</value>
            <value>&quot;car&quot;</value>
            <value>&quot;car_parts&quot;</value>
            <value>&quot;cyclone&quot;</value>
            <value>&quot;strada&quot;</value>
          </bin>
          <bin value='&quot;bicycles&quot;'>
            <value>&quot;bicycles&quot;</value>
            <value>&quot;bicyclesbangkok&quot;</value>
            <value>&quot;bicycleskanchanaburi&quot;</value>
            <value>&quot;bicycleskrabi&quot;</value>
            <value>&quot;bicycleslamphun&quot;</value>
            <value>&quot;bicyclessamutsakhon&quot;</value>
            <value>&quot;bicyclessongkhla&quot;</value>
            <value>&quot;bicyclessuratthani&quot;</value>
            <value>&quot;bicyclesubonratchathani&quot;</value>
          </bin>
          <bin value='&quot;business_for_sale&quot;'>
            <value>&quot;business_for_sale&quot;</value>
            <value>&quot;business_service&quot;</value>
          </bin>
          <bin value='&quot;computer&quot;'>
            <value>&quot;computer&quot;</value>
            <value>&quot;computerkhonkaen&quot;</value>
            <value>&quot;computerprachuapkhirikhan&quot;</value>
          </bin>
          <bin value='&quot;electric&quot;'>
            <value>&quot;electric&quot;</value>
            <value>&quot;electricnakhonsawan&quot;</value>
            <value>&quot;electricphitsanulok&quot;</value>
            <value>&quot;electricratchaburi&quot;</value>
            <value>&quot;electricubonratchathani&quot;</value>
          </bin>
          <bin value='&quot;lifestyle&quot;'>
            <value>&quot;lifestyle&quot;</value>
            <value>&quot;lifestyle..&quot;</value>
          </bin>
          <bin value='&quot;mom_and_kid&quot;'>
            <value>&quot;mom_and_kid&quot;</value>
            <value>&quot;mom_and_kidsongkhla&quot;</value>
          </bin>
          <bin value='&quot;pet&quot;'>
            <value>&quot;pet&quot;</value>
            <value>&quot;petkanchanaburi&quot;</value>
            <value>&quot;petkhonkaen&quot;</value>
            <value>&quot;petnakhonratchasima&quot;</value>
            <value>&quot;petphetchabun&quot;</value>
          </bin>
          <bin value='&quot;phone_device&quot;'>
            <value>&quot;phone_device&quot;</value>
            <value>&quot;phone_devicenakhonratchasima&quot;</value>
            <value>&quot;phone_devicesongkhla&quot;</value>
          </bin>
          <bin value='&quot;realestate&quot;'>
            <value>&quot;realestate&quot;</value>
            <value>&quot;realestateayutthaya&quot;</value>
            <value>&quot;realestatebangkok&quot;</value>
            <value>&quot;realestateburiram&quot;</value>
            <value>&quot;realestatechachoengsao&quot;</value>
            <value>&quot;realestatechaiyaphum&quot;</value>
            <value>&quot;realestatechiang&quot;</value>
            <value>&quot;realestatechiangmai&quot;</value>
            <value>&quot;realestatechiangrai&quot;</value>
            <value>&quot;realestatechonburi&quot;</value>
            <value>&quot;realestatecontextual&quot;</value>
            <value>&quot;realestatekanchanaburi&quot;</value>
            <value>&quot;realestatekhonkaen&quot;</value>
            <value>&quot;realestatekrabi&quot;</value>
            <value>&quot;realestatelopburi&quot;</value>
            <value>&quot;realestatenakhonratchasima&quot;</value>
            <value>&quot;realestatenakhonsawan&quot;</value>
            <value>&quot;realestatenakhonsithammarat&quot;</value>
            <value>&quot;realestatenonthaburi&quot;</value>
            <value>&quot;realestatepathumthani&quot;</value>
            <value>&quot;realestatephangnga&quot;</value>
            <value>&quot;realestatephayao&quot;</value>
            <value>&quot;realestatephetchabun&quot;</value>
            <value>&quot;realestatephichit&quot;</value>
            <value>&quot;realestatephuket&quot;</value>
            <value>&quot;realestateprachinburi&quot;</value>
            <value>&quot;realestateratchaburi&quot;</value>
            <value>&quot;realestaterayong&quot;</value>
            <value>&quot;realestatesakaeo&quot;</value>
            <value>&quot;realestatesakonnakhon&quot;</value>
            <value>&quot;realestatesamutprakan&quot;</value>
            <value>&quot;realestatesamutsakhon&quot;</value>
            <value>&quot;realestatesaraburi&quot;</value>
            <value>&quot;realestatesongkhla&quot;</value>
            <value>&quot;realestatesuratthani&quot;</value>
            <value>&quot;realestatesurin&quot;</value>
            <value>&quot;realestateubonratchathani&quot;</value>
            <value>&quot;realestateudonthani&quot;</value>
            <value>&quot;realestateuthaithani&quot;</value>
            <value>&quot;realestatewrap&quot;</value>
          </bin>
          <bin value='&quot;shoes&quot;'>
            <value>&quot;shoes&quot;</value>
            <value>&quot;shoesnakhonsithammarat&quot;</value>
            <value>&quot;shoesphuket&quot;</value>
            <value>&quot;shoessongkhla&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;amulet&quot;' value='amulet' />
          <alias key='&quot;astina&quot;' value='auto' />
          <alias key='&quot;bicycles&quot;' value='bicycles' />
          <alias key='&quot;business_for_sale&quot;' value='business_service' />
          <alias key='&quot;computer&quot;' value='computer' />
          <alias key='&quot;electric&quot;' value='electric' />
          <alias key='&quot;lifestyle&quot;' value='lifestyle' />
          <alias key='&quot;mom_and_kid&quot;' value='mom_and_kid' />
          <alias key='&quot;pet&quot;' value='pet' />
          <alias key='&quot;phone_device&quot;' value='phone_device' />
          <alias key='&quot;realestate&quot;' value='realestate' />
          <alias key='&quot;shoes&quot;' value='shoes' />
        </aliases>
      </column>
      <column caption='Screensize (bin)' datatype='integer' name='[Screensize (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[screensize]' peg='0' size='1' />
      </column>
      <column caption='Brand' datatype='string' name='[brand]' role='dimension' type='nominal' />
      <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
      <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
      <column caption='Cluster' datatype='real' name='[cluster]' role='measure' type='quantitative' />
      <column caption='Dvc Commercname' datatype='string' name='[dvc_commercname]' role='dimension' type='nominal' />
      <column caption='Dvc Techname' datatype='string' name='[dvc_techname]' role='dimension' type='nominal' />
      <column caption='Ful Channel' datatype='string' name='[ful_channel]' role='dimension' type='nominal' />
      <column caption='Hl Platform' datatype='string' name='[hl_platform]' role='dimension' type='nominal' />
      <column caption='Impb4Click' datatype='integer' name='[impb4click]' role='measure' type='quantitative' />
      <column caption='Impclick Daydif' datatype='integer' name='[impclick_daydif]' role='measure' type='quantitative' />
      <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
      <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
      <column caption='Offer (Impb4Click Byoffer)' datatype='string' name='[offer (impb4click_byoffer)]' role='dimension' type='nominal' />
      <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;booster&quot;' value='Booster' />
          <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
          <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
          <alias key='&quot;mgm&quot;' value='Mgm' />
          <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
          <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
          <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
          <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
          <alias key='&quot;mnp-free-device&quot;' value='OEM' />
          <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
          <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
          <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
          <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
          <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
          <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
          <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
          <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
          <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
          <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
          <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
          <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
          <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
          <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
          <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
          <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
          <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
        </aliases>
      </column>
      <column caption='Pt Cat' datatype='string' name='[pt_cat]' role='dimension' type='nominal' />
      <column caption='Release Month' datatype='string' name='[release_month]' role='dimension' type='nominal' />
      <column caption='Release Price' datatype='integer' datatype-customized='true' name='[release_price]' role='dimension' type='ordinal' />
      <column caption='Release Year' datatype='string' name='[release_year]' role='dimension' type='nominal' />
      <column caption='Room Id' datatype='integer' name='[room_id]' role='dimension' type='ordinal' />
      <column caption='Room Name' datatype='string' name='[room_name]' role='dimension' type='nominal' />
      <column caption='Screensize' datatype='integer' datatype-customized='true' name='[screensize]' role='dimension' type='ordinal' />
      <column caption='Selects' datatype='integer' name='[selects]' role='measure' type='quantitative' />
      <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
      <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
      <column caption='Tapad Id (Impb4Click Byoffer)' datatype='string' name='[tapad_id (impb4click_byoffer)]' role='dimension' type='nominal' />
      <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
      <column-instance column='[impb4click]' derivation='None' name='[none:impb4click:qk]' pivot='key' type='quantitative' />
      <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
      <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Impb4Click,Offer)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:impb4click:qk]' />
          <groupfilter function='level-members' level='[none:offer:nk]' />
        </groupfilter>
      </group>
      <group name='[Offer &amp; Dvc Commercname (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[dvc_commercname]' />
          <groupfilter function='level-members' level='[offer]' />
        </groupfilter>
      </group>
      <group name='[Offer &amp; Room Name (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[room_name]' />
          <groupfilter function='level-members' level='[offer]' />
        </groupfilter>
      </group>
      <group name='[Source &amp; Offer (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[offer]' />
          <groupfilter function='level-members' level='[source]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='D:\Tapad_UC1\Measurement_new\Measurement_2017\meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana).tde' schema='Extract' tablename='Extract' update-time='01/25/2017 10:18:49 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[CPSubmit (copy 2)]' value='[Extract].[Calculation_417990356997468162]' />
            <map key='[Impb4Click (copy)]' value='[Extract].[Impb4Click (copy)]' />
            <map key='[Impb4Click (group)]' value='[Extract].[Impb4Click (group)]' />
            <map key='[Impclick Daydif (group)]' value='[Extract].[Impclick Daydif (group)]' />
            <map key='[Imps (copy)]' value='[Extract].[Imps (copy)]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[Release Price (copy)]' value='[Extract].[Release Price (copy)]' />
            <map key='[Release Price (thb) (bin)]' value='[Extract].[Release Price (thb) (bin)]' />
            <map key='[Release Year (group)]' value='[Extract].[Release Year (group)]' />
            <map key='[Room Name (group)]' value='[Extract].[Room Name (group)]' />
            <map key='[Screensize (bin)]' value='[Extract].[Screensize (bin)]' />
            <map key='[brand]' value='[Extract].[brand]' />
            <map key='[carrier]' value='[Extract].[carrier]' />
            <map key='[clicks]' value='[Extract].[clicks]' />
            <map key='[cluster]' value='[Extract].[cluster]' />
            <map key='[dvc_commercname]' value='[Extract].[dvc_commercname]' />
            <map key='[dvc_techname]' value='[Extract].[dvc_techname]' />
            <map key='[ful_channel]' value='[Extract].[ful_channel]' />
            <map key='[hl_platform]' value='[Extract].[hl_platform]' />
            <map key='[impb4click]' value='[Extract].[impb4click]' />
            <map key='[impclick_daydif]' value='[Extract].[impclick_daydif]' />
            <map key='[imps]' value='[Extract].[imps]' />
            <map key='[landings]' value='[Extract].[landings]' />
            <map key='[offer (impb4click_byoffer)]' value='[Extract].[offer]' />
            <map key='[offer]' value='[Extract].[offer1]' />
            <map key='[pt_cat]' value='[Extract].[pt_cat]' />
            <map key='[release_month]' value='[Extract].[release_month]' />
            <map key='[release_price]' value='[Extract].[release_price]' />
            <map key='[release_year]' value='[Extract].[release_year]' />
            <map key='[room_id]' value='[Extract].[room_id]' />
            <map key='[room_name]' value='[Extract].[room_name]' />
            <map key='[screensize]' value='[Extract].[screensize]' />
            <map key='[selects]' value='[Extract].[selects]' />
            <map key='[sighted_date]' value='[Extract].[sighted_date]' />
            <map key='[source (impb4click_byoffer)]' value='[Extract].[source]' />
            <map key='[source]' value='[Extract].[source1]' />
            <map key='[submits]' value='[Extract].[submits]' />
            <map key='[tapad_id (impb4click_byoffer)]' value='[Extract].[tapad_id]' />
            <map key='[tapad_id]' value='[Extract].[tapad_id1]' />
          </cols>
          <calculations>
            <calculation column='[CPSubmit (copy 2)]' formula='IF [pt_cat]=&apos;cat1&apos; then 250/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat3&apos; then 200/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat6&apos; then 120/35&#13;&#10;ELSE 3&#13;&#10;END' />
            <calculation column='[Impb4Click (copy)]' formula='[impb4click]' />
            <calculation column='[Impb4Click (group)]' formula='CASE [impb4click]&#10;  WHEN 16 THEN 16&#10;  WHEN 17 THEN 16&#10;  WHEN 18 THEN 16&#10;  WHEN 19 THEN 16&#10;  WHEN 20 THEN 16&#10;  WHEN 21 THEN 16&#10;  WHEN 22 THEN 16&#10;  WHEN 23 THEN 16&#10;  WHEN 24 THEN 16&#10;  WHEN 25 THEN 16&#10;  WHEN 26 THEN 16&#10;  WHEN 27 THEN 16&#10;  WHEN 28 THEN 16&#10;  WHEN 29 THEN 16&#10;  WHEN 30 THEN 16&#10;  WHEN 32 THEN 16&#10;  WHEN 34 THEN 16&#10;  WHEN 35 THEN 16&#10;  WHEN 36 THEN 16&#10;  WHEN 37 THEN 16&#10;  WHEN 38 THEN 16&#10;  WHEN 39 THEN 16&#10;  WHEN 40 THEN 16&#10;  WHEN 41 THEN 16&#10;  WHEN 43 THEN 16&#10;  WHEN 46 THEN 16&#10;  WHEN 47 THEN 16&#10;  WHEN 49 THEN 16&#10;  WHEN 50 THEN 16&#10;  WHEN 52 THEN 16&#10;  WHEN 53 THEN 16&#10;  WHEN 54 THEN 16&#10;  WHEN 61 THEN 16&#10;  WHEN 64 THEN 16&#10;  WHEN 65 THEN 16&#10;  WHEN 67 THEN 16&#10;  WHEN 68 THEN 16&#10;  WHEN 80 THEN 16&#10;  WHEN 83 THEN 16&#10;  WHEN 223 THEN 16&#10;  ELSE [impb4click]&#10;END' />
            <calculation column='[Impclick Daydif (group)]' formula='CASE [impclick_daydif]&#10;  WHEN 11 THEN 11&#10;  WHEN 12 THEN 11&#10;  WHEN 13 THEN 11&#10;  WHEN 14 THEN 11&#10;  WHEN 15 THEN 11&#10;  WHEN 16 THEN 11&#10;  WHEN 17 THEN 11&#10;  WHEN 18 THEN 11&#10;  WHEN 19 THEN 11&#10;  WHEN 20 THEN 11&#10;  WHEN 21 THEN 11&#10;  WHEN 22 THEN 11&#10;  WHEN 23 THEN 11&#10;  WHEN 24 THEN 11&#10;  WHEN 25 THEN 11&#10;  WHEN 26 THEN 11&#10;  WHEN 27 THEN 11&#10;  WHEN 28 THEN 11&#10;  WHEN 29 THEN 11&#10;  WHEN 30 THEN 11&#10;  WHEN 31 THEN 11&#10;  WHEN 32 THEN 11&#10;  WHEN 33 THEN 11&#10;  WHEN 34 THEN 11&#10;  WHEN 35 THEN 11&#10;  WHEN 36 THEN 11&#10;  WHEN 37 THEN 11&#10;  WHEN 38 THEN 11&#10;  WHEN 39 THEN 11&#10;  WHEN 40 THEN 11&#10;  WHEN 41 THEN 11&#10;  WHEN 42 THEN 11&#10;  WHEN 43 THEN 11&#10;  WHEN 44 THEN 11&#10;  WHEN 45 THEN 11&#10;  WHEN 46 THEN 11&#10;  WHEN 47 THEN 11&#10;  WHEN 48 THEN 11&#10;  WHEN 49 THEN 11&#10;  WHEN 50 THEN 11&#10;  WHEN 51 THEN 11&#10;  WHEN 52 THEN 11&#10;  WHEN 53 THEN 11&#10;  WHEN 54 THEN 11&#10;  WHEN 55 THEN 11&#10;  WHEN 56 THEN 11&#10;  WHEN 57 THEN 11&#10;  WHEN 58 THEN 11&#10;  WHEN 59 THEN 11&#10;  WHEN 60 THEN 11&#10;  WHEN 61 THEN 11&#10;  WHEN 62 THEN 11&#10;  WHEN 63 THEN 11&#10;  WHEN 64 THEN 11&#10;  WHEN 65 THEN 11&#10;  WHEN 66 THEN 11&#10;  WHEN 67 THEN 11&#10;  WHEN 68 THEN 11&#10;  WHEN 69 THEN 11&#10;  WHEN 70 THEN 11&#10;  WHEN 71 THEN 11&#10;  WHEN 72 THEN 11&#10;  WHEN 73 THEN 11&#10;  WHEN 74 THEN 11&#10;  WHEN 75 THEN 11&#10;  WHEN 78 THEN 11&#10;  ELSE [impclick_daydif]&#10;END' />
            <calculation column='[Imps (copy)]' formula='[imps]' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Release Price (copy)]' formula='[release_price]*40' />
            <calculation column='[Release Price (thb) (bin)]' formula='SYS_NUMBIN([Release Price (copy)],2000)' />
            <calculation column='[Release Year (group)]' formula='CASE [release_year]&#10;  WHEN &quot;2016&quot; THEN &quot;2016&quot;&#10;  WHEN &quot;22016&quot; THEN &quot;2016&quot;&#10;  ELSE [release_year]&#10;END' />
            <calculation column='[Room Name (group)]' formula='CASE [room_name]&#10;  WHEN &quot;amulet&quot; THEN &quot;amulet&quot;&#10;  WHEN &quot;amuletbang&quot; THEN &quot;amulet&quot;&#10;  WHEN &quot;amuletpathumthani&quot; THEN &quot;amulet&quot;&#10;  WHEN &quot;amuletphra&quot; THEN &quot;amulet&quot;&#10;  WHEN &quot;amuletphrae&quot; THEN &quot;amulet&quot;&#10;  WHEN &quot;amuletprachinburip&quot; THEN &quot;amulet&quot;&#10;  WHEN &quot;amuletrayong&quot; THEN &quot;amulet&quot;&#10;  WHEN &quot;amuletsi&quot; THEN &quot;amulet&quot;&#10;  WHEN &quot;amuletsingburip&quot; THEN &quot;amulet&quot;&#10;  WHEN &quot;amuletwrap&quot; THEN &quot;amulet&quot;&#10;  WHEN &quot;astina&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;auto&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;auto_part&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autobangkok_metropolitanp&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autoburiram&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autochachoengsao&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autochiangrai&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autocontextual&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autokalasinp&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autokanchanaburi&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autokhonkaen&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autokhonkaenp&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autoloei&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;automahasarakham&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autonakhonpathom&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autonakhonphanom&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autonakhonphanomp&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autonakhonratchasima&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autonakhonsawan&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autonakhonsithammarat&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autonongbualamphu&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autopattanip&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autophetchabun&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autophichit&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autophitsanulok&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autorayong&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autosakonnakhon&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autosaraburi&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autosisaket&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autosongkhla&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autosukhothai&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autosuphanburi&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autosuratthani&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autosurin&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autotak&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autothanyaburip&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autoudonthani&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autowrap&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;car&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;car_parts&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;cyclone&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;strada&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;bicycles&quot; THEN &quot;bicycles&quot;&#10;  WHEN &quot;bicyclesbangkok&quot; THEN &quot;bicycles&quot;&#10;  WHEN &quot;bicycleskanchanaburi&quot; THEN &quot;bicycles&quot;&#10;  WHEN &quot;bicycleskrabi&quot; THEN &quot;bicycles&quot;&#10;  WHEN &quot;bicycleslamphun&quot; THEN &quot;bicycles&quot;&#10;  WHEN &quot;bicyclessamutsakhon&quot; THEN &quot;bicycles&quot;&#10;  WHEN &quot;bicyclessongkhla&quot; THEN &quot;bicycles&quot;&#10;  WHEN &quot;bicyclessuratthani&quot; THEN &quot;bicycles&quot;&#10;  WHEN &quot;bicyclesubonratchathani&quot; THEN &quot;bicycles&quot;&#10;  WHEN &quot;business_for_sale&quot; THEN &quot;business_for_sale&quot;&#10;  WHEN &quot;business_service&quot; THEN &quot;business_for_sale&quot;&#10;  WHEN &quot;computer&quot; THEN &quot;computer&quot;&#10;  WHEN &quot;computerkhonkaen&quot; THEN &quot;computer&quot;&#10;  WHEN &quot;computerprachuapkhirikhan&quot; THEN &quot;computer&quot;&#10;  WHEN &quot;electric&quot; THEN &quot;electric&quot;&#10;  WHEN &quot;electricnakhonsawan&quot; THEN &quot;electric&quot;&#10;  WHEN &quot;electricphitsanulok&quot; THEN &quot;electric&quot;&#10;  WHEN &quot;electricratchaburi&quot; THEN &quot;electric&quot;&#10;  WHEN &quot;electricubonratchathani&quot; THEN &quot;electric&quot;&#10;  WHEN &quot;lifestyle&quot; THEN &quot;lifestyle&quot;&#10;  WHEN &quot;lifestyle..&quot; THEN &quot;lifestyle&quot;&#10;  WHEN &quot;mom_and_kid&quot; THEN &quot;mom_and_kid&quot;&#10;  WHEN &quot;mom_and_kidsongkhla&quot; THEN &quot;mom_and_kid&quot;&#10;  WHEN &quot;pet&quot; THEN &quot;pet&quot;&#10;  WHEN &quot;petkanchanaburi&quot; THEN &quot;pet&quot;&#10;  WHEN &quot;petkhonkaen&quot; THEN &quot;pet&quot;&#10;  WHEN &quot;petnakhonratchasima&quot; THEN &quot;pet&quot;&#10;  WHEN &quot;petphetchabun&quot; THEN &quot;pet&quot;&#10;  WHEN &quot;phone_device&quot; THEN &quot;phone_device&quot;&#10;  WHEN &quot;phone_devicenakhonratchasima&quot; THEN &quot;phone_device&quot;&#10;  WHEN &quot;phone_devicesongkhla&quot; THEN &quot;phone_device&quot;&#10;  WHEN &quot;realestate&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestateayutthaya&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatebangkok&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestateburiram&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatechachoengsao&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatechaiyaphum&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatechiang&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatechiangmai&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatechiangrai&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatechonburi&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatecontextual&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatekanchanaburi&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatekhonkaen&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatekrabi&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatelopburi&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatenakhonratchasima&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatenakhonsawan&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatenakhonsithammarat&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatenonthaburi&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatepathumthani&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatephangnga&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatephayao&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatephetchabun&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatephichit&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatephuket&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestateprachinburi&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestateratchaburi&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestaterayong&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatesakaeo&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatesakonnakhon&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatesamutprakan&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatesamutsakhon&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatesaraburi&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatesongkhla&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatesuratthani&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatesurin&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestateubonratchathani&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestateudonthani&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestateuthaithani&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatewrap&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;shoes&quot; THEN &quot;shoes&quot;&#10;  WHEN &quot;shoesnakhonsithammarat&quot; THEN &quot;shoes&quot;&#10;  WHEN &quot;shoesphuket&quot; THEN &quot;shoes&quot;&#10;  WHEN &quot;shoessongkhla&quot; THEN &quot;shoes&quot;&#10;  ELSE [room_name]&#10;END' />
            <calculation column='[Screensize (bin)]' formula='SYS_NUMBIN([screensize],1)' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='2850673' timestamp-start='2017-01-25 10:18:49.339' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_417990356997468162</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CPSubmit (copy 2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_417990356997468162</remote-alias>
              <ordinal>0</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>3.0</statistic>
                <statistic aggregation='Max' datatype='real'>7.1428571428571432</statistic>
                <statistic aggregation='Count' datatype='integer'>2850673</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>23</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>2850673</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Release Price (copy)</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Release Price (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Release Price (copy)</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>58</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>800</statistic>
                <statistic aggregation='Max' datatype='integer'>30400</statistic>
                <statistic aggregation='Count' datatype='integer'>2579174</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Release Price (thb) (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Release Price (thb) (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Release Price (thb) (bin)</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>15</statistic>
                <statistic aggregation='Count' datatype='integer'>2579174</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Screensize (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Screensize (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Screensize (bin)</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>10</statistic>
                <statistic aggregation='Count' datatype='integer'>2136330</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>brand</remote-name>
              <remote-type>129</remote-type>
              <local-name>[brand]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>brand</remote-alias>
              <ordinal>5</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>38</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;acer&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;zte&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2136335</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[carrier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier</remote-alias>
              <ordinal>6</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AIS&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wi-Fi&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2850673</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>clicks</remote-name>
              <remote-type>16</remote-type>
              <local-name>[clicks]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>clicks</remote-alias>
              <ordinal>7</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>11</statistic>
                <statistic aggregation='Count' datatype='integer'>2739883</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>24</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cluster</remote-name>
              <remote-type>4</remote-type>
              <local-name>[cluster]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cluster</remote-alias>
              <ordinal>8</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>13.0</statistic>
                <statistic aggregation='Count' datatype='integer'>2136335</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>26</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dvc_commercname</remote-name>
              <remote-type>129</remote-type>
              <local-name>[dvc_commercname]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dvc_commercname</remote-alias>
              <ordinal>9</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3694</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;zyq&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2848178</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dvc_techname</remote-name>
              <remote-type>129</remote-type>
              <local-name>[dvc_techname]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dvc_techname</remote-alias>
              <ordinal>10</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4157</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;zyq&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2848178</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>20</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ful_channel</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ful_channel]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ful_channel</remote-alias>
              <ordinal>11</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;callcenter&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;online&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>19394</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hl_platform</remote-name>
              <remote-type>129</remote-type>
              <local-name>[hl_platform]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hl_platform</remote-alias>
              <ordinal>12</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ANDROID&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;PC_OTHERS&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2848178</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Impb4Click (copy)</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Impb4Click (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Impb4Click (copy)</remote-alias>
              <ordinal>13</ordinal>
              <family>impb4click_byoffer</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>56</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>223</statistic>
                <statistic aggregation='Count' datatype='integer'>43902</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>30</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>impb4click</remote-name>
              <remote-type>2</remote-type>
              <local-name>[impb4click]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>impb4click</remote-alias>
              <ordinal>13</ordinal>
              <family>impb4click_byoffer</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>56</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>223</statistic>
                <statistic aggregation='Count' datatype='integer'>43902</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>30</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Impclick Daydif (group)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Impclick Daydif (group)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Impclick Daydif (group)</remote-alias>
              <ordinal>14</ordinal>
              <family>impb4click_byoffer</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>781.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.01778962234066785</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>11</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.4363055694588599</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.43630060034522006</statistic>
                <statistic aggregation='Var' datatype='real'>0.19036254994082</statistic>
                <statistic aggregation='VarP' datatype='real'>0.19035821386159943</statistic>
                <statistic aggregation='Count' datatype='integer'>43902</statistic>
                <statistic aggregation='Median' datatype='integer'>11</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>8371.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>impclick_daydif</remote-name>
              <remote-type>16</remote-type>
              <local-name>[impclick_daydif]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>impclick_daydif</remote-alias>
              <ordinal>14</ordinal>
              <family>impb4click_byoffer</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>20</statistic>
                <statistic aggregation='Count' datatype='integer'>43902</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>29</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Imps (copy)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Imps (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Imps (copy)</remote-alias>
              <ordinal>15</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>119</statistic>
                <statistic aggregation='Count' datatype='integer'>2739883</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>31</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>imps</remote-name>
              <remote-type>16</remote-type>
              <local-name>[imps]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>imps</remote-alias>
              <ordinal>15</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>119</statistic>
                <statistic aggregation='Count' datatype='integer'>2739883</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>31</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>landings</remote-name>
              <remote-type>16</remote-type>
              <local-name>[landings]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>landings</remote-alias>
              <ordinal>16</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>95</statistic>
                <statistic aggregation='Count' datatype='integer'>127107</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>27</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>offer</remote-name>
              <remote-type>129</remote-type>
              <local-name>[offer (impb4click_byoffer)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>offer</remote-alias>
              <ordinal>17</ordinal>
              <family>impb4click_byoffer</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;lucky-number&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;sim-platinum-number&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>43902</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>offer1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[offer]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>offer1</remote-alias>
              <ordinal>18</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;http://www.googletagmanager.com/ns&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;sim-platinum-number&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2778515</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pt_cat</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pt_cat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pt_cat</remote-alias>
              <ordinal>19</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;cat1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;cat6&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2268579</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>release_month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[release_month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>release_month</remote-alias>
              <ordinal>20</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;September&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2136335</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>release_price</remote-name>
              <remote-type>2</remote-type>
              <local-name>[release_price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>release_price</remote-alias>
              <ordinal>21</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>58</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>20</statistic>
                <statistic aggregation='Max' datatype='integer'>760</statistic>
                <statistic aggregation='Count' datatype='integer'>2579174</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>release_year</remote-name>
              <remote-type>129</remote-type>
              <local-name>[release_year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>release_year</remote-alias>
              <ordinal>22</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;2007&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;22016&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2136335</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>room_id</remote-name>
              <remote-type>2</remote-type>
              <local-name>[room_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>room_id</remote-alias>
              <ordinal>23</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>270</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>300</statistic>
                <statistic aggregation='Count' datatype='integer'>467099</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Room Name (group)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Room Name (group)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Room Name (group)</remote-alias>
              <ordinal>24</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>86</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;watch&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2656842</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;family&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>room_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[room_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>room_name</remote-alias>
              <ordinal>24</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>121</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;watch&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2656842</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>screensize</remote-name>
              <remote-type>16</remote-type>
              <local-name>[screensize]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>screensize</remote-alias>
              <ordinal>25</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>10</statistic>
                <statistic aggregation='Count' datatype='integer'>2136330</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>selects</remote-name>
              <remote-type>2</remote-type>
              <local-name>[selects]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>selects</remote-alias>
              <ordinal>26</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>772</statistic>
                <statistic aggregation='Count' datatype='integer'>127107</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>28</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sighted_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[sighted_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sighted_date</remote-alias>
              <ordinal>27</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>24</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2017-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2017-01-24#</statistic>
                <statistic aggregation='Count' datatype='integer'>2850673</statistic>
                <statistic aggregation='Median' datatype='date'>#2017-01-18#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>source</remote-name>
              <remote-type>129</remote-type>
              <local-name>[source (impb4click_byoffer)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>source</remote-alias>
              <ordinal>28</ordinal>
              <family>impb4click_byoffer</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;kd&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;pt&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>43902</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>source1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[source]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>source1</remote-alias>
              <ordinal>29</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;fb&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;pt&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2850673</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>submits</remote-name>
              <remote-type>16</remote-type>
              <local-name>[submits]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>submits</remote-alias>
              <ordinal>30</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>10</statistic>
                <statistic aggregation='Count' datatype='integer'>127107</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>25</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tapad_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tapad_id (impb4click_byoffer)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tapad_id</remote-alias>
              <ordinal>31</ordinal>
              <family>impb4click_byoffer</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14789</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;00013e71-dcbd-11e6-b0c2-005056a265eb&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;fffe5ee1-e107-11e6-b0c2-005056a265eb&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>43902</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>21</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tapad_id1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tapad_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tapad_id1</remote-alias>
              <ordinal>32</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1986973</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;00000491-69bf-11e6-92d4-005056a2171e&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;fffff941-225c-11e6-8717-0621605bd0b7&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2850673</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>22</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Impb4Click (group)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Impb4Click (group)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Impb4Click (group)</remote-alias>
              <family>impb4click_byoffer</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>16</statistic>
                <statistic aggregation='Count' datatype='integer'>43902</statistic>
                <statistic aggregation='Median' datatype='integer'>16</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Release Year (group)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Release Year (group)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Release Year (group)</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;2007&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;22016&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2136335</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;2012&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.618799' measure-ordering='alphabetic' measure-percentage='0.381201' rowDisplayCount='10' show-aliased-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:offer:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;mnp-huawei-p9&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;mnp-asus-zenfone-55&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;mnp-samsung-galaxy-note5&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;mnp-samsung-galaxy-j5-prime&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;mnp-samsung-galaxy-j2-prime&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;mnp-samsung-galaxy-j7-prime&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;mnp-huawei-mate9&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:source:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;fb&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;oth&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;pt&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;kd&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:offer:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;mnp-samsung-galaxy-j2&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;mnp-iphone-se&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;mnp-samsung-galaxy-j2-prime&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>%all%</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Nice Number&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;mnp-device-discount-samsung-non-share&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;mnp-free-dtac-pocket-wifi&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;mnp-samsung-galaxy-j7-prime&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;mnp-vivo-v5&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;tariff&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>%null%</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;mnp-asus-zenfone-55&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;mnp-device-discount-samsung&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;mnp-huawei-p9&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;mnp-oppo-mirror5&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;mnp-samsung-galaxy-j5&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;iphone-discount&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;lucky-number&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;mgm&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;mnp-samsung-galaxy-a5&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;mnp-samsung-galaxy-note5&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;mnp-samsung-galaxy-nj2&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;mnp-device-clearance&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;mnp-samsung-galaxy-j5-prime&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;booster&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;sim-nice-number&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;device-discount&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;sim-platinum-number&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;mnp-asus-zenfone-45&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;mnp-iphone6-6plus&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;mnp-free-device&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;mnp-huawei-mate9&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;mnp-free-dtac-phone-s2&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;mnp-iphone7&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Thailand&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Day Difference between 1st Click &amp; 1st Impression'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column datatype='integer' name='[Impb4Click (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[impb4click]'>
                <bin value='16'>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>32</value>
                  <value>34</value>
                  <value>35</value>
                  <value>36</value>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>43</value>
                  <value>46</value>
                  <value>47</value>
                  <value>49</value>
                  <value>50</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                  <value>61</value>
                  <value>64</value>
                  <value>65</value>
                  <value>67</value>
                  <value>68</value>
                  <value>80</value>
                  <value>83</value>
                  <value>223</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='16' value='&gt; 15' />
              </aliases>
            </column>
            <column datatype='integer' name='[Impclick Daydif (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[impclick_daydif]'>
                <bin value='11'>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                  <value>35</value>
                  <value>36</value>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                  <value>55</value>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>78</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='11' value='&gt;10' />
              </aliases>
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Impb4Click' datatype='integer' name='[impb4click]' role='measure' type='quantitative' />
            <column caption='Impclick Daydif' datatype='integer' name='[impclick_daydif]' role='measure' type='quantitative' />
            <column-instance column='[clicks]' derivation='None' name='[none:clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[impb4click]' derivation='None' name='[none:impb4click:qk]' pivot='key' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[pcto:usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Exclusions (Impb4Click,Offer)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:impb4click:qk]' />
                <groupfilter function='level-members' level='[none:offer:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:impb4click:qk]' member='236' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-oppo-mirror5&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impb4Click (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Impb4Click (group)]' />
              <groupfilter function='member' level='[Impb4Click (group)]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:clicks:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter from='&quot;mnp-samsung-galaxy-j2&quot;' function='range' level='[none:offer:nk]' to='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;fb&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:clicks:qk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Exclusions (Impb4Click,Offer)]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impb4Click (group)]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impclick Daydif (group)]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk] * [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[pcto:usr:Calculation_855683945803128832:qk])</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impclick Daydif (group)]</cols>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Funnel'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Funnel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='CPM' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[CPSubmit (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [pt_cat]=&apos;cat1&apos; then 250/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat3&apos; then 200/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat6&apos; then 120/35&#13;&#10;ELSE 3&#13;&#10;END' />
            </column>
            <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
            </column>
            <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([submits])/sum([landings])' />
            </column>
            <column caption='CPSubmit' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_417990356997468162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([imps])/1000)/sum([submits])*MAX([CPSubmit (copy 2)])' />
            </column>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
            <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Pt Cat' datatype='string' name='[pt_cat]' role='dimension' type='nominal' />
            <column caption='Selects' datatype='integer' name='[selects]' role='measure' type='quantitative' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[clicks]' derivation='Sum' name='[sum:clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[imps]' derivation='Sum' name='[sum:imps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[landings]' derivation='Sum' name='[sum:landings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[selects]' derivation='Sum' name='[sum:selects:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_417990356996841472]' derivation='User' name='[usr:Calculation_417990356996841472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997001217]' derivation='User' name='[usr:Calculation_417990356997001217:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997468162]' derivation='User' name='[usr:Calculation_417990356997468162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803309057]' derivation='User' name='[usr:Calculation_855683945803309057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:selects:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter from='&quot;mnp-samsung-galaxy-j2&quot;' function='range' level='[none:offer:nk]' to='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:offer:nk]' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:source:nk]' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;oth&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;kd&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;pt&quot;</bucket>
              <bucket>&quot;fb&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]' value='73' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' value='36' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' max='30.0' palette='tableau-red-green' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' />
              <text column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk] / [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk])</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Kaidee &amp; Pantip Funnel Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='CPM' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[CPSubmit (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [pt_cat]=&apos;cat1&apos; then 250/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat3&apos; then 200/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat6&apos; then 120/35&#13;&#10;ELSE 3&#13;&#10;END' />
            </column>
            <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
            </column>
            <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([submits])/sum([landings])' />
            </column>
            <column caption='CPSubmit' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_417990356997468162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([imps])/1000)/sum([submits])*MAX([CPSubmit (copy 2)])' />
            </column>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
            <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Pt Cat' datatype='string' name='[pt_cat]' role='dimension' type='nominal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[clicks]' derivation='Sum' name='[sum:clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[imps]' derivation='Sum' name='[sum:imps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[landings]' derivation='Sum' name='[sum:landings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_417990356996841472]' derivation='User' name='[usr:Calculation_417990356996841472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997001217]' derivation='User' name='[usr:Calculation_417990356997001217:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997468162]' derivation='User' name='[usr:Calculation_417990356997468162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803309057]' derivation='User' name='[usr:Calculation_855683945803309057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter from='&quot;mnp-samsung-galaxy-j2&quot;' function='range' level='[none:offer:nk]' to='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:offer:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;tariff&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='10' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk] + [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]))))))))</rows>
        <cols>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk] / [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Kaidee Pantip Room Performance'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='CPM' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[CPSubmit (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [pt_cat]=&apos;cat1&apos; then 250/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat3&apos; then 200/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat6&apos; then 120/35&#13;&#10;ELSE 3&#13;&#10;END' />
            </column>
            <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
            </column>
            <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([submits])/sum([landings])' />
            </column>
            <column caption='CPSubmit' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_417990356997468162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([imps])/1000)/sum([submits])*MAX([CPSubmit (copy 2)])' />
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_544935571523895296]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='index()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
            </column>
            <column datatype='string' name='[Room Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[room_name]'>
                <bin value='&quot;amulet&quot;'>
                  <value>&quot;amulet&quot;</value>
                  <value>&quot;amuletbang&quot;</value>
                  <value>&quot;amuletpathumthani&quot;</value>
                  <value>&quot;amuletphra&quot;</value>
                  <value>&quot;amuletphrae&quot;</value>
                  <value>&quot;amuletprachinburip&quot;</value>
                  <value>&quot;amuletrayong&quot;</value>
                  <value>&quot;amuletsi&quot;</value>
                  <value>&quot;amuletsingburip&quot;</value>
                  <value>&quot;amuletwrap&quot;</value>
                </bin>
                <bin value='&quot;astina&quot;'>
                  <value>&quot;astina&quot;</value>
                  <value>&quot;auto&quot;</value>
                  <value>&quot;auto_part&quot;</value>
                  <value>&quot;autobangkok_metropolitanp&quot;</value>
                  <value>&quot;autoburiram&quot;</value>
                  <value>&quot;autochachoengsao&quot;</value>
                  <value>&quot;autochiangrai&quot;</value>
                  <value>&quot;autocontextual&quot;</value>
                  <value>&quot;autokalasinp&quot;</value>
                  <value>&quot;autokanchanaburi&quot;</value>
                  <value>&quot;autokhonkaen&quot;</value>
                  <value>&quot;autokhonkaenp&quot;</value>
                  <value>&quot;autoloei&quot;</value>
                  <value>&quot;automahasarakham&quot;</value>
                  <value>&quot;autonakhonpathom&quot;</value>
                  <value>&quot;autonakhonphanom&quot;</value>
                  <value>&quot;autonakhonphanomp&quot;</value>
                  <value>&quot;autonakhonratchasima&quot;</value>
                  <value>&quot;autonakhonsawan&quot;</value>
                  <value>&quot;autonakhonsithammarat&quot;</value>
                  <value>&quot;autonongbualamphu&quot;</value>
                  <value>&quot;autopattanip&quot;</value>
                  <value>&quot;autophetchabun&quot;</value>
                  <value>&quot;autophichit&quot;</value>
                  <value>&quot;autophitsanulok&quot;</value>
                  <value>&quot;autorayong&quot;</value>
                  <value>&quot;autosakonnakhon&quot;</value>
                  <value>&quot;autosaraburi&quot;</value>
                  <value>&quot;autosisaket&quot;</value>
                  <value>&quot;autosongkhla&quot;</value>
                  <value>&quot;autosukhothai&quot;</value>
                  <value>&quot;autosuphanburi&quot;</value>
                  <value>&quot;autosuratthani&quot;</value>
                  <value>&quot;autosurin&quot;</value>
                  <value>&quot;autotak&quot;</value>
                  <value>&quot;autothanyaburip&quot;</value>
                  <value>&quot;autoudonthani&quot;</value>
                  <value>&quot;autowrap&quot;</value>
                  <value>&quot;car&quot;</value>
                  <value>&quot;car_parts&quot;</value>
                  <value>&quot;cyclone&quot;</value>
                  <value>&quot;strada&quot;</value>
                </bin>
                <bin value='&quot;bicycles&quot;'>
                  <value>&quot;bicycles&quot;</value>
                  <value>&quot;bicyclesbangkok&quot;</value>
                  <value>&quot;bicycleskanchanaburi&quot;</value>
                  <value>&quot;bicycleskrabi&quot;</value>
                  <value>&quot;bicycleslamphun&quot;</value>
                  <value>&quot;bicyclessamutsakhon&quot;</value>
                  <value>&quot;bicyclessongkhla&quot;</value>
                  <value>&quot;bicyclessuratthani&quot;</value>
                  <value>&quot;bicyclesubonratchathani&quot;</value>
                </bin>
                <bin value='&quot;business_for_sale&quot;'>
                  <value>&quot;business_for_sale&quot;</value>
                  <value>&quot;business_service&quot;</value>
                </bin>
                <bin value='&quot;computer&quot;'>
                  <value>&quot;computer&quot;</value>
                  <value>&quot;computerkhonkaen&quot;</value>
                  <value>&quot;computerprachuapkhirikhan&quot;</value>
                </bin>
                <bin value='&quot;electric&quot;'>
                  <value>&quot;electric&quot;</value>
                  <value>&quot;electricnakhonsawan&quot;</value>
                  <value>&quot;electricphitsanulok&quot;</value>
                  <value>&quot;electricratchaburi&quot;</value>
                  <value>&quot;electricubonratchathani&quot;</value>
                </bin>
                <bin value='&quot;lifestyle&quot;'>
                  <value>&quot;lifestyle&quot;</value>
                  <value>&quot;lifestyle..&quot;</value>
                </bin>
                <bin value='&quot;mom_and_kid&quot;'>
                  <value>&quot;mom_and_kid&quot;</value>
                  <value>&quot;mom_and_kidsongkhla&quot;</value>
                </bin>
                <bin value='&quot;pet&quot;'>
                  <value>&quot;pet&quot;</value>
                  <value>&quot;petkanchanaburi&quot;</value>
                  <value>&quot;petkhonkaen&quot;</value>
                  <value>&quot;petnakhonratchasima&quot;</value>
                  <value>&quot;petphetchabun&quot;</value>
                </bin>
                <bin value='&quot;phone_device&quot;'>
                  <value>&quot;phone_device&quot;</value>
                  <value>&quot;phone_devicenakhonratchasima&quot;</value>
                  <value>&quot;phone_devicesongkhla&quot;</value>
                </bin>
                <bin value='&quot;realestate&quot;'>
                  <value>&quot;realestate&quot;</value>
                  <value>&quot;realestateayutthaya&quot;</value>
                  <value>&quot;realestatebangkok&quot;</value>
                  <value>&quot;realestateburiram&quot;</value>
                  <value>&quot;realestatechachoengsao&quot;</value>
                  <value>&quot;realestatechaiyaphum&quot;</value>
                  <value>&quot;realestatechiang&quot;</value>
                  <value>&quot;realestatechiangmai&quot;</value>
                  <value>&quot;realestatechiangrai&quot;</value>
                  <value>&quot;realestatechonburi&quot;</value>
                  <value>&quot;realestatecontextual&quot;</value>
                  <value>&quot;realestatekanchanaburi&quot;</value>
                  <value>&quot;realestatekhonkaen&quot;</value>
                  <value>&quot;realestatekrabi&quot;</value>
                  <value>&quot;realestatelopburi&quot;</value>
                  <value>&quot;realestatenakhonratchasima&quot;</value>
                  <value>&quot;realestatenakhonsawan&quot;</value>
                  <value>&quot;realestatenakhonsithammarat&quot;</value>
                  <value>&quot;realestatenonthaburi&quot;</value>
                  <value>&quot;realestatepathumthani&quot;</value>
                  <value>&quot;realestatephangnga&quot;</value>
                  <value>&quot;realestatephayao&quot;</value>
                  <value>&quot;realestatephetchabun&quot;</value>
                  <value>&quot;realestatephichit&quot;</value>
                  <value>&quot;realestatephuket&quot;</value>
                  <value>&quot;realestateprachinburi&quot;</value>
                  <value>&quot;realestateratchaburi&quot;</value>
                  <value>&quot;realestaterayong&quot;</value>
                  <value>&quot;realestatesakaeo&quot;</value>
                  <value>&quot;realestatesakonnakhon&quot;</value>
                  <value>&quot;realestatesamutprakan&quot;</value>
                  <value>&quot;realestatesamutsakhon&quot;</value>
                  <value>&quot;realestatesaraburi&quot;</value>
                  <value>&quot;realestatesongkhla&quot;</value>
                  <value>&quot;realestatesuratthani&quot;</value>
                  <value>&quot;realestatesurin&quot;</value>
                  <value>&quot;realestateubonratchathani&quot;</value>
                  <value>&quot;realestateudonthani&quot;</value>
                  <value>&quot;realestateuthaithani&quot;</value>
                  <value>&quot;realestatewrap&quot;</value>
                </bin>
                <bin value='&quot;shoes&quot;'>
                  <value>&quot;shoes&quot;</value>
                  <value>&quot;shoesnakhonsithammarat&quot;</value>
                  <value>&quot;shoesphuket&quot;</value>
                  <value>&quot;shoessongkhla&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;amulet&quot;' value='amulet' />
                <alias key='&quot;astina&quot;' value='auto' />
                <alias key='&quot;bicycles&quot;' value='bicycles' />
                <alias key='&quot;business_for_sale&quot;' value='business_service' />
                <alias key='&quot;computer&quot;' value='computer' />
                <alias key='&quot;electric&quot;' value='electric' />
                <alias key='&quot;lifestyle&quot;' value='lifestyle' />
                <alias key='&quot;mom_and_kid&quot;' value='mom_and_kid' />
                <alias key='&quot;pet&quot;' value='pet' />
                <alias key='&quot;phone_device&quot;' value='phone_device' />
                <alias key='&quot;realestate&quot;' value='realestate' />
                <alias key='&quot;shoes&quot;' value='shoes' />
              </aliases>
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
            <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[room_name]' derivation='None' name='[none:room_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Pt Cat' datatype='string' name='[pt_cat]' role='dimension' type='nominal' />
            <column caption='Room Name' datatype='string' name='[room_name]' role='dimension' type='nominal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[clicks]' derivation='Sum' name='[sum:clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[imps]' derivation='Sum' name='[sum:imps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[landings]' derivation='Sum' name='[sum:landings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_417990356996841472]' derivation='User' name='[usr:Calculation_417990356996841472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997001217]' derivation='User' name='[usr:Calculation_417990356997001217:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997468162]' derivation='User' name='[usr:Calculation_417990356997468162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_544935571523895296]' derivation='User' name='[usr:Calculation_544935571523895296:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803309057]' derivation='User' name='[usr:Calculation_855683945803309057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Room Name (group)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;accessories&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;agriculture&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;camera&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;cate&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;l&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;land&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;m\%20frontier\%20navara&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;pra_kru&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;talisman&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;watchp&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Room Name (group)]' />
              <groupfilter function='member' level='[Room Name (group)]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter from='&quot;mnp-samsung-galaxy-j2&quot;' function='range' level='[none:offer:nk]' to='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:room_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:room_name:nk]' member='&quot;&quot;' />
                <groupfilter function='member' level='[none:room_name:nk]' member='&quot;08&quot;' />
                <groupfilter function='member' level='[none:room_name:nk]' member='&quot;2&quot;' />
                <groupfilter function='member' level='[none:room_name:nk]' member='&quot;5&quot;' />
                <groupfilter function='member' level='[none:room_name:nk]' member='&quot;90&quot;' />
                <groupfilter function='member' level='[none:room_name:nk]' member='&quot;97&quot;' />
                <groupfilter function='member' level='[none:room_name:nk]' member='&quot;a\%20\%20uto&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;pt&quot;</bucket>
              <bucket>&quot;kd&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:1]' included-values='in-range'>
            <min>1</min>
            <max>29</max>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:1]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' value='40' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' max='30.0' min='0.61671428571428577' palette='tableau-red-green' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' />
              <text column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk] / [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)])</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</cols>
        <subtotals>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Kaidee Pantip Room Performance by Offer'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='CPM' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[CPSubmit (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [pt_cat]=&apos;cat1&apos; then 250/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat3&apos; then 200/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat6&apos; then 120/35&#13;&#10;ELSE 3&#13;&#10;END' />
            </column>
            <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
            </column>
            <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([submits])/sum([landings])' />
            </column>
            <column caption='CPSubmit' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_417990356997468162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([imps])/1000)/sum([submits])*MAX([CPSubmit (copy 2)])' />
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_544935571523895296]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='index()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
            </column>
            <column datatype='string' name='[Room Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[room_name]'>
                <bin value='&quot;amulet&quot;'>
                  <value>&quot;amulet&quot;</value>
                  <value>&quot;amuletbang&quot;</value>
                  <value>&quot;amuletpathumthani&quot;</value>
                  <value>&quot;amuletphra&quot;</value>
                  <value>&quot;amuletphrae&quot;</value>
                  <value>&quot;amuletprachinburip&quot;</value>
                  <value>&quot;amuletrayong&quot;</value>
                  <value>&quot;amuletsi&quot;</value>
                  <value>&quot;amuletsingburip&quot;</value>
                  <value>&quot;amuletwrap&quot;</value>
                </bin>
                <bin value='&quot;astina&quot;'>
                  <value>&quot;astina&quot;</value>
                  <value>&quot;auto&quot;</value>
                  <value>&quot;auto_part&quot;</value>
                  <value>&quot;autobangkok_metropolitanp&quot;</value>
                  <value>&quot;autoburiram&quot;</value>
                  <value>&quot;autochachoengsao&quot;</value>
                  <value>&quot;autochiangrai&quot;</value>
                  <value>&quot;autocontextual&quot;</value>
                  <value>&quot;autokalasinp&quot;</value>
                  <value>&quot;autokanchanaburi&quot;</value>
                  <value>&quot;autokhonkaen&quot;</value>
                  <value>&quot;autokhonkaenp&quot;</value>
                  <value>&quot;autoloei&quot;</value>
                  <value>&quot;automahasarakham&quot;</value>
                  <value>&quot;autonakhonpathom&quot;</value>
                  <value>&quot;autonakhonphanom&quot;</value>
                  <value>&quot;autonakhonphanomp&quot;</value>
                  <value>&quot;autonakhonratchasima&quot;</value>
                  <value>&quot;autonakhonsawan&quot;</value>
                  <value>&quot;autonakhonsithammarat&quot;</value>
                  <value>&quot;autonongbualamphu&quot;</value>
                  <value>&quot;autopattanip&quot;</value>
                  <value>&quot;autophetchabun&quot;</value>
                  <value>&quot;autophichit&quot;</value>
                  <value>&quot;autophitsanulok&quot;</value>
                  <value>&quot;autorayong&quot;</value>
                  <value>&quot;autosakonnakhon&quot;</value>
                  <value>&quot;autosaraburi&quot;</value>
                  <value>&quot;autosisaket&quot;</value>
                  <value>&quot;autosongkhla&quot;</value>
                  <value>&quot;autosukhothai&quot;</value>
                  <value>&quot;autosuphanburi&quot;</value>
                  <value>&quot;autosuratthani&quot;</value>
                  <value>&quot;autosurin&quot;</value>
                  <value>&quot;autotak&quot;</value>
                  <value>&quot;autothanyaburip&quot;</value>
                  <value>&quot;autoudonthani&quot;</value>
                  <value>&quot;autowrap&quot;</value>
                  <value>&quot;car&quot;</value>
                  <value>&quot;car_parts&quot;</value>
                  <value>&quot;cyclone&quot;</value>
                  <value>&quot;strada&quot;</value>
                </bin>
                <bin value='&quot;bicycles&quot;'>
                  <value>&quot;bicycles&quot;</value>
                  <value>&quot;bicyclesbangkok&quot;</value>
                  <value>&quot;bicycleskanchanaburi&quot;</value>
                  <value>&quot;bicycleskrabi&quot;</value>
                  <value>&quot;bicycleslamphun&quot;</value>
                  <value>&quot;bicyclessamutsakhon&quot;</value>
                  <value>&quot;bicyclessongkhla&quot;</value>
                  <value>&quot;bicyclessuratthani&quot;</value>
                  <value>&quot;bicyclesubonratchathani&quot;</value>
                </bin>
                <bin value='&quot;business_for_sale&quot;'>
                  <value>&quot;business_for_sale&quot;</value>
                  <value>&quot;business_service&quot;</value>
                </bin>
                <bin value='&quot;computer&quot;'>
                  <value>&quot;computer&quot;</value>
                  <value>&quot;computerkhonkaen&quot;</value>
                  <value>&quot;computerprachuapkhirikhan&quot;</value>
                </bin>
                <bin value='&quot;electric&quot;'>
                  <value>&quot;electric&quot;</value>
                  <value>&quot;electricnakhonsawan&quot;</value>
                  <value>&quot;electricphitsanulok&quot;</value>
                  <value>&quot;electricratchaburi&quot;</value>
                  <value>&quot;electricubonratchathani&quot;</value>
                </bin>
                <bin value='&quot;lifestyle&quot;'>
                  <value>&quot;lifestyle&quot;</value>
                  <value>&quot;lifestyle..&quot;</value>
                </bin>
                <bin value='&quot;mom_and_kid&quot;'>
                  <value>&quot;mom_and_kid&quot;</value>
                  <value>&quot;mom_and_kidsongkhla&quot;</value>
                </bin>
                <bin value='&quot;pet&quot;'>
                  <value>&quot;pet&quot;</value>
                  <value>&quot;petkanchanaburi&quot;</value>
                  <value>&quot;petkhonkaen&quot;</value>
                  <value>&quot;petnakhonratchasima&quot;</value>
                  <value>&quot;petphetchabun&quot;</value>
                </bin>
                <bin value='&quot;phone_device&quot;'>
                  <value>&quot;phone_device&quot;</value>
                  <value>&quot;phone_devicenakhonratchasima&quot;</value>
                  <value>&quot;phone_devicesongkhla&quot;</value>
                </bin>
                <bin value='&quot;realestate&quot;'>
                  <value>&quot;realestate&quot;</value>
                  <value>&quot;realestateayutthaya&quot;</value>
                  <value>&quot;realestatebangkok&quot;</value>
                  <value>&quot;realestateburiram&quot;</value>
                  <value>&quot;realestatechachoengsao&quot;</value>
                  <value>&quot;realestatechaiyaphum&quot;</value>
                  <value>&quot;realestatechiang&quot;</value>
                  <value>&quot;realestatechiangmai&quot;</value>
                  <value>&quot;realestatechiangrai&quot;</value>
                  <value>&quot;realestatechonburi&quot;</value>
                  <value>&quot;realestatecontextual&quot;</value>
                  <value>&quot;realestatekanchanaburi&quot;</value>
                  <value>&quot;realestatekhonkaen&quot;</value>
                  <value>&quot;realestatekrabi&quot;</value>
                  <value>&quot;realestatelopburi&quot;</value>
                  <value>&quot;realestatenakhonratchasima&quot;</value>
                  <value>&quot;realestatenakhonsawan&quot;</value>
                  <value>&quot;realestatenakhonsithammarat&quot;</value>
                  <value>&quot;realestatenonthaburi&quot;</value>
                  <value>&quot;realestatepathumthani&quot;</value>
                  <value>&quot;realestatephangnga&quot;</value>
                  <value>&quot;realestatephayao&quot;</value>
                  <value>&quot;realestatephetchabun&quot;</value>
                  <value>&quot;realestatephichit&quot;</value>
                  <value>&quot;realestatephuket&quot;</value>
                  <value>&quot;realestateprachinburi&quot;</value>
                  <value>&quot;realestateratchaburi&quot;</value>
                  <value>&quot;realestaterayong&quot;</value>
                  <value>&quot;realestatesakaeo&quot;</value>
                  <value>&quot;realestatesakonnakhon&quot;</value>
                  <value>&quot;realestatesamutprakan&quot;</value>
                  <value>&quot;realestatesamutsakhon&quot;</value>
                  <value>&quot;realestatesaraburi&quot;</value>
                  <value>&quot;realestatesongkhla&quot;</value>
                  <value>&quot;realestatesuratthani&quot;</value>
                  <value>&quot;realestatesurin&quot;</value>
                  <value>&quot;realestateubonratchathani&quot;</value>
                  <value>&quot;realestateudonthani&quot;</value>
                  <value>&quot;realestateuthaithani&quot;</value>
                  <value>&quot;realestatewrap&quot;</value>
                </bin>
                <bin value='&quot;shoes&quot;'>
                  <value>&quot;shoes&quot;</value>
                  <value>&quot;shoesnakhonsithammarat&quot;</value>
                  <value>&quot;shoesphuket&quot;</value>
                  <value>&quot;shoessongkhla&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;amulet&quot;' value='amulet' />
                <alias key='&quot;astina&quot;' value='auto' />
                <alias key='&quot;bicycles&quot;' value='bicycles' />
                <alias key='&quot;business_for_sale&quot;' value='business_service' />
                <alias key='&quot;computer&quot;' value='computer' />
                <alias key='&quot;electric&quot;' value='electric' />
                <alias key='&quot;lifestyle&quot;' value='lifestyle' />
                <alias key='&quot;mom_and_kid&quot;' value='mom_and_kid' />
                <alias key='&quot;pet&quot;' value='pet' />
                <alias key='&quot;phone_device&quot;' value='phone_device' />
                <alias key='&quot;realestate&quot;' value='realestate' />
                <alias key='&quot;shoes&quot;' value='shoes' />
              </aliases>
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
            <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[room_name]' derivation='None' name='[none:room_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Pt Cat' datatype='string' name='[pt_cat]' role='dimension' type='nominal' />
            <column caption='Room Name' datatype='string' name='[room_name]' role='dimension' type='nominal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[clicks]' derivation='Sum' name='[sum:clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[imps]' derivation='Sum' name='[sum:imps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[landings]' derivation='Sum' name='[sum:landings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_417990356996841472]' derivation='User' name='[usr:Calculation_417990356996841472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997001217]' derivation='User' name='[usr:Calculation_417990356997001217:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997468162]' derivation='User' name='[usr:Calculation_417990356997468162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_544935571523895296]' derivation='User' name='[usr:Calculation_544935571523895296:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' />
            </column-instance>
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803309057]' derivation='User' name='[usr:Calculation_855683945803309057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Room Name (Combined)]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Room Name (group)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;accessories&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;agriculture&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;cate&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;l&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;land&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;m\%20frontier\%20navara&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;pra_kru&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;talisman&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;watchp&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter from='&quot;mnp-samsung-galaxy-j2&quot;' function='range' level='[none:offer:nk]' to='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:offer:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;booster&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-device-discount-samsung&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;tariff&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]'>
            <groupfilter expression='[Calculation_855683945803128832] &gt; 500' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                <groupfilter function='level-members' level='[none:room_name:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;08&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;2&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;5&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;90&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;97&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;a\%20\%20uto&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]'>
            <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' value='76' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' max='100.0' min='0.20857142857142857' palette='tableau-red-green' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' />
              <text column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk] / [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Room Name (Combined)])</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</cols>
        <subtotals>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Kaidee Reach and CTR Timeline'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
            </column>
            <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([submits])/sum([landings])' />
            </column>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
            <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[landings]' derivation='Sum' name='[sum:landings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[sighted_date]' derivation='Day-Trunc' name='[tdy:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356996841472]' derivation='User' name='[usr:Calculation_417990356996841472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997001217]' derivation='User' name='[usr:Calculation_417990356997001217:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803309057]' derivation='User' name='[usr:Calculation_855683945803309057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mgm&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone-se&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone7&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime-v2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j5-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j7-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-note5&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;kd&quot;</bucket>
              <bucket>&quot;pt&quot;</bucket>
              <bucket>&quot;fb&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='3' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='5' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
          <pane id='6' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk] + [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk])))))</rows>
        <cols>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk] * [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[tdy:sighted_date:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Landing Page Performance'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([submits])/sum([landings])' />
            </column>
            <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[landings]' derivation='Sum' name='[sum:landings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sighted_date]' derivation='Day-Trunc' name='[tdy:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997001217]' derivation='User' name='[usr:Calculation_417990356997001217:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter from='&quot;mnp-samsung-galaxy-j2&quot;' function='range' level='[none:offer:nk]' to='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;fb&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;kd&quot;</bucket>
              <bucket>&quot;pt&quot;</bucket>
              <bucket>&quot;fb&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]' field-type='quantitative' max='0.29999999999999999' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' value='10' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
          <pane id='6' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
          <pane id='7' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk] + [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]))</rows>
        <cols>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk] * [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[tdy:sighted_date:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Optimization Results'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
            </column>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[sighted_date]' derivation='Day-Trunc' name='[tdy:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356996841472]' derivation='User' name='[usr:Calculation_417990356996841472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803309057]' derivation='User' name='[usr:Calculation_855683945803309057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mgm&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone-se&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone7&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j5-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j7-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-note5&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;mnp-samsung-galaxy-j2-prime&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-j5-prime&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-j7-prime&quot;</bucket>
              <bucket>&quot;mnp-asus-zenfone-55&quot;</bucket>
              <bucket>&quot;mnp-huawei-mate9&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-note5&quot;</bucket>
              <bucket>&quot;mnp-huawei-p9&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]' field-type='quantitative' max='0.02' min='-0.0044673539518900341' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='3' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk] * ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk] + [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]))))</rows>
        <cols>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk] * [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[tdy:sighted_date:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Performance by Pantip Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='CPM' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[CPSubmit (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [pt_cat]=&apos;cat1&apos; then 250/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat3&apos; then 200/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat6&apos; then 120/35&#13;&#10;ELSE 3&#13;&#10;END' />
            </column>
            <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
            </column>
            <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([submits])/sum([landings])' />
            </column>
            <column caption='CPSubmit' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_417990356997468162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([imps])/1000)/sum([submits])*MAX([CPSubmit (copy 2)])' />
            </column>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
            <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[pt_cat]' derivation='None' name='[none:pt_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Pt Cat' datatype='string' name='[pt_cat]' role='dimension' type='nominal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[clicks]' derivation='Sum' name='[sum:clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[imps]' derivation='Sum' name='[sum:imps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[landings]' derivation='Sum' name='[sum:landings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_417990356996841472]' derivation='User' name='[usr:Calculation_417990356996841472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997001217]' derivation='User' name='[usr:Calculation_417990356997001217:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997468162]' derivation='User' name='[usr:Calculation_417990356997468162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803309057]' derivation='User' name='[usr:Calculation_855683945803309057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mgm&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone-se&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone7&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime-v2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j5-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j7-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-note5&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:pt_cat:nk]' />
              <groupfilter function='member' level='[none:pt_cat:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]'>
            <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]' value='52' />
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' value='68' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='35.0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' palette='tableau-red-green' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' />
              <text column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk] / [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk])</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</cols>
        <subtotals>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Performance by Pantip Category Timeline'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
            </column>
            <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([submits])/sum([landings])' />
            </column>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
            <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[pt_cat]' derivation='None' name='[none:pt_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Pt Cat' datatype='string' name='[pt_cat]' role='dimension' type='nominal' />
            <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[landings]' derivation='Sum' name='[sum:landings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[sighted_date]' derivation='Day-Trunc' name='[tdy:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356996841472]' derivation='User' name='[usr:Calculation_417990356996841472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997001217]' derivation='User' name='[usr:Calculation_417990356997001217:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803309057]' derivation='User' name='[usr:Calculation_855683945803309057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mgm&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone-se&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone7&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime-v2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j5-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j7-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-note5&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:pt_cat:nk]' />
              <groupfilter function='member' level='[none:pt_cat:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]'>
            <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='3' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='5' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
          <pane id='6' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk] + [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk])))))</rows>
        <cols>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk] * [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[tdy:sighted_date:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Room Perf by Offer Pantip'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='CPM' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[CPSubmit (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [pt_cat]=&apos;cat1&apos; then 250/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat3&apos; then 200/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat6&apos; then 120/35&#13;&#10;ELSE 3&#13;&#10;END' />
            </column>
            <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
            </column>
            <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([submits])/sum([landings])' />
            </column>
            <column caption='CPSubmit' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_417990356997468162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([imps])/1000)/sum([submits])*MAX([CPSubmit (copy 2)])' />
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_544935571523895296]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='index()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
            </column>
            <column datatype='string' name='[Room Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[room_name]'>
                <bin value='&quot;amulet&quot;'>
                  <value>&quot;amulet&quot;</value>
                  <value>&quot;amuletbang&quot;</value>
                  <value>&quot;amuletpathumthani&quot;</value>
                  <value>&quot;amuletphra&quot;</value>
                  <value>&quot;amuletphrae&quot;</value>
                  <value>&quot;amuletprachinburip&quot;</value>
                  <value>&quot;amuletrayong&quot;</value>
                  <value>&quot;amuletsi&quot;</value>
                  <value>&quot;amuletsingburip&quot;</value>
                  <value>&quot;amuletwrap&quot;</value>
                </bin>
                <bin value='&quot;astina&quot;'>
                  <value>&quot;astina&quot;</value>
                  <value>&quot;auto&quot;</value>
                  <value>&quot;auto_part&quot;</value>
                  <value>&quot;autobangkok_metropolitanp&quot;</value>
                  <value>&quot;autoburiram&quot;</value>
                  <value>&quot;autochachoengsao&quot;</value>
                  <value>&quot;autochiangrai&quot;</value>
                  <value>&quot;autocontextual&quot;</value>
                  <value>&quot;autokalasinp&quot;</value>
                  <value>&quot;autokanchanaburi&quot;</value>
                  <value>&quot;autokhonkaen&quot;</value>
                  <value>&quot;autokhonkaenp&quot;</value>
                  <value>&quot;autoloei&quot;</value>
                  <value>&quot;automahasarakham&quot;</value>
                  <value>&quot;autonakhonpathom&quot;</value>
                  <value>&quot;autonakhonphanom&quot;</value>
                  <value>&quot;autonakhonphanomp&quot;</value>
                  <value>&quot;autonakhonratchasima&quot;</value>
                  <value>&quot;autonakhonsawan&quot;</value>
                  <value>&quot;autonakhonsithammarat&quot;</value>
                  <value>&quot;autonongbualamphu&quot;</value>
                  <value>&quot;autopattanip&quot;</value>
                  <value>&quot;autophetchabun&quot;</value>
                  <value>&quot;autophichit&quot;</value>
                  <value>&quot;autophitsanulok&quot;</value>
                  <value>&quot;autorayong&quot;</value>
                  <value>&quot;autosakonnakhon&quot;</value>
                  <value>&quot;autosaraburi&quot;</value>
                  <value>&quot;autosisaket&quot;</value>
                  <value>&quot;autosongkhla&quot;</value>
                  <value>&quot;autosukhothai&quot;</value>
                  <value>&quot;autosuphanburi&quot;</value>
                  <value>&quot;autosuratthani&quot;</value>
                  <value>&quot;autosurin&quot;</value>
                  <value>&quot;autotak&quot;</value>
                  <value>&quot;autothanyaburip&quot;</value>
                  <value>&quot;autoudonthani&quot;</value>
                  <value>&quot;autowrap&quot;</value>
                  <value>&quot;car&quot;</value>
                  <value>&quot;car_parts&quot;</value>
                  <value>&quot;cyclone&quot;</value>
                  <value>&quot;strada&quot;</value>
                </bin>
                <bin value='&quot;bicycles&quot;'>
                  <value>&quot;bicycles&quot;</value>
                  <value>&quot;bicyclesbangkok&quot;</value>
                  <value>&quot;bicycleskanchanaburi&quot;</value>
                  <value>&quot;bicycleskrabi&quot;</value>
                  <value>&quot;bicycleslamphun&quot;</value>
                  <value>&quot;bicyclessamutsakhon&quot;</value>
                  <value>&quot;bicyclessongkhla&quot;</value>
                  <value>&quot;bicyclessuratthani&quot;</value>
                  <value>&quot;bicyclesubonratchathani&quot;</value>
                </bin>
                <bin value='&quot;business_for_sale&quot;'>
                  <value>&quot;business_for_sale&quot;</value>
                  <value>&quot;business_service&quot;</value>
                </bin>
                <bin value='&quot;computer&quot;'>
                  <value>&quot;computer&quot;</value>
                  <value>&quot;computerkhonkaen&quot;</value>
                  <value>&quot;computerprachuapkhirikhan&quot;</value>
                </bin>
                <bin value='&quot;electric&quot;'>
                  <value>&quot;electric&quot;</value>
                  <value>&quot;electricnakhonsawan&quot;</value>
                  <value>&quot;electricphitsanulok&quot;</value>
                  <value>&quot;electricratchaburi&quot;</value>
                  <value>&quot;electricubonratchathani&quot;</value>
                </bin>
                <bin value='&quot;lifestyle&quot;'>
                  <value>&quot;lifestyle&quot;</value>
                  <value>&quot;lifestyle..&quot;</value>
                </bin>
                <bin value='&quot;mom_and_kid&quot;'>
                  <value>&quot;mom_and_kid&quot;</value>
                  <value>&quot;mom_and_kidsongkhla&quot;</value>
                </bin>
                <bin value='&quot;pet&quot;'>
                  <value>&quot;pet&quot;</value>
                  <value>&quot;petkanchanaburi&quot;</value>
                  <value>&quot;petkhonkaen&quot;</value>
                  <value>&quot;petnakhonratchasima&quot;</value>
                  <value>&quot;petphetchabun&quot;</value>
                </bin>
                <bin value='&quot;phone_device&quot;'>
                  <value>&quot;phone_device&quot;</value>
                  <value>&quot;phone_devicenakhonratchasima&quot;</value>
                  <value>&quot;phone_devicesongkhla&quot;</value>
                </bin>
                <bin value='&quot;realestate&quot;'>
                  <value>&quot;realestate&quot;</value>
                  <value>&quot;realestateayutthaya&quot;</value>
                  <value>&quot;realestatebangkok&quot;</value>
                  <value>&quot;realestateburiram&quot;</value>
                  <value>&quot;realestatechachoengsao&quot;</value>
                  <value>&quot;realestatechaiyaphum&quot;</value>
                  <value>&quot;realestatechiang&quot;</value>
                  <value>&quot;realestatechiangmai&quot;</value>
                  <value>&quot;realestatechiangrai&quot;</value>
                  <value>&quot;realestatechonburi&quot;</value>
                  <value>&quot;realestatecontextual&quot;</value>
                  <value>&quot;realestatekanchanaburi&quot;</value>
                  <value>&quot;realestatekhonkaen&quot;</value>
                  <value>&quot;realestatekrabi&quot;</value>
                  <value>&quot;realestatelopburi&quot;</value>
                  <value>&quot;realestatenakhonratchasima&quot;</value>
                  <value>&quot;realestatenakhonsawan&quot;</value>
                  <value>&quot;realestatenakhonsithammarat&quot;</value>
                  <value>&quot;realestatenonthaburi&quot;</value>
                  <value>&quot;realestatepathumthani&quot;</value>
                  <value>&quot;realestatephangnga&quot;</value>
                  <value>&quot;realestatephayao&quot;</value>
                  <value>&quot;realestatephetchabun&quot;</value>
                  <value>&quot;realestatephichit&quot;</value>
                  <value>&quot;realestatephuket&quot;</value>
                  <value>&quot;realestateprachinburi&quot;</value>
                  <value>&quot;realestateratchaburi&quot;</value>
                  <value>&quot;realestaterayong&quot;</value>
                  <value>&quot;realestatesakaeo&quot;</value>
                  <value>&quot;realestatesakonnakhon&quot;</value>
                  <value>&quot;realestatesamutprakan&quot;</value>
                  <value>&quot;realestatesamutsakhon&quot;</value>
                  <value>&quot;realestatesaraburi&quot;</value>
                  <value>&quot;realestatesongkhla&quot;</value>
                  <value>&quot;realestatesuratthani&quot;</value>
                  <value>&quot;realestatesurin&quot;</value>
                  <value>&quot;realestateubonratchathani&quot;</value>
                  <value>&quot;realestateudonthani&quot;</value>
                  <value>&quot;realestateuthaithani&quot;</value>
                  <value>&quot;realestatewrap&quot;</value>
                </bin>
                <bin value='&quot;shoes&quot;'>
                  <value>&quot;shoes&quot;</value>
                  <value>&quot;shoesnakhonsithammarat&quot;</value>
                  <value>&quot;shoesphuket&quot;</value>
                  <value>&quot;shoessongkhla&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;amulet&quot;' value='amulet' />
                <alias key='&quot;astina&quot;' value='auto' />
                <alias key='&quot;bicycles&quot;' value='bicycles' />
                <alias key='&quot;business_for_sale&quot;' value='business_service' />
                <alias key='&quot;computer&quot;' value='computer' />
                <alias key='&quot;electric&quot;' value='electric' />
                <alias key='&quot;lifestyle&quot;' value='lifestyle' />
                <alias key='&quot;mom_and_kid&quot;' value='mom_and_kid' />
                <alias key='&quot;pet&quot;' value='pet' />
                <alias key='&quot;phone_device&quot;' value='phone_device' />
                <alias key='&quot;realestate&quot;' value='realestate' />
                <alias key='&quot;shoes&quot;' value='shoes' />
              </aliases>
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
            <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[room_name]' derivation='None' name='[none:room_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Pt Cat' datatype='string' name='[pt_cat]' role='dimension' type='nominal' />
            <column caption='Room Name' datatype='string' name='[room_name]' role='dimension' type='nominal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[clicks]' derivation='Sum' name='[sum:clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[imps]' derivation='Sum' name='[sum:imps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[landings]' derivation='Sum' name='[sum:landings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_417990356996841472]' derivation='User' name='[usr:Calculation_417990356996841472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997001217]' derivation='User' name='[usr:Calculation_417990356997001217:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997468162]' derivation='User' name='[usr:Calculation_417990356997468162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_544935571523895296]' derivation='User' name='[usr:Calculation_544935571523895296:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' />
            </column-instance>
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803309057]' derivation='User' name='[usr:Calculation_855683945803309057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Room Name (Combined)]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Room Name (group)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;accessories&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;agriculture&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;cate&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;l&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;land&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;m\%20frontier\%20navara&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;pra_kru&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;talisman&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;watchp&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter from='&quot;mnp-samsung-galaxy-j2&quot;' function='range' level='[none:offer:nk]' to='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]'>
            <groupfilter expression='[Calculation_855683945803128832] &gt; 500' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                <groupfilter function='level-members' level='[none:room_name:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;08&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;2&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;5&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;90&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;97&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;a\%20\%20uto&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:room_name:nk]' />
              <groupfilter function='member' level='[none:room_name:nk]' member='&quot;all&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]'>
            <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' max='30.0' min='0.20857142857142857' palette='tableau-red-green' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' />
              <text column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk] / [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Room Name (Combined)])</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</cols>
        <subtotals>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Running Total of Submit by #Impressions Before Click'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column datatype='integer' name='[Impb4Click (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[impb4click]'>
                <bin value='16'>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>32</value>
                  <value>34</value>
                  <value>35</value>
                  <value>36</value>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>43</value>
                  <value>46</value>
                  <value>47</value>
                  <value>49</value>
                  <value>50</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                  <value>61</value>
                  <value>64</value>
                  <value>65</value>
                  <value>67</value>
                  <value>68</value>
                  <value>80</value>
                  <value>83</value>
                  <value>223</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='16' value='&gt; 15' />
              </aliases>
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Impb4Click' datatype='integer' name='[impb4click]' role='measure' type='quantitative' />
            <column-instance column='[clicks]' derivation='None' name='[none:clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[impb4click]' derivation='None' name='[none:impb4click:qk]' pivot='key' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column-instance column='[submits]' derivation='Sum' name='[pcto:cum:sum:submits:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Exclusions (Impb4Click,Offer)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:impb4click:qk]' />
                <groupfilter function='level-members' level='[none:offer:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:impb4click:qk]' member='236' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-oppo-mirror5&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impb4Click (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Impb4Click (group)]' />
              <groupfilter function='member' level='[Impb4Click (group)]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:clicks:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter from='&quot;mnp-samsung-galaxy-j2&quot;' function='range' level='[none:offer:nk]' to='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;fb&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:clicks:qk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Exclusions (Impb4Click,Offer)]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impb4Click (group)]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impb4Click (group)]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk] * [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[pcto:cum:sum:submits:qk])</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impb4Click (group)]</cols>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Submitter Device Release Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Release Price (thb)' datatype='integer' name='[Release Price (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[release_price]*40' />
            </column>
            <column caption='Release Price (thb) (bin)' datatype='integer' name='[Release Price (thb) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='3' formula='[Release Price (copy)]' peg='0' size='2000' />
            </column>
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[submits]' derivation='None' name='[none:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Release Price' datatype='integer' datatype-customized='true' name='[release_price]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter from='&quot;mnp-samsung-galaxy-j2&quot;' function='range' level='[none:offer:nk]' to='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:offer:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;iphone-discount&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-device-discount-samsung&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-free-device&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;tariff&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;mnp-iphone-se&quot;</bucket>
              <bucket>&quot;mnp-free-dtac-pocket-wifi&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-j2&quot;</bucket>
              <bucket>&quot;mnp-asus-zenfone-45&quot;</bucket>
              <bucket>&quot;mnp-oppo-mirror5&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-j5&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-a5&quot;</bucket>
              <bucket>&quot;mnp-device-clearance&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;fb&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:submits:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:submits:qk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk] * [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk])</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Release Price (thb) (bin)]</cols>
        <show-full-range>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Release Price (thb) (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Submitter Device Release Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column datatype='string' name='[Release Year (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[release_year]'>
                <bin value='&quot;2016&quot;'>
                  <value>&quot;2016&quot;</value>
                  <value>&quot;22016&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;2016&quot;' value='2016' />
              </aliases>
            </column>
            <column caption='Hl Platform' datatype='string' name='[hl_platform]' role='dimension' type='nominal' />
            <column-instance column='[hl_platform]' derivation='None' name='[none:hl_platform:nk]' pivot='key' type='nominal' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[submits]' derivation='None' name='[none:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Release Year' datatype='string' name='[release_year]' role='dimension' type='nominal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:hl_platform:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:hl_platform:nk]' member='&quot;ANDROID&quot;' />
              <groupfilter function='member' level='[none:hl_platform:nk]' member='&quot;IPHONE&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter from='&quot;mnp-samsung-galaxy-j2&quot;' function='range' level='[none:offer:nk]' to='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:offer:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;iphone-discount&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-device-discount-samsung&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-free-device&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;tariff&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;mnp-iphone-se&quot;</bucket>
              <bucket>&quot;mnp-free-dtac-pocket-wifi&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-j2&quot;</bucket>
              <bucket>&quot;mnp-asus-zenfone-45&quot;</bucket>
              <bucket>&quot;mnp-oppo-mirror5&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-j5&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-a5&quot;</bucket>
              <bucket>&quot;mnp-device-clearance&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;fb&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:submits:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:submits:qk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:hl_platform:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk] * [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk])</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Release Year (group)]</cols>
        <show-full-range>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Release Price (thb) (bin)]</column>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Screensize (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Submitter Device Screen Size'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Screensize (bin)' datatype='integer' name='[Screensize (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[screensize]' peg='0' size='1' />
            </column>
            <column caption='Hl Platform' datatype='string' name='[hl_platform]' role='dimension' type='nominal' />
            <column-instance column='[hl_platform]' derivation='None' name='[none:hl_platform:nk]' pivot='key' type='nominal' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[submits]' derivation='None' name='[none:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[pcto:usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Screensize' datatype='integer' datatype-customized='true' name='[screensize]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:hl_platform:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:hl_platform:nk]' member='&quot;ANDROID&quot;' />
              <groupfilter function='member' level='[none:hl_platform:nk]' member='&quot;IPHONE&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter from='&quot;mnp-samsung-galaxy-j2&quot;' function='range' level='[none:offer:nk]' to='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:offer:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;iphone-discount&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-device-discount-samsung&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-free-device&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;tariff&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;mnp-iphone-se&quot;</bucket>
              <bucket>&quot;mnp-free-dtac-pocket-wifi&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-j2&quot;</bucket>
              <bucket>&quot;mnp-asus-zenfone-45&quot;</bucket>
              <bucket>&quot;mnp-oppo-mirror5&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-j5&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-a5&quot;</bucket>
              <bucket>&quot;mnp-device-clearance&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;fb&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:submits:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:submits:qk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:hl_platform:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[pcto:usr:Calculation_855683945803128832:qk]' scope='rows' value='% Reach' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[pcto:usr:Calculation_855683945803128832:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[pcto:usr:Calculation_855683945803128832:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' value='68' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk] * [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[pcto:usr:Calculation_855683945803128832:qk])</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Screensize (bin)]</cols>
        <show-full-range>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Release Price (thb) (bin)]</column>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Screensize (bin)]</column>
        </show-full-range>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Top Submit Device Full Funnel'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Funnel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='CPM' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[CPSubmit (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [pt_cat]=&apos;cat1&apos; then 250/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat3&apos; then 200/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat6&apos; then 120/35&#13;&#10;ELSE 3&#13;&#10;END' />
            </column>
            <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
            </column>
            <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([submits])/sum([landings])' />
            </column>
            <column caption='CPSubmit' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_417990356997468162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([imps])/1000)/sum([submits])*MAX([CPSubmit (copy 2)])' />
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_544935571523895296]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='index()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Dvc Commercname' datatype='string' name='[dvc_commercname]' role='dimension' type='nominal' />
            <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
            <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Pt Cat' datatype='string' name='[pt_cat]' role='dimension' type='nominal' />
            <column caption='Selects' datatype='integer' name='[selects]' role='measure' type='quantitative' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[clicks]' derivation='Sum' name='[sum:clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[imps]' derivation='Sum' name='[sum:imps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[landings]' derivation='Sum' name='[sum:landings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[selects]' derivation='Sum' name='[sum:selects:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_417990356996841472]' derivation='User' name='[usr:Calculation_417990356996841472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997001217]' derivation='User' name='[usr:Calculation_417990356997001217:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997468162]' derivation='User' name='[usr:Calculation_417990356997468162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_544935571523895296]' derivation='User' name='[usr:Calculation_544935571523895296:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' />
            </column-instance>
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803309057]' derivation='User' name='[usr:Calculation_855683945803309057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:selects:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter from='&quot;mnp-samsung-galaxy-j2&quot;' function='range' level='[none:offer:nk]' to='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;fb&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;kd&quot;</bucket>
              <bucket>&quot;pt&quot;</bucket>
              <bucket>&quot;fb&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]' value='73' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' value='68' />
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' value='36' />
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]' value='144' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' max='30.0' palette='tableau-red-green' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' />
              <text column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk] / ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk] / [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]))</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</cols>
        <subtotals>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Top Submit Device by Offer'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='Rank' datatype='integer' name='[Calculation_544935571523895296]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='index()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Dvc Commercname' datatype='string' name='[dvc_commercname]' role='dimension' type='nominal' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_544935571523895296]' derivation='User' name='[usr:Calculation_544935571523895296:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' />
            </column-instance>
          </datasource-dependencies>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter from='&quot;mnp-samsung-galaxy-j2&quot;' function='range' level='[none:offer:nk]' to='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:offer:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;lucky-number&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mgm&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone-se&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone7&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-nice-number&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-platinum-number&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;fb&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>6</max>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]' value='168' />
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' value='80' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='308' />
                <format attr='maxwidth' value='308' />
                <format attr='minheight' value='680' />
                <format attr='maxheight' value='680' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk] / [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)])</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='All Offer Timeline and Funnel DB'>
      <style />
      <size maxheight='800' maxwidth='1500' minheight='800' minwidth='1500' />
      <datasources>
        <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
      </datasources>
      <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
        <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
        <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
        <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;booster&quot;' value='Booster' />
            <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
            <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
            <alias key='&quot;mgm&quot;' value='Mgm' />
            <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
            <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
            <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
            <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
            <alias key='&quot;mnp-free-device&quot;' value='OEM' />
            <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
            <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
            <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
            <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
            <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
            <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
            <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
            <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
            <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
            <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
            <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
            <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
            <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
            <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
            <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
            <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
            <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
          </aliases>
        </column>
        <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='18' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='6' param='horz' type='layout-flow' w='95533' x='0' y='0'>
              <zone h='100000' id='4' type='layout-basic' w='95533' x='0' y='0'>
                <zone h='61375' id='25' name='Funnel' show-title='true' w='57733' x='37800' y='0' />
                <zone h='100000' id='36' name='Kaidee Reach and CTR Timeline' show-title='true' w='37800' x='0' y='0' />
                <zone h='38625' id='38' name='Landing Page Performance' show-title='true' w='57733' x='37800' y='61375' />
              </zone>
            </zone>
            <zone fixed-size='67' h='100000' id='17' is-fixed='true' param='vert' type='layout-flow' w='4467' x='95533' y='0'>
              <zone h='15875' id='32' mode='checklist' name='Funnel' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' w='4467' x='95533' y='0' />
              <zone h='6625' id='33' mode='checkdropdown' name='Funnel' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' w='4467' x='95533' y='15875' />
              <zone h='1000' id='26' name='Funnel' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='4467' x='95533' y='22500' />
              <zone h='25875' id='37' name='Kaidee Reach and CTR Timeline' pane-specification-id='1' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' w='4467' x='95533' y='23500' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Funnel Chart DB'>
      <style />
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' />
      <datasources>
        <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
      </datasources>
      <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
        <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
        <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='86667' x='0' y='0'>
              <zone h='100000' id='1' name='Kaidee &amp; Pantip Funnel Chart' show-title='true' w='86667' x='0' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='13333' x='86667' y='0'>
              <zone h='26375' id='6' name='Kaidee &amp; Pantip Funnel Chart' pane-specification-id='1' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' w='13333' x='86667' y='0' />
              <zone h='15375' id='7' name='Kaidee &amp; Pantip Funnel Chart' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' w='13333' x='86667' y='26375' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Optimal Impression Cap'>
      <style />
      <size maxheight='600' maxwidth='1200' minheight='600' minwidth='1200' />
      <datasources>
        <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
      </datasources>
      <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
        <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
        <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;booster&quot;' value='Booster' />
            <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
            <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
            <alias key='&quot;mgm&quot;' value='Mgm' />
            <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
            <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
            <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
            <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
            <alias key='&quot;mnp-free-device&quot;' value='OEM' />
            <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
            <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
            <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
            <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
            <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
            <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
            <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
            <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
            <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
            <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
            <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
            <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
            <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
            <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
            <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
            <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
            <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
          </aliases>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='6' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='4' type='layout-basic' w='86667' x='0' y='0'>
              <zone h='100000' id='1' name='Running Total of Submit by #Impressions Before Click' show-title='true' w='48773' x='0' y='0' />
              <zone h='100000' id='8' name='Day Difference between 1st Click &amp; 1st Impression' show-title='true' w='37894' x='48773' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='5' is-fixed='true' param='vert' type='layout-flow' w='13333' x='86667' y='0'>
              <zone h='9501' id='7' mode='checkdropdown' name='Running Total of Submit by #Impressions Before Click' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' w='13333' x='86667' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Pantip Kaidee Room Perf DB'>
      <style />
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' />
      <datasources>
        <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
      </datasources>
      <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
        <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
        <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
        <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;booster&quot;' value='Booster' />
            <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
            <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
            <alias key='&quot;mgm&quot;' value='Mgm' />
            <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
            <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
            <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
            <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
            <alias key='&quot;mnp-free-device&quot;' value='OEM' />
            <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
            <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
            <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
            <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
            <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
            <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
            <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
            <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
            <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
            <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
            <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
            <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
            <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
            <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
            <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
            <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
            <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
          </aliases>
        </column>
        <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='25' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='28' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='26' type='layout-basic' w='86667' x='0' y='0'>
              <zone h='100000' id='24' name='Kaidee Pantip Room Performance' show-title='true' w='86667' x='0' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='27' is-fixed='true' param='vert' type='layout-flow' w='13333' x='86667' y='0'>
              <zone h='7125' id='29' mode='checkdropdown' name='Kaidee Pantip Room Performance' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' w='13333' x='86667' y='0' />
              <zone h='15375' id='30' name='Kaidee Pantip Room Performance' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' w='13333' x='86667' y='7125' />
              <zone h='8125' id='31' name='Kaidee Pantip Room Performance' pane-specification-id='0' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' type='color' w='13333' x='86667' y='22500' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Pantip Kaidee Room Perf by Offer DB'>
      <style />
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' />
      <datasources>
        <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
      </datasources>
      <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
        <column caption='Rank' datatype='integer' name='[Calculation_544935571523895296]' role='measure' type='ordinal'>
          <calculation class='tableau' formula='index()'>
            <table-calc ordering-type='Rows' />
          </calculation>
        </column>
        <column-instance column='[Calculation_544935571523895296]' derivation='User' name='[usr:Calculation_544935571523895296:qk:2]' pivot='key' type='quantitative'>
          <table-calc ordering-type='ColumnInPane' />
        </column-instance>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='86667' x='0' y='0'>
              <zone h='100000' id='29' name='Kaidee Pantip Room Performance by Offer' show-title='true' w='86667' x='0' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='13333' x='86667' y='0'>
              <zone h='9250' id='30' name='Kaidee Pantip Room Performance by Offer' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]' show-domain='false' show-null-ctrls='false' type='filter' w='13333' x='86667' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Pantip Room Perf by Offer DB'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
      </datasources>
      <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
        <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
        <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;booster&quot;' value='Booster' />
            <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
            <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
            <alias key='&quot;mgm&quot;' value='Mgm' />
            <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
            <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
            <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
            <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
            <alias key='&quot;mnp-free-device&quot;' value='OEM' />
            <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
            <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
            <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
            <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
            <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
            <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
            <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
            <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
            <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
            <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
            <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
            <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
            <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
            <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
            <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
            <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
            <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
          </aliases>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='100000' id='1' name='Room Perf by Offer Pantip' show-title='true' w='84000' x='0' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='7125' id='6' mode='checkdropdown' name='Room Perf by Offer Pantip' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' w='16000' x='84000' y='0' />
              <zone h='8125' id='7' name='Room Perf by Offer Pantip' pane-specification-id='2' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' type='color' w='16000' x='84000' y='7125' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Perf by Pantip Category'>
      <style />
      <size maxheight='800' maxwidth='1500' minheight='800' minwidth='1500' />
      <datasources>
        <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
      </datasources>
      <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
        <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
        <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
        <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;booster&quot;' value='Booster' />
            <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
            <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
            <alias key='&quot;mgm&quot;' value='Mgm' />
            <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
            <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
            <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
            <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
            <alias key='&quot;mnp-free-device&quot;' value='OEM' />
            <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
            <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
            <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
            <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
            <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
            <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
            <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
            <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
            <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
            <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
            <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
            <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
            <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
            <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
            <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
            <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
            <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
          </aliases>
        </column>
        <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='92533' x='0' y='0'>
              <zone h='100000' id='1' name='Performance by Pantip Category Timeline' show-title='true' w='36000' x='0' y='0' />
              <zone h='100000' id='13' name='Performance by Pantip Category' show-title='true' w='56533' x='36000' y='0' />
            </zone>
            <zone fixed-size='112' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='7467' x='92533' y='0'>
              <zone h='15875' id='6' name='Performance by Pantip Category Timeline' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' w='7467' x='92533' y='0' />
              <zone h='20041' id='7' name='Performance by Pantip Category Timeline' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' w='7467' x='92533' y='15875' />
              <zone h='20041' id='8' name='Performance by Pantip Category Timeline' pane-specification-id='1' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' w='7467' x='92533' y='35916' />
              <zone h='15375' id='14' name='Performance by Pantip Category' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' w='7467' x='92533' y='55957' />
              <zone h='20041' id='15' name='Performance by Pantip Category' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' w='7467' x='92533' y='71332' />
              <zone h='8627' id='16' name='Performance by Pantip Category' pane-specification-id='0' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' type='color' w='7467' x='92533' y='91373' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Submitter Device Charact DB'>
      <style />
      <size maxheight='800' maxwidth='1300' minheight='800' minwidth='1300' />
      <datasources>
        <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
      </datasources>
      <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
        <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
        <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
        <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;booster&quot;' value='Booster' />
            <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
            <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
            <alias key='&quot;mgm&quot;' value='Mgm' />
            <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
            <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
            <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
            <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
            <alias key='&quot;mnp-free-device&quot;' value='OEM' />
            <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
            <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
            <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
            <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
            <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
            <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
            <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
            <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
            <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
            <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
            <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
            <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
            <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
            <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
            <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
            <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
            <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
          </aliases>
        </column>
        <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='89846' x='0' y='0'>
              <zone h='100000' id='7' name='Submitter Device Release Price' show-title='true' w='34993' x='0' y='0' />
              <zone h='100000' id='11' name='Submitter Device Release Year' show-title='true' w='30579' x='34993' y='0' />
              <zone h='100000' id='13' name='Submitter Device Screen Size' show-title='true' w='24274' x='65572' y='0' />
            </zone>
            <zone fixed-size='132' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='10154' x='89846' y='0'>
              <zone h='7125' id='8' mode='checkdropdown' name='Submitter Device Release Price' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' w='10154' x='89846' y='0' />
              <zone h='1000' id='9' name='Submitter Device Release Price' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]' type='filter' w='10154' x='89846' y='7125' />
              <zone h='15375' id='10' name='Submitter Device Release Price' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' w='10154' x='89846' y='8125' />
              <zone h='25875' id='12' name='Submitter Device Release Year' pane-specification-id='0' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' w='10154' x='89846' y='23500' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Top Device Performance DB'>
      <style />
      <size maxheight='840' maxwidth='1600' minheight='840' minwidth='1600' />
      <datasources>
        <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
      </datasources>
      <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
        <column caption='Rank' datatype='integer' name='[Calculation_544935571523895296]' role='measure' type='ordinal'>
          <calculation class='tableau' formula='index()'>
            <table-calc ordering-type='Rows' />
          </calculation>
        </column>
        <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
        <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
        <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;booster&quot;' value='Booster' />
            <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
            <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
            <alias key='&quot;mgm&quot;' value='Mgm' />
            <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
            <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
            <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
            <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
            <alias key='&quot;mnp-free-device&quot;' value='OEM' />
            <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
            <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
            <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
            <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
            <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
            <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
            <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
            <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
            <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
            <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
            <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
            <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
            <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
            <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
            <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
            <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
            <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
          </aliases>
        </column>
        <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_544935571523895296]' derivation='User' name='[usr:Calculation_544935571523895296:qk:2]' pivot='key' type='quantitative'>
          <table-calc ordering-type='ColumnInPane' />
        </column-instance>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='96375' x='0' y='0'>
              <zone h='100000' id='11' name='Top Submit Device by Offer' show-title='true' w='36156' x='0' y='0' />
              <zone h='100000' id='29' name='Top Submit Device Full Funnel' show-title='true' w='60219' x='36156' y='0' />
            </zone>
            <zone fixed-size='58' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='3625' x='96375' y='0'>
              <zone h='10833' id='13' name='Top Submit Device by Offer' pane-specification-id='2' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='color' w='3625' x='96375' y='0' />
              <zone h='6309' id='24' mode='checkdropdown' name='Top Submit Device Full Funnel' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' w='3625' x='96375' y='10833' />
              <zone h='14642' id='25' name='Top Submit Device Full Funnel' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' w='3625' x='96375' y='17142' />
              <zone h='8333' id='30' name='Top Submit Device Full Funnel' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]' show-domain='false' show-null-ctrls='false' type='filter' w='3625' x='96375' y='31784' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='33'>
    <window class='worksheet' name='Kaidee &amp; Pantip Funnel Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Funnel'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:ful_channel:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Top Submit Device Full Funnel'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='2' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:ful_channel:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Kaidee Pantip Room Performance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Room Name (Combined)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[mn:sight_date:ok]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:dvc_commercname:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[yr:sight_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Kaidee Pantip Room Performance by Offer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='1' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Room Name (Combined)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[mn:sight_date:ok]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:dvc_commercname:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[yr:sight_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Room Perf by Offer Pantip'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Room Name (Combined)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[mn:sight_date:ok]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:dvc_commercname:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[yr:sight_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top Submit Device by Offer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[mn:sight_date:ok]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:dvc_commercname:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[yr:sight_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Submitter Device Release Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Release Price (thb) (bin)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Release Year (group)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:submits:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Submitter Device Release Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Release Price (thb) (bin)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:hl_platform:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:release_year:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:submits:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Submitter Device Screen Size'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Release Price (thb) (bin)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Screensize (bin)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:hl_platform:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:release_year:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:submits:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Running Total of Submit by #Impressions Before Click'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impb4Click (group) (copy)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impb4Click (group)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:clicks:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Day Difference between 1st Click &amp; 1st Impression'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impb4Click (group)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impclick Daydif (group)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:clicks:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Kaidee Reach and CTR Timeline'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:ok]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[yr:sight_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Performance by Pantip Category Timeline'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:ok]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[yr:sight_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Performance by Pantip Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:carrier:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:ok]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[yr:sight_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Optimization Results'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:ok]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[yr:sight_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Landing Page Performance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[tdy:sighted_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[yr:sight_date:ok]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[yr:sighted_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Funnel Chart DB'>
      <viewpoints>
        <viewpoint name='Kaidee &amp; Pantip Funnel Chart'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;pt&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='All Offer Timeline and Funnel DB'>
      <viewpoints>
        <viewpoint name='Funnel' />
        <viewpoint name='Kaidee Reach and CTR Timeline'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Landing Page Performance'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Top Device Performance DB'>
      <viewpoints>
        <viewpoint name='Top Submit Device Full Funnel' />
        <viewpoint name='Top Submit Device by Offer' />
      </viewpoints>
      <active id='29' />
    </window>
    <window class='dashboard' name='Perf by Pantip Category'>
      <viewpoints>
        <viewpoint name='Performance by Pantip Category' />
        <viewpoint name='Performance by Pantip Category Timeline'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Pantip Kaidee Room Perf DB'>
      <viewpoints>
        <viewpoint name='Kaidee Pantip Room Performance' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Pantip Kaidee Room Perf by Offer DB'>
      <viewpoints>
        <viewpoint name='Kaidee Pantip Room Performance by Offer' />
      </viewpoints>
      <active id='29' />
    </window>
    <window class='dashboard' name='Pantip Room Perf by Offer DB'>
      <viewpoints>
        <viewpoint name='Room Perf by Offer Pantip' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Optimal Impression Cap'>
      <viewpoints>
        <viewpoint name='Day Difference between 1st Click &amp; 1st Impression'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Running Total of Submit by #Impressions Before Click'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Submitter Device Charact DB'>
      <viewpoints>
        <viewpoint name='Submitter Device Release Price'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Submitter Device Release Year'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Submitter Device Screen Size'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='10' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Kaidee &amp; Pantip Funnel Chart' width='192'>
      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
      Qy2igw4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Funnel' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Submit Device Full Funnel' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Kaidee Pantip Room Performance' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Kaidee Pantip Room Performance by Offer' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABM5AAATOQGPwlYB
      AAAgAElEQVR4nOy9R5Rk6Xmm91wX9oZ3Gekry/vqam/QDRIkAIIEAQ6HHElzdHQkLeboaCGt
      tBW1lRZaaTnn8AxnhjMcGLKBBoFutHflXVZmpfcZkeG9u1aLyKy2qIx0XT3ofDbZp+veN76M
      jBv///2fE2zbtjnkkG8o4uM24JBDHieHD8Ah32jkx23A152PPnqPZCyJS1WRHB70ZhEUFZeo
      owtu+mKhbTVyS5O8+s4tIol+Xnn6DJasYjZL2E4fstEEp5/bV97m3FMv0RfdXg/b4Jc/+yll
      3cFwX5hwPMbocD/FaofF2QecOHESh2T3bN/nxHnjlz9jo6zz4nOX+OfX36QvFqLSson1DfHD
      7778mavXZ+/Q9IxyrF9lbnqO5EA/G5ksiYFh1qduUtQcRCIRJEySg8MUcxu43W5atTKBxBB+
      jxOAUnqen/3qPb79x98nEvRiVHN8eH+Fl198ivLGxsP3P5daYGk1x9NPncMS3IxPTPPGu1cB
      +L//z//tM7Zdefd1FosG33npaVySwPTkfZyJUYb8Aj999Q2OHRs9fAC2o1BY5e6NaQyhjS8c
      x2qVMCUvcZdG2zvCv/rzP9pWo9Ooks1mcQXi/Nv/7/+l7R/jW+cGmFgtoaJx9slnWVhcJF1s
      89//d3+1rZ5eWsWMHOe7pwe48v77ZPM5xsdvMzh0nKWpW6zm2/i09Z7t+5w4VTPCn3z3NMFY
      gkR8nEtjcX7y1m3USP8XLm/XKtREnVY5z4fvvo4/OkC12ULmI3w+L7phszg7hWXbKM4bdCwX
      TkUnPzfL5e/9C164dBIAUVIwtDYbC+OsOXyUU+usVg1e+9VPqWX0h++/RzbIFRt0Kqvo3hHC
      fhX44ocfQMSmWWvw5rvvMqoqpOod5HyWQvIMA31ROo3y4QOwHZFIAr8vAEIDG4EHd5cJDw0z
      0q8yl233pOH0+vnzf/nfsDB5l75nnsMdP0F65jr9fYM4tQLZQoWTZy6gKI6e9JTQEFLhGq+/
      vcRQIoYtgMthMr+aYvDUZRRBxOc8znyP9n1OHL9U4J9ff5u//Fd/TTQWw+UL8Bd//d8yPX4H
      GxA+dbnLF+DdD1+n0h9DcgcIhoKMnTpNrVhmfm6KI0fG0HWD/oF+coU8N2/fJ9nXx8lzpzE6
      rYc67WYDt8eLN5zgzs2bjI0dJVWcY2DoJGLC+fD9B3CJGWKDfaznu7/fv/kf/vJLf5WObuBU
      JMb6Atx/sMyx48MsLKcZGW7xUarA6bEBhMNToJ0xMTnJ2TNnHrcZ/1Vimx1+/dqvOHbpBY4P
      Jx63OQCfPACNRuNx23LIIV85n1kBiuklfv7qa/QfPU2x1OBf/9UP+dnf/y3HLr/C1LW3OPv8
      9zh7bLAn4U6jznqugCJCu1rHUFWsZoPB/n78gSCCAOsrC9y5N4XqkTh+8UXahVVM2YvdqSB7
      w4wNDxzU7/1I6o0cv3wwzoV4jKIu8NLRc8ynpnhzdoKT8Rh1UyHmFHB4ElwaONKz3omQj8Vy
      jR8/+YfcmPmYtUaHuEukpIsEJIOW4Ob7Z57dlc3X566SbhqEFJOqqaAKHWqWkz87/3xP97//
      4D2qpsKfnnuet+6/RUfw4rIb4AhTyo7T13+ZEwMniTp3t2v+zZ3f4PAkuBBTuZOt06hniYWH
      ef7IqV3pddH55c23CAaTVCop4pExnh458cg77ky/iRG4iJW/hjv50mePQf2hMKbg4bkzAzQt
      Bawm9brG0ux96i2DpeX1nk3LLd2nVMhRKJW5NrmEX2zx/vX7XL87ibC5iXSINkPHzxAIxumP
      qCBAeiONAGyk0zt+O/YLxeHHKRgIAuTyS1RMGAlHSEaO8K0Tz2AYGgIwl1nakd7lo0+hCCYA
      xXaHsGiT0y1kW+elk8+g6fqubX567BKFSpbnN+1rmiBavfsAL27eB9CxRGyjybNHnyBdzhIN
      9jObmmJifWbX9r184jId0+BBbolaXefFsZMYu1bbQuFbx86hWxqFRoNcrbTtHcOBIMV2h35/
      gErH+OwDMHX3BoIsMbWQ5vjYMFiguB3EEwM4XQ6SyXjPpjm9fqLRKLFYjHg0yFq6xNkzJxmI
      +EhlsgCMT84gGQ0Ud9eT13Udn6qi6zqq6tvJO7GvOBUnUV+Itq7hdgfJltZJ5Ve5ePQiP/n4
      54T8Cdq6RlgN7kjvnTu/AiXAYn6doNNB0RKJygKG4OA/ffQzYsHe39/Pc2PhLvFggp9u2ucW
      bWzJ1fP9W79XrlbEIZiIsodr83foD8U5N3CMY/FR8o3KLq2z+LuPXqPf70fEgWnX+A833iWh
      BnaptyXb5t9f+y1JX4iYL0LI69/2Fo87TMjlxOeNEHCKj8cJbrfbuFy9/3EeN41OE6/T87XV
      O2T3HMgD0G7v4vjtkEMeAwcWBzD1NsupPC5ZoFqrEfJ58EZiFNMbiIqCPxTF73VhdBpMT09T
      qOnUG3V+8N1XuHn1FmOnjjE3tcDxs2cJqu6DMvNLub96h8VSme9deIVf3XmDH1/6LjcXrpFp
      mxwLBbm6tsjxUJCO4OGVo5d61usP+FktV/mzi99mfOkmuY5JULaomjKqoNHCxR8cv7wrmwvl
      Va5tbBCSdGqWwpDq4WZ6lX/91Pd7uv/K7EeUDJE/Of0c1+ev4lX7yRXnwRGiWnxAInGRo33H
      iTj28pHReeP+h/SF+2k1C2R1hT87/dQe9ODm9Bu448+wtnaDWHiEJwaOPfL6+/PvYvjPUcje
      IRAYOrhcoNzqCvPzCyyurVPLr7CcazM9cZW19RIrK6vMzUwBIDs9VKt1nn32GQb6IthaC8Hp
      YX15CcntJrOxcVAm/k7ODV3EJdjMr9+nanQXyCePPAmWxoDqYih2imKjQr6+vdP1ab1cs8kJ
      r0RGh2KjTLFe4vLwBbLVPE+OXCBTy+/aZtUbx9JrPDP2JIah0eeWGek71/P9dcNCpuuEC4LA
      Qn6F58cuoZkmEX+ShcwsU+m5Xdu3hW3DeHoBw+jwwtEn9qyXVH1UO01KrQb5ennb6wf8AUqd
      BsVGnUL9ACPBnkCQoLcALhWf302jVsYbjuP1elEUHdsyyBXKyJ08bcFNNptD9aqYpoFpmbg9
      LjpN87E4w9em36YjeZFkD4LRYq6QYmH1Bk7fGMuFMpeHn2BqMUvdUnakF3fJzNVqnK+liKoh
      dLHDrZVx+gKx7k9/bNc2OxUnEW+QV2/9gnjiAouVBk+Pnuz5fo8sUDUUCvUSHUMj5AnyDzd+
      xYWjLzLkjiErBTKt6q7t6yITcDuJhofQtSphh7RHPVA9Efy2TEQNE/D04AS7QgRxYqshvB71
      cfoAJu22hcvV24focXLoBP/+cpgKccg3mgPbApXXZ5kpyahii8HBbvR4bXUGhChnzozSqpV5
      MHmPui7Rthz80dNjXBlf5fRohKnVMhfOnca7y6jjQTC3PsUb0+P84MxFJopV/LSwHSG+daz3
      ffanuTF7jZIhcyqkMl6s8r3jJ/jp3Vv89VPf3hd73x5/m5rl4M8vvtjT9e9NvEtRF/nxpW/x
      27tv0hG9KGYVUwlSzz8gOfAkJ4dOEdvl32Ri7j3KjmEKmQcEA3FEo0Fac/BXl57bld4WV+69
      hrv/eZYXrxCLHuX5I4/e9t1+8FuM4HnSazfwBQYPzgnW2zUK2TRL6QKTk5NMTE5SrZaoVrs5
      R25Vpdq0eenCCNGBUdptA48bFhazeB066Y3tHZqvktFIhGR0jERkhFYjz2Rqjkqztmu9yfU5
      6s0q4U29qwtTYO/f8XE3Etzp+fraZkQaoGN3I8E6CqZWJxYaYGb9AfdXp3dtz9FwhI2mwSvH
      z6MLTgy9wx+ceXrXelsM+ANUOvDCsXOkytsfIowEgxTaOSRlgEajcHAPgOLy8dSzzyAaHVyy
      gImE3x/CLbUpNQ0WH9xFUQNkig18LgXT0LEsAbfbhWkL+Pxfrz3yenaFy8cu4VKcxHxhLg2f
      RhCE7W/8HVwcOYUgCA/1vA6Furb35IAtdhoJ9m5GpHPVIg7BQJA9SLaG7FA5P3iME4kj5Bu7
      /1JyuYLE3AJ/+/EbJP0hJFeQ6D44wT41SsBhcmVhhoFgZNvrPZ4wYVccQ1tF9Ya+eh/A1NpY
      sgvlsBjzkK8Bh5HgQ77RHJiXWVidZjLdJhH00pdMUCqVEbFBkqiVsgwfO4do6Xg8HvRWnenp
      B5RbNvV6k+9/5zmuX7/P8ZPDTM+sc/rsGfxe50GZ+gUazTyvz09yPBhgpdbgB2de4NbidWqW
      QkA2ER1h2s0MKEGeGd4+nXdL70wkQkkXeW7kNHeWbpLtmAQkE1P2gV6mbjn47slndmXzViT4
      YjTMVKXOcZ+LhbrBK2Nne7r/ytxHlA2R7596jhsLV/Go/RSKC3jUJOn0LRKJi4ztORIMb068
      STAwQLG8TjS0feR2O27NvIEr9hRr6zeJBEd5cnCbSPDCuxi+cww7KtwvmgfnAzgkC4/HQ2Zl
      ijffvEIxn6JcyfPx/SXqzSaTtz4ilasDoLi9VKstnn32Iv3xBGanjeR2s7q0jNPjILOROSgz
      vxRZ8eEQDEqNMrVmibYNNjazqWk0ulHS2ewi1XZvTvCWnoBAobRC1YRis0ypUcLCZjw1TWuH
      TuvnUb1xbKNGJDBIu1UgHuqj0ew9e7NhfOIEg8BifuWhbRF/kvnMLNMbe40E65SadfK1DMVW
      g8IefIot+lQfVR2eGj5FplbY9voBX4BSp81McYV6o3ZwK4Dk8GAaDVR/EFNxEYmEUBwysVYV
      v1+hkNlgZMBPrljDrq1hOFSy2QJe1YNpGNiWhdvlptqx8fq+2mjwVlTVr8i0TJG1UoqAy8eR
      xFEwNEKeACM+L8Ue0/e39DqGhssVIF9JEfWG0IUOAbfKqYQH2azRtHefIbv1Gt2fIZyKi7C3
      93RjjyRQNRUKjU8iwR6hwyl3nJNBH5JSILvnSDBEvCG8Hj+yLRFwbx+53Q7VHcFvW9xanacv
      +MWi/c/jcYUI2iKG7sASjMflA9isra0zONBHWwPX1+i8/8s4jAT//nIYCT7kG82BffXmV6aY
      2NAYjPg4MjrA4nKakYEYt65e58RzrxB0QDGb5u7t2ygeFTUxSsxpUG6aqG6BegfOntybg7Rb
      6s0cv565z7lotyb4hSNnubN4g7Ip46GNLqmglRAcYV44sr2TuaV3MhRkvlLjxxdeJl9a4Uo6
      Tdxho0sqzw2O8IvJO/z44rf2ZPvV2Y+oWQ48QpuW7eI7J3tLN/5o+gNKhsifnn2Ba3Mf41UH
      yJfmQQlTzt8n0fcEx5MniOxptda5PnuDtZaGw2wTCg729P49ihsPfo078SLl9bdJjHyPY/5H
      H5bcm3sLw3+Bav4ew33nDtAJFk1KpQpBr82//y+/IaC0+LtX38frFNE31xxVdSEH+kh6/Yyd
      GAagUUxT1wSq2Q0a5kFZ92gUxY9DMECAfHGZiglTG/M0WjUebMxTbdWwbZt7aw92pHd+5AJa
      I0fTAlVNYOtVZjb1bq5M70skuNgok68XeXr0IhvVXM/31T/nBM/nlnl69BKZapZooJ/5jWke
      pGf3aJ0CVofnRo+gqGPUGrtP/94i6fNT0XQSXpW6YW17/ZA/RLHdQUBkPrd8cA+A7PRydDjJ
      /HKWS+ePsrBe4olTg2TLTcr5bk3wnVt3CKhOOkjIdGuCZZcPydZweFScjylY5lScRL0hOrqG
      2xUkV17n3MApEATODZxEQCDg9nE62dsKtaU3vnyPoC/Oemkd16azuqXnVRQa+t4jwVE1TMgT
      4MbSPZKB3muMvbKAKSjk60U6RoeQN8CNpbskAwnOJMc4Gh2hsINTpd+FIftI+vvRarP41N2n
      f2+heiIEHAp+NYYqb/+BcbtChFwSHcMk7PEd1gT3wqET/PvLYST4kG80B+YEdxp1Uvkiigix
      eJzllXXcHhc+l0xdE/EqJm3LgZMOHZwodhtddOK0NQSXn5DfC1jMTU+xnMrQabT44x/8gJnx
      W4SSI+TWFkiOHCce6a01yW6YWLlLtqXz8smnuLtwnXTbIKpA1ZTxit0a3u+ceLJnvfHlO5tO
      8LcYX7lDW/BAp4QmqUhGFZQgz42e3pWt+fIKV1MbXIpFmCxVcVt16raD75/urdHWem6eyVKV
      Pz7xBBOr97izkeYvzz3Jm4uLGNU5En2XON6/90jwG+NvEPTHyVdKDMXHONc3vCe9Gw9+gzvx
      NEvLNwiFBnlh9NFtK+/NvYPhP49VuIE78cLB+QCFlUkqxTzFcoUPrk+wPj/OR+OL3J+aI7Wy
      wNTsAqvLc6TSaW7eusnyepqZqXtcuXKdyckt51LEaNc5+8SzDA4OdBPoBIHMRgpBkNg44Ajx
      1MYCnU6djgWXRy9QrOS5vOlcPj16kUyldycT4PzIebRGnqYFAgIruRUmMgtUWzVmMgtUeows
      fxmqN4Gl14gEB2m3ijRNEHYQWd66DyDqgGODT3A7tYylV4kGkl0nOLVXJ1in2KiTr5ewbXo+
      RHgUSZ+fSmMDRT3Sk1M95A9Sanc2nWfjAE+BPH7CkQixaBQw8QeCRAIqkUgEfyBAu1FFdnrR
      NJ2AP4CMRUcXSPbHSSaT5HI5rE6VpUyNWjGHV1UBC0M3UL1udMNGVdWDMh+AcwMnQRBYLaa4
      vTxOLBDj5nLXubyxdI++HTayGl8ZJ+iLsV5K0TE0/J4AF/tPIAgC5/pPILD79GqX4iSihjZ/
      BnGJNoi9509t3Zevl1iuGzyVjOOWoGXyKSd475HgqBom5I0ScDk4kzy+Zz3VEyHgTaLV5vF7
      t3eq3a4gIZdz03k+oMZYvfgA6+vrDAx80vtz5sE47kCCof74Q42vi6N86AT//nIYCT7kG83B
      NcbSWiyt53AqItVqEb8/gmXZDPRFWE4XiAU85KstoqFuQlS7UcGUvBRTU+AawCGbxGIRnJKM
      4vUgAenVJW7fvU8wqJIcO4/QzNHBhWK1MGVvt5/pPtBNX57gaMBPsWPw0vGnmVi+ScWUcdOi
      bil4BQ1bCfLs8PZO65beX5x/mX+8+zo/vvg9Jtbu0saNXzK4sr7I8eBWo63d9copVFY+0xjL
      J+o70rsy9+FmOvTzXJn7ENkVxewUCPiHmVt+n3j80v40xpr4gL7IEerF+8SH/pijvn1Ic7da
      /ObBVYaiY5xJ9PIZ+MSOA/MBMqvLzMzNs7C6RrVa4sabv6Epurl5+y5KK8Nr798mu7bC+IMH
      PJiaYn19nWs3rlMtF/jgnbfJbazw3ntXGV9YZqtwzqUI9B05hUf1c6Q/AoJAdiONudlVer/Y
      Sl8Gi0x2iowOM9kFGu0a+UaZfKPEbHZhx+nQc6lPGm0BrBRWiKtuhqKnKDUr5Bu9Ndr6MlRP
      Aluv8czYUxiGtmO9hmEhbUaCZ7ILVNt1hM206Ig/yUJ2Zh/SobuNse6nHhD3eHuK3PauKzCe
      6t2p3rLjwFYANRgi5M2DS8XvdKMcO0YxtUZ/LMx6psDR4T6CikAw4GS+aKHVMwT9AfyqxakT
      IRSPl2+dHeL2+DzZbJZ4PM6d+1PEk4NYTi8AuqbjUX2Ym12l94ut1OKAy08ocgyjnuJs8iQr
      tRphNYSsi0QDQQp6b7vHLT2H4n7YaEvbdILXi5802nLavY1I+l2vEfaG+MWtV4knLiJp0o70
      PJJAZTMd+mzyBFVT2EyLjj5Mh8609hoJ7jbGioWH8Sst6CFy2xOiA79TIRnpdQewZcfXfERS
      rZTFkAO4FfuxOsSHTvDvL4eR4EO+0Xwl3aEVycaS3cxPz6FIJkdOnYdOFcUboZZPIzkVREUl
      Ee1GdRfnpplZTiF1Gjz/xz9gdWYcbyhJNbdGKDlCf3z79hd7odEq8NuFSf5w9ATvLM/zwzMv
      cHflFrmOScwpITpCBCWNpYbJt7aJPH6aibV7rNYbfP/U89xauk62Y5J0OxAdIer1FG3c/MGx
      3XWH3mJu4wHXUssc8ft2pHd1/mMqpsh3TzzL1fmPkV0RgmKdvBWhkLlKPHaBscQxwnuMBH8w
      8x6D8dNsbFwnPvgdxtR9cIJtnbemPqI/eoxTsUeP1ZpYfA/DdxardBtX7Nmvpjv0zNwSSwtz
      qF4XHcNmYfoOi8s5ZqcnWEmnWZhfYmnhU02XjDanzj5BbHAQryIiILCR2diMAh98t2hZUXEI
      Bg5nCIVuNLW0WcMLAouFVeKhJPUdZkeWm90a444Nl0cug6V3Hc3CKs+OXkY3dz8iaYuk181g
      9MSO9RrmJ07wXG6JWrvOYCBKsdkk7OtjITfLdGZ+j9bZCILYff88vaUv90RrnbmGTq1d3/bS
      AV+QckejT/VT042vqDt0QMQGDE0jGo0AFu1GHcUbRvV2U4BtIJfLEYv4mV3KMHTUh+rdHJ1k
      6KhqEK1aRA2FD8rkhzhlJ2FPEKfsIOwJslZKE/GG0ASNjqER9ARwyi7CPXQj/jRhNUTTlFgr
      p1lcu4lTPULHqBP0BPinO68x3L/3duErpTJPDF7in279ZEd6n64JPt13jJop4HSohN02J/1H
      kJQiuT3XBJvdNORAAJ/DtX9OsLuf0/40vfQpc7uCBHDglcP4eIyR4N9139cl+vtpmloLj2P/
      hnTst94hu+drfQp0yCEHzYFtgVKzt8mS4NxQgEKlji06WJ2bYOTEeSSjAYoLp9OJZYvIoo3H
      46Gcz3Dvzi1cvgCGM8rJmJPVcpOI6qZc73D67MmDM/hLuDV//eFc31uzV0m3dEKyRckQuRAL
      M1c1+KOTF3alPbc5d/h/fulP+NntKzwz0Lcnvc8zsXKPq6vL/E8v/rCn69+ffI+SIfLnF17i
      3Yl30CUfaEVMOUi98IBk/5OcGNz9nODPYvLazTeIR7ef69srr999neNDlzkSjj7iKps37r1J
      NDzEemaRYPAARyQpok27nOXNj++wtLzIwtIyLc1ifmac2cVV5mYm+PD133Dt6ntk691FSFXd
      2O4oR6IuhsdOdOfINopk6xp6NUv5Ky4Svnz0KRS6r/n00Uvkyzkqm7WzfdF+aj2M5PldjIYj
      JCOj3FyYAPau93n6PTJjAxd7vv7TNcHPHn2CjXK22x1a3+wOnXrAxNru5wR/Bkuj0GyQqxX3
      Rw8DAbmHuc1lplJ5Ks0W3zp2Ds3m4B4Atxoi2t8Puk5/PIokQDQaJRAI45RtXL443licYCBC
      kAYd4O7tOwT8Huq6iFPu1ggLsguXZCM4PHi+4iLht++8hq0EWMyvcWPhDolQHHWzi7JLcRP1
      7b4YJ5Vb5dLRS6hOJ/WOtme9zzNXavL8SO+5UQ+7Q9eKXFu4QzKUeNgd+tzAMY7Hj5Bv7t8D
      GvOFCe2gcdcjsQw6pt3D3OYAF4aSCGj83dXfkvT5vx4+QKfdxuFy7SEb/mCpd5qoh5Hb30u+
      VqdAhxzyVXNwjbGWp1hruTl3tI+FxVXiyTjlQpmBvggr61nC4QC6YVIuVbBNg1h/kqA/gCjA
      xvoyd8cfoHpdjJx8Ar2axpS8CHodwelnbOTR0b690mxWaWkGLkWmbRhEAmHqjQqmLSDYJqYt
      4JQl6u028fD2VUiNRpW2ruNQZEwTAv4AzWYVCwnBNkBUsIw2iAp+7+76oOpai1q7gyKCLUg4
      JYG2YRPoccpmtVbCsCHsD2GZOqV6A1mwEEQFvVPD4fLjcnlQpN1tQ5uNEqboxujUkWQHhq4h
      O1z4vfuTxKh36jQNkYC3t5Va15o0NfvgfACt2cTvF3n3rStkVqb49W+v0CynePP6NK3cKh/d
      nUbUm2RWprj9YIFrdyYQN/dALlmgb+QEvkCQwXgAAYFMZgNBgEzm4CPBHo8fLA2n24dtaJg2
      tNpNTNPApwawbRuHLOB09fbh8np9D99ovVNH2wyAdjotbKDdaYENzVZj1zZLshMsY9NOE8Xh
      xDR67zNkWjbC5mag0WqCbWAYOrqhoyhO2u0GrXZz1/a5FAXd7IDgxNQbCLIb09B2rfcZbItW
      p4Vp9nhIYtu0tBamcaA1wSrZ9Qz+aADVHyQSDhMKBUmEVNYzZaKxEK2O1v23SJyheIBUpltk
      fm9yBgcdJMdm2rOho6oquq5v1gYfLM1mDUly0GzVkGQHmtbG4/YCAoViBll20NZMfO7egna1
      agFLkJBEGdnpwTba2JaFLMmbPxUkWcbt2r2fIYoisqxs2gmiKCHLvS/wkgi2IKIbOqIgYNmg
      yAqyLONxeXA53ejm7ht3iZKMLDnBbiMpXmyjiSTvPv37s9ggSN2fPV4vIGIL9lfvA2RSK+Qq
      bc6ePvEFp/frGgk2TRNJ2vs8q4PSO2T3HMgD0Gzufqk85JCvkgM7Bm0U0/zH//wzkicvc3Es
      jj8Y4uPr97h05giSJ8TEvVt8+5VvH8RL75qptXvMFXM8e/QiH8xPMBZQWak2+MH5l7m3dINc
      xyQoW1RNhRNBlcW6+cgRRK12idemb3MpniTfMXEKHdY29STb4B/vvcOAqlKzFY75vdvqfZ5q
      PcPbS7P86NxLsKn3o3Mv8OrkdZIeR881ywBXZj+kZIj8yenNmmBnlHZzA8EZoZgbJ5HYeU3w
      Ymac9ZaTl0ZP8Nbkb3G447j1DdzRJ1hNTTAYG+NsTzW8X2R65SMqyiDl/Az+QJJqNU0sNLrt
      yKX78+9g+M+S3biN19d/cD6AN5zkxECCk8N+Prg1wy9/9UuWl9eYvHebn//iV+RyO2sq9VVw
      avACHgkcmzW8F0cuowjdfW+xWaZYL3F5+CLZWo5EKEl9mxE/ouzBLdqAQKWywmDyE737q+No
      dle3UC/1pPd5nM4gst35jN7tlSlsDGYyvdcsA9RNC5nNmuDMApV2nWKjQqFe7NYEZ2aY2mFN
      cH84TqXWTVF+YewSmmmT9Pqpajo2AuPru2+MNeoPk2sZPDd6Bt3sUGo2eqqBHvAHKXXyiEqS
      Zqt4cA8AQCAaJRTrx27mOXr6SYJ+hXyhQjKRIBbbe2fg/ebO3LtUcaJI3RreDyEE4GkAACAA
      SURBVCZ/gy37WS51RxoFPX5urdyjzx/DqbiIbBPJdMrdDtAdo4PiDHB35hM9t8NNR2sR8oa6
      6dU96H1Bf7PD9Oqn9FwOBw1N42z/yR012vJIAqbgoFAvcSZ5AlEQiKhd2073jTEWGaa4w/oH
      p+Ih4lVZLa3xn2/8mj5fCNUTxu/04ncqnE7uPg/I6QwQcYr8w523SahBImqYYA8jlzyuIEFn
      FFNfx+t+DHOC/2vk614T/HWvMf462/fwAWg0dn8G/Xk0bZ/Odw855ID5wgqwPnuHYlvi2s27
      /PBf/BVBRWN5LUMy2cd6Kk1b04gHVSzJgW0JBFWFmiaSjIUearTbbSrpOWZLCqrYYqC/HxtI
      rc+BEOHUqREA5ubncYo2TVPi5LEj1GtliuUGYb+b1dUsscE4rXoTG5FowE25ZR14PfDv4u7S
      bdp40FtZKqaCKnSo207+9NxzuxO0Df7hxluMhUKIrjDNWpq24OGPTu2tJniLdyfe3ZF9Hzx4
      n6Iu8ecXXuDt+2/TFrwoZg1LCVAvTNHXf5kTAyd2nQ49ufABZccYrdIUo8mTzKxNMZQ4wbnk
      0K70trh2/9e4ky+ysXaVY0OXtkmH3kLnV7feoz8x9tlUiGoxT61SYaVg0GlUuHPjKtQzZDQX
      7qvvst720RcQuFUuUG9pKF4fcn2DqaLE//N//R+f2XHqrQbFXIuibVGrVrEFAcGuAZ9UQjUa
      DZx+D8VMhmWnwMLcEiMxlTcetDkRcHJrooBfAMnlZm4yg+1QSca/9ViS5gQElrLL/MWTL/Pr
      8es0RRDYfc7T3cW7aDYIgsBcZhmn1aC5B73P0zR3Zl9Nt5A3U7/blohNEx0ZW68TDfYzm5pC
      B14Z670JwKcZC0b4db6JXxCZW/iAqbYfv3/33bC36Pf7WdLaCILMXHa5xwegGzK7szL52Qeg
      Ud7gg3tLvPj8k2RS61y4/DRS4QH/7rUrvPT0E0TlAEIjix2LI2BjC+BigFEx+IUPpeL2cvmp
      s9z5+H2cskLDkAj5gujNDuWmQS2zSFOz8OkGLlVlcGiUjZUlii2BsYEoqgRRGwIOGRsBn0PC
      UryPLWO0o3cIeIP845V/pK//CaxmmsYe5vq6nR7anVWaupewN4gHJzVrvyKj4JbsHdnnlbuN
      sfK1Ig7BRJdUJL2K7Qhyri+G7Ciw0dh9YyyXK0DUY1BrmEQTZzlfLSP0UsS7DT5vhIANZdMi
      6e01nVwm6HESjw5u7wQ3imlyHSejyd6L0R8VCTa1Npbs6vb6/xyf7xh9yCEHzeEp0CHfaKS/
      +Zu/+ZuDEM4tTTKdbhAPqywsLuPzOpldWEFWZGytw41b13F6AgiYKMonS//s3CTzU3O4A2Hc
      TpmVhXkEp4vUapp6JU++UKbRqCM53awvL6IGQ0j7sJR+GbOZSSZyy4yE+pnLTrLRqBF1u3l7
      4QblRorlaoHBQKJnvUxlhbfmPmQ0epyZ9B0mciuMBCK71vsy7q/fYqGSo1hbZbVWot/f2xCP
      e2s3mC1tMBxMYuhV3l+ZoN/j4qP1GZbSV6lZEk5nANcu06G3mFx5j6oQYCZ1Gw2ZkHt36d+f
      we7wwcJVqrpBXA098tLZ9Y/JWS5m1m9T0rSDnBHWxB9U+dt/+x85c3aE1EaBVm6WieUjXIoI
      NEQPy/PTqH4/p0+denhfvZhDcIZYmpumHA2SShVIZRcx9Bhya55OeBSpI3Hn/ddxD52hpktc
      OHXkQH6HartCo91AswEE0pUUptkETC72X+Sj1ckd6SV8MYLeBE4RqrqGX7S5m5nbtd6XcSZx
      mn+eu4Iu23To/Ti6aVpIdtcJfpBbQbBaTBXWsI06QW+CteIipi1wqW9vw8tjbpV0fY3lpobX
      s09H74KT84kjLDW2d/oTXj9TmsWF5HFmKrWDiwQ7vSqZtTRPP3sZxRPA55UJhCIMRlXWS3WC
      boXBiJeaoJLNZgGTqx++i+qPYdkm0cQAY8MD5DfWCUYHCEeC+MMxYtEoffEYI8dPoLocJBMH
      F1EOuoP4XT42ahl0U8Pr8uGVFVq6xpvTvyXo3dmRbL2xwWD0FBvVDKqsULNFAnvQ+zImM1NE
      vRGC7iA+Z++p4y6xOye43KrgkgRapoVThI4FR8LDDAYGqHT2fmrjdoXwqgMcVbvp5fuC2eSN
      +euEe1hNXI4APgVen/2YiEd9vD5Adn2VQN8Qtv670qAN1tZyDA4mv3LbPk1Lb+FW9q+R1X7r
      HbJ7DmuCD/lGc2A+QGF1msl0m0TQS18yQalURsQGSaJWyjJ87ByipePxdHNE0nPzNJwietPk
      5MljtOo18sUy0UiA3NoqUrAPW+uWDiaiAbLl1sOBevuNptdZLKUIOZ1UOh2Oxk+QqyzRMGxi
      bpVCp41idzBQGAmP9KybrazQMi2GwqPkK8u0LRFVkUjVCpxJHGe+sMbx2N722LalMZtfwitL
      mIKD4VBvkdb14hxtS+RodIy14iyW4MItQb5VQzbreL1DhNQ47j0V8lgs5aZxOEMEFZui7mDQ
      vw+RfVtnPjeH2xWm39/bIcJKYRq/9wDToR2ShcfjIbMyxZtvXqGYT1Gu5Pn4/hL1ZpPJWx+R
      yn3SzbfVaGAi0CxmWFhe5e7NWyhCk5/98n0ESefDa3fZWF+hnMny5pWPmXswSeeANm+S5ELC
      JB4YRhK6BbwtrUVba+B2hTD0On2BQRra9t2IP4tNs7FBw4RCI49udPAqDnzuPjLVLNh77w6d
      qaYBk7bepKX17mTqlo24GQnu8w/S6NRwChYR/ygeZ4ByI0OhvtcUdpG+QD+NTpVSs0hb732O
      8SMRFPr9iZ4LIrslkQLlZvHgVgDJ4cE0Gqj+IKbiIhIJoThkYq0qfr9CIbPByICfXLEGjTzr
      TY1+n47kUhkaHELPrLGSq3Hq2DBer5tEXCQc9eK1AZ8DwVJQDigsLIkyboeH1fwktqhSbZXx
      ODxYgvHw3zLVdbzOnR3hOWUXTncMSysTUxNUtTbVdpO+wDC12hq6tfd24Yoko5smqsuDZvf+
      55VFAc0WaWkNCvU0qtNH3bRJ+jx0xBiC1KBhtPZonclGZQPV4cEyAXuf2qNbHaZzc4xET21/
      bfcGDMvG7XI9Lh/AZm1tncGBPtoauL4kwSq3vo5/YIB9GJ+wZ3RTQ5H2L01hv/UO2T2HkeBD
      vtEc2BbItnQWF5fxBSIYZod2vc7g6Biri4v09cVJZfNEQz7WUxmGhoYo11v4HDZ1TSTkkahp
      Asn4J/lHs3MzVPJ5Rk+dJxr0sbY0hxrto5QtIssmhm4jOxSCkTjFjVWSw0dxyHvdI9n8073X
      +dGF73Fv5RYVU8InGoiOEI1GCsER5rnhnYxIusNCtc4Pz7zUnRMsuLE6Req2g4Bk4nDHOZfo
      3an+Mq7Mf0jNVFBFbUf2XZn/kLIh8f2Tz3FlvlsT3GykQAlRLU2RiF9kLLHXOcFwa/Z1XNGn
      SKfvMRA7xqnY4J70ALDa/HryQyLBIZ4efHSV2f3FdzDU0+Qy4/j9AwfnBD8Yv4eTJu++8z6p
      tVXmUzn++ac/YSW3wftvvk6rWWe5bFMpVbk/OUlldZmrkzOsLc3z4Ycfcn/i/mf0apU8guRh
      ZWGWuaVVltbSTN3/iPX1IuuLE6xmSywtp/non/+eBys5Jqb3Os6Hzbm+3f/uzgmuYwuwWFjZ
      nDM7tSO9s4Pn0Zs5mlY3vXo1v0KuWaZQLyIIsJhf2bPNzxx5CtPUd2xfw7AfdoeezS5Sbdd5
      bvQJNNMk4tucE5zZ+5zgpNdPrbLMbL2zo5rlRyK6eHboBL20xRrwBSlpFs+OnEE/yO7QffEo
      SytrqMEo/UNDqC4H5564gFvxMDI6QiQcJrcwAS4PPq+Xui0yEI0SCAYYGBhgoH9gM0IM1z9+
      D9UXwrAtwvEkx0aHKGbTBML93QhxMEI0GiGZiDM4dhK/W6G/b+8R4u5c3yZzxRRnkt0+Rt0R
      SUECbh+nEjs7spxYu09AjZMqp+gYHfyeAHFvmKAnQEfvjl7aK7+4/SoBNbZj+zwSmEJ3RNKZ
      vhMIgsB/uf0aCX+UU4kjHAmP7Lgm+MvwesL4AsOcCfp2VLP8SMwGP7n/AbEe3j+Pq3sE+5N7
      75BQD7A7dLWwwdxqlrPnzuPc5VbkUY2y1tbWGBzch+WzBxpaE69jH2t491nvkN1zGAk+5BvN
      VzInuFor4fOFsWyb/kSE1XSBSMBNsdomHOyepXeaVUzJQyk9C64kDskkGo3gkCUcHs/Dvdr8
      3DzNepnYwBh9sRDZ1CqiO4jeKNAyZZyCji0qePwhOtU8/tgA3h3WsepGg7VyhoDTRVXrMBo5
      QrWZI13NEnB50W0Rh2BhIDMQ3H4V2tLzOx1UO21GosfQOmWyzRpDgT6Wiqu4ZQFB8pDw7S0d
      Ol9dQ5Dc6Hp1R3qZ8hIdS2A4PIJltlitZHEIBogetHYGtyeJ3xPbYzq0zVphDodDBatDy5QY
      Ce+tJrgrq7NSXMLlCBL39bb1TZXmUd2Jg3sAcqsrzC9t4PG6cAgaszdvceLbf8btO+P0BRRe
      nygzHHazkZGQBAGnaLOaqxD16Excn+XMmRGmphfoGx7g8tmTD3Ub9TqiIJBJLVOpVChm00hy
      GsMwkWUJ3dAAEac+Tqrloj9R46knzu3IdlF0IgomYV8f5cwkhg2q04PbGSIRiLNaWiXm72eh
      sLQjvZauE5RFWia4FBXbypGvZwATkCnWs3t+AACqrTJuWdyRnm7biHQDU7l6AWyNmH+QlfIa
      HoePajOPhUCfby/pJwIxX4J0rYhLNEkEdtcV7ouyCgk1RlnrNZLejQTX2uWDc4K7c4IVHC4V
      nz/A4NGjlNLrxKIh0mWNI4MJQoEAY/0RbFcQTdcI+P34A2FOHBvD4fbz4guXqFXqD7vI3bt9
      HYfXi66ZqIEIJ4+NUisXcPuChMMh/H4fkXCURCJBqG+IeNBLMtm3Y9slUcYluynWNnAoXhqd
      Ks12hYivj6XsJA5FJVdP4+kx3XhLzy0rVAwbU68+/H+KKGNYJg7JSdCz97wYyzZxKq4d68kC
      WIJEW2+iiCKGZZOrpfE4VEKeCH5XiI6x162tRb6ew+PwIkiuPRfXfCKrMV9YxKX0WgNtYVoW
      Ttn59fYB6uUchuzHJdu/0xn+KuqIdVNHkZSvrd4hu+cwEnzIN5qDc4K1FkvrOZyKSLVaJeT3
      4ovEKaRSiA4H/lCMgNr9Vs8tzVG0ZLRWdxawXquRLhaJR8NkVxaRwwPY7QZgk4xHSOVrjA4d
      XJGMptdZLKwTdrspdzocjx8nU1qiYZg4RRvNloi43ZQ7JsPh7VefLb2Qy0W53eJY3ylym3px
      r598u41LMJAUPzF1b9ugdGkRS3DiEm026kXO9p/v6b71whwdS2AsdpR0cQHFEaTZymKLbvR2
      Bo93iJBvr+nQJouZaZxOlXanm1mbDOx8i/oFbJ2F7NwO9EwWM7Oo3ujB+QCZ1WVm5uZZWF2j
      mltiOdticvwjVtZKLC2vMDP9Sf1rp1GnY4NezTI7v8y9G9eQZIOf/8Ov0QWd96/cJre+QjmX
      5ZfvfMjCg/s0dj+sZFsk0YUkWMQCg1haHd2GRHCQVqdOMjSCZZl4XAF0vbfsyC29pq4RVkQa
      5id6TmcIU68DAuVGYc+2l+o5OnobryIRUHuPk+iWjbAVSxWg3CxiIWFZHdxb6dC17B6tk+gP
      9mOikAwksPYrECbsTi9XTR/cCqAGQ4S8eXCp+P1u6tUSvkgCVVVRHDpYOtl8CUUrM1toM9Cv
      03B4GBkZJl1ZZ2m1wMlTR/H5fCTiMtGYF4cMhtONZIs4D3DAiiR1U55zlXWcTh/1VhlNK+Nx
      +ZhL38WrDiFLCi5Hb2WNW3qKYFNqt4lpZTKdrp4sybgcHkxL71nvUUR9CRqGRaWtkQz2/u2q
      iNCxZFpaA9M0cSkeTKOKIHqIeH0IUp3mXtOhbZ2pjWmGIkeYzswyEuttdsG2WJ0d6ok4FQXP
      4+0ObdJuW7hcX3QGi+k1nLFBvAf2eO4M3dBQ9m2e1f7rHbJ7vtanQIccctAcaE3wg4xOf8TH
      6HA/S6tphpNR7ty4xfFnXiKw+cU/Nz+PpTVx+mOMDPRRym/QthwoVotCXSfiU2jrNrLTg2y1
      kL1hgurBdlSwmxXs+WWEgBu73EC4cAkWp8GSQdRBdIFWB4cPYaT39GV7dR673kY8fRY7u4a9
      uIJwdBQqLRANcAcR+vYWCLMXp3Zlnz03gW0IiKfOYM9NgMsPjRI4VOzCMkL8KPQNIDj2tve0
      K2koatiNAkKwD2Gwf096D3Unr8DQkwi+Xo6XTaz7dxH8B+gEOySLUrlKwGPxn37+BgG5zd//
      6iO8DgH9U5Vw9XqjOwd4I83c9CwTswusLs8xu7hMpZBlZm6JlZVlUmszXPn4NpOTux+r0zOK
      BwQTmm0Ej0R3cpCNnVrBzqah3d0L26nVnek269CoYdtAwIcQSkAght2qggB2Ya9OJru2zzZs
      hM3GWHY2jd1uwcgYdrWC4A9jZ9dgI7VH4ywoZrEbGsLwEHatuje9T+Nxg9FriaXU/WKwD3AF
      kBwexoYcLK7kuHhmjMV0mYsn+sltpFCKOaLJGNOT9xBkB7reQlX9HDt5lNXfzuOJD+H3iWAL
      IICiyNiA3Q+RXUR2d4qgKOBVQbSxqy2EegHcHoS+fnCKdHMZ3Ah9O8zo9PrAEKFUgE4Zho8g
      KGL3tQwNwePdu+3JwV3ZJ0hgmzI0al0NU4CVRYRAEEJeBKWK3Wrs7dzG7qZ8IGiwlkII9NbK
      vCe8AZB7/D63NOy7dxFOX3g8PsCj0py/jh2i7U4Hwbl/1cn7rXfI7jmMBB/yjeYriQQ7RBvL
      4WZ2cgaHbHL09CXsdgXFF6GaSyM7FESnSl90q7OvxtzMAvl8lVPnzxP0KSzNLRPtS5AtVpDN
      Jrot4VBkIvEkG6srDB8dQ97nLtGdQg7TsHAnEgi2RW1tHXfIT6epIWKA7MQd7n1uglYuYJoC
      7kiYdj6DZYkIgoFliUgSCIobZ2D7SYePwrYM6qkMsiJgIeFN9OZUt7IpTFNATSaxjQ6NbAlJ
      thHdPvRCCskfxeEPIvW6zfhSLBrr64guD1a7ieTx4Qr1OtRiG/tTi0jhYRyuXpx0m0ZqDdGl
      HtwDkFldZmYhjVd1g6YhOxR8qptKvcbs1E0EwY8gptC0DrbZLWjviz7/0MBKvoDk8TM3PUE8
      GWAt3WBj4S56/AmstWs4kqcwTZlrb75N5OQxWrg4e2x/t042NkathBlNYJYL2IDoVrErKbR2
      E1nd6R9PwGzWMENhsG20cgn/0SPU19aRvG70em3PD0CnWAQsXLEkzUzvjawsE4TNdOh2qbLZ
      pEtGr9eQXB70ahlscEd6f+C/iIgrEqZTb2JqOkj71BgLkBwKltnrZkbAFQ7TKla+okhwQMQG
      dE0jFo0CFu16DcUXwWd3cxpsIJvNEo8H+fi9j4nEEpRbGsmBEQaTTm58+C7nzoxgqCp6K4En
      EgUUvOZRNMVDX+zRfeF3g6Q4kLwB7HYDQZaxDQNBkpCcTmSnA7OXKuxPYVsmguzAbDUQHQ6U
      QIBOsYDk8mBbBqJj736BIEvYpkV9eQE52HvuviiCZUmYnTaiJKCbNqJkITlcODwOkNqY+h6n
      f9omtdU1PH192JoT0bF/wUDR6Qap1x2ARbtYQnZ5vl4+wO92jjusrVUYHDyYXqDbYRkGorx/
      3xX7rXfI7jmMBB/yjebAvoZSD64xXXZwajRBOp3GFwhQrzYY6I+xvLRKIBpBEaBUrtBoaPSP
      JDkyNIK4uYrdu3OXtaUpjl9+hePDfYzfvYUaStAoZrAUB3anjSXIROIJWpU8/tjgZ2YV74VC
      eZ2/v3OVv77wFD+9f5v/5eUfcWPuGnczGU6GgyxUGvz4zAX+7s51/teXf9Sz7kp2nv9w9bf8
      73/6b3h//A1kVxSHVWeh0sAvdRtZ/ejiS3uy/dUbr2HIPiS9Qkf08tdP/mFP9/3T9V9Q1EX+
      xxf+lJ9fexVT9nMs4OLt5RTO+jSRoZf5zplndz0neIuF1HWub5h4rQK4EvzZuaf2pAeA1eBv
      P3idUCDOjy6+2MMNGv/uvVdR/fGDiwSDwpnzo9y9PYVZy3Dz/jJBV5sb0xlCisVCuoDqdmDW
      Mqzniswtpx9++Ov1OmBy4amXaeSWmV1YRjOgkNugqZt0miU0UwYB8nO3mF6vUavuX1QxEhxg
      0O/7/9s7s+DI7us+f3frvW/vewONdQYYzE4OOaS4SNROrZScqthyqbKVy6lK3pOqvOYhVbEr
      T65K4nLiqsSxE1uWKMmmSYpDkUNqRsPZMSt2oLE10Oh9v0seMBgOKYrTALqpsdjfCx7Q9/Rp
      oIG+5/8753cI+/uJubbFpMFwCgswEhskGUjwk2tnqTd2t+In4VE5PPQkdhG2KgWWNpbuxxsJ
      p1jaWt137iPhftJbq4iCiGa0X6TYbF5i7m2DAkEQ0A0Do1nnu6e/zhcf+xb1Ypqf372wv+SM
      Gq/fvkKhnOdA/CCGsc+aYge9TCx8CKvY7uutE/GN4JC6tCRP07YL2/n5FQaHkmimQDAYJhLy
      I5oGM3NLjIwfRLVIVFsmwXCcgZiPzXwJn0clvTCDyx+jXtrEHx8glYhy7fIFUsPjeFUXbrcb
      t9uL6nHhDsSwiy3c3gCqq7NeO0H39olHpriFoTdQ7F5WNuZxOXx89ejz+B2O+49ph0o1h98/
      QHpjjuFQHFFxsra5iMvhQzKbpMLDRNX9HQuu59dIhAaJOJ2oziBxT3sDNvV6HkN24ZBlrJKI
      xx3G6fAw7A8iGBqJYIKWKZDy7cNwTFB4bPAQTotKvrzOQGQYfwfUbyQnK5mbxELDhFztnKJZ
      Wc9NE/L3dacGaDR+/fFWvVJko1CjL767pq9SqYTb3YGNgj16PMAjdQr0IIZhIIpdvEPr0YMu
      FsHpG+e4lbMQFKsIkQGCVlAEg41SA8Wooksuirl1PE4nistJfm2LyECK4sYqDpvAYs7K80+O
      3Yt1heWmyfrqFi+++Hm2VhZYWtsi4PdS2lylpviQtAoIVvoTflY2Shw9PLbvgbvXr77ObKHC
      Hzz3LZbW7/L3U1NELAZl04rNrCBYA3znxHNtx/vZtZ+hiS4+f/hJLtx+h+uZDSI2ibJpxU6N
      huDkd5/4wr5yPnvzbaZyRZ5KRriYqfK9U+3l94NzP2SrJfKvnv0mZ66fYbnSRNFLSPYgK/Nv
      Eez/HF888hShfRbBAGh5/uzdtxgI9/HC2In9xzPK/Ombf4/fF+U7J55t44IG/+PMD3Gpke4W
      wUeODXL7xhzpdJql9BKTN65TLZbIVZtUillAp1prMjd3B01wMvXLV5nZqNPSNVTXtudOrVxC
      M02s7iCnD4a4emuWu7fnOTDo57W3r+Pz2ZheyiAIIio65yZvoFWLVDswMywKAk50Cjr0RQ4Q
      sEqIgoCma4xGBljM7q49OFvOk80uUtRgIjFCMpC4H08UhF0Vrb+O0eggYDKWmsC2i6VBNvv7
      RfBODFEQ0XSdrzzxXeqFJd68fX7f+QEguxkNBlnILncmnl4mHjmCTWj3l14n4j+AQzK7tyke
      YHZumfHDY/g9TmpNg+FUkiYSW2tLhOODBP0emvUG3kCIUDCEPxbHZrbwBKOIrSKVloxDaTKX
      qTEQdbNe1DgyPkolk2axYnJ8bAivx4PV7iIS9OJ2uQkGfdSbEI+G7p8q7RVZgKZoR2uWiNxb
      5hZ0unE5A9tFa2SUmNr+0avP7qQuWtGbZWbXZrFaVfq9flzOAHHVjeoKkfDuzxViObuE6grf
      iyMSarOortVymIoLh6yQLWYIeOME7TYC3jgxp4tkKEnDEBn0d0KMNJlbX+D40El89g4cXEhO
      ljOTxEKjhN3tFME21ramCPtT3akBqtXqx36/WCyiqnvveakUi1hVtXv3bz0+NfSU4B6farr2
      T7SaW+O//fc/Y+jx53G1CsT6+nnjncucGothDQ4xe+cqL337pW49/Z5oNIvczEzT7wmTLm7i
      tdnRdIP+0DjLmzcptzT8dheFZh2LoIPoYDg4/NC46a0pCo0abqsNsJL0p1jauE7VtBFzuFir
      FpH0IqI1wrB/b4axC5u3EWUXrVaBlikj7jLeTOY6DUPgUPQwtUaO6a1lbIKGbPFSLNzF7hqh
      z5/aszHW5NJZvOoom7mbRANj5CpZwu4EAed+1HuduY27GIKEhSYlw8mh8GBbVxYqC6xXhS6a
      4/qiPH54nIMJN3j7uXnnFomgD9Fi59rVi9162n1htaioVgcOmx+PDFaLn3qjSNMERAseqwO3
      Y7uV2WP3U260pz4LCFgEk3y9Tr2Ro2mA2xHFJYm4XTEUwcSvDtxfUbQX6q0apVoOEwHTNHYd
      T5bsOO6Zy85nZ9H0xvZrrBfoDx9Fa+ZYzu99hVPMfxBdK9AfOkajmqZhiBTquT3H20bCY3Pj
      cUTQTZmDofbe/JhNFnNpGq1ad5VggNjAAZZuX2bisWdo1Ipo9SrJwVFikSCh4P7XGHUDCZ0W
      Cg5ZQlJUMOrYJZkmEjIGFsWFYGq4HcG2Nr1IAmimTFQNYQgKptFAxsQQLaj3HKYFs4WsuPa8
      OcYqKwiiFdXiQFEcyGi7iqfpNRCsyKJEzJvCKlnQjSYeZwSHrOCye9ER7ue7W8r1LHarn2ar
      gMvVh13Ucdn82Nt2dP4IzBbL+VUcVhWrYmv/ZydIRNQYiqi8XwM8rHDdDc1mh3o8evToMo+s
      EtyjxyfBB4rg9I1z/L83JwmGVMorK6SOnOLFz7fTXvqrrE1d5N2pAv1hFa/fTz6XR8TEUGw0
      88sMjJ9GERqEgiGK6RucX2xhpYpZr+EJxzh+uP39u93i2vwlzqUX+INnXuK1Kz8mo7sZdluY
      yRcZ8LhYLFX53ce/1Ha8y3PvcWV5id9/5iV+fv01JFuQemUNt9rHVm4Wmlq/mQAAIABJREFU
      weLnG0f21w79zu23mS9Wdp3fjy/+mJwm8v0nv8bLF39MJDjK3fl3iCVOM33nZYLJ5/js2P7b
      oc+897+wxD/LzOwFfJ4w3ziyt/fXB2nxd5deBVuEFw99fHv169f+gQoKpeLWr2uHFjh27HHC
      IS+ZzPqeU3LYbcSSfWjFVS5fmsFpA9Vj487iJqLFzfTlN6joH3R4S8T7icXCbGxs7vl5O0ki
      mCIqQ06HZGScpF2mP5zCxGQ4lIJdfniOx4YJ+6IobLdDpzeXyFQKzG0uMRxKkc7tvx16LDpI
      wp/YdX42m5eoc1sJzlXyzG0u8fiB56GZ4wsnttuhz07vsx0aOJIcA71MNHQIq7B/5RsA02Q0
      1k57tcFwZBjDrGy3Q4sf0Q49MnGS0VSUrc1Vjj3xzL5sCHUDTESC4QiRcBCX04XN7iQS8FJr
      CRwaCpHOVPC4bQRjKRJhLxuZNfoGRnA7f/NrRHPFdRqSC71Zwi4YNCUHkl5HdQYx9Soed5iY
      2n479MXZyyiKg3yjzGhwux16ItKH3eZFokV/aJiIe3/t0OemL+B0+ECv7Sq/ej2PKbuwKzJB
      hxu3M4iglfCqCUIOB/FAgqaxz3boeyj2KNXiXaKBdtuXH4IgMrM+TSo0jO9j26sF5jfmiAcO
      oDXWCXarHdowHm5Rl81mCQT2vxOrR4/90FOCe3yq6Z4v0Mxl3puvEve7SPXHWVhaIx4Ncu38
      OU585SWCVrh04V3sTg/puVn8qX78apzB/kdHGzCNOv/72iv8/vFvc27ubTYaLY6E+ngnfZN+
      l4qgeHim/2Tb8aYzN7mRXeFb418gU1jgwvoSfU47K7UqDlpUTYWvjLbTzvvrubZ8kZVaFate
      RHYM8GzfRFvXnZ15k6Iu8uKB53h75gx+NYVN32BFC7C5fgZP4HEeSxzFo+zPHfrizE9Q/E9T
      zk2CEuDpNvN7GO/e/muCia9zwN2OrqBxbfE8i01LF5Vgu42mJjBxIMLfvnKOiX6Vvzt7ndHB
      Dy9GNjl0/CR2NDa2Ct1KZ09cWDiPZmg0TRBlBwmHik1scTz1PAk1TqbcvvEUQEiN45egZEDY
      k0JVRFLeBGFXBJvVg8+6f9v3nXiD4SPYaN94ymJxE7Bt112lRpmV4hrDwUEw4dTgCzRr61xZ
      m9x3fiP+7VbrPt8Aptk5vWg4MLSLR8s0TJEvDJ3qrhIcDAWZnVvl9GPjTC1leWxikJXNAiYm
      Aa+KKCkMDA5hkwzWt6qMj4+idGp3bAdI+Abw2dyU6gXcikLVlHEpbpLeMPnqBhG1D7+9/SKu
      VM3SFB3oWgWf3QNAOr+E3aLikgVE2U14X70xcGNtErtFRaGF1eJrO79Gq4QpOrBKEh6bA6fN
      R9DhAcGC12oh6I7QMgWizv04w20jy27y5WWinj5Ua+cOOyyKG0eb1o06AgG765OfCe7R41Gi
      pwT3+FTTtSJ4Y+YS59ICIWuDZHJ7XWd66RYIcU6fniB94xKLLStUN6nXRMKxCIcPHehWOh1j
      Z+bWp+gE/EM8O3J4X/F+fuPnzObLu57hfRh//YsfUDIs/PPPfL2txz84E/xX7/w1ddGJRS+h
      yx62Vs53aCa4xcsXXkcTTEo1jZPDxzkS31v79wd4NGeCIeCSmFvJ3ZsJTn/kY+L9I8TCHjY2
      d1dQ/qbYmZfdKueZyey9PXiHifggfcHkrmd4H4bD4SfibN9z58GZYLcrSNBuw+MO47dZOjgT
      rDAaijDs9ZDVpI78/IB9zQR37RPA4YtxOBnDa5OxKQJlTcLvDlHPl9goa6ihOMf8UZyyzo1s
      homJ/f0n/aTIVwtMJA7glTW2tP0vK760cAe3pw+QGY+3v3DvYcTdbipm+63GSdVDXpfZKG4R
      cTppStv2ilh9BJwuPn/0GWYLpf0lZdSZXFtlYvAYzyQUVE/7i7w/FiWCw7xFMDLa5gUe3EoJ
      j2fgN6cE9+jxKNCVT4DePECPfyw8ku7Q7559E4/TysJmi/6gDf/gUeLefUwO7RFTr/GfXv0r
      /t1X/xnpzBT/MDNDQCii2fsRG+uUDQvfP/3VtuNdmnmPy8tLfP+5l3jjyqus1w28so4muxFb
      +Y64Q//w3P9Fs/cTkhukKw2+90R77dAzyzc5t7LK9059njOTZ1ir6TRLC8STp5m6/XKH3KFb
      /PTiGTRJQtANRIubrx85vY949/htc4cGMGUnJ44cQG+UyZV+M71Fr155g6beom5AMjxKwCpx
      oP8kqqThtPsI76LIBBiPv98OLQgCGDqD99ycO+UOvZPfWHSAvkD799jDiUM4pe1b14ORFP3B
      JKfGnsds5jrnDo3CcCjMYHScYb+foehu1NuP4bfNHVqx2hgaGsZsVCk2ZcZGkvs2udoLI/ED
      RNxetkpbhO61FYtGE8XmRZVBsnjo20V78MXZy1hkB/l6mbjbi2x1Yxd0EqFB0OsdcYfeKqyh
      2LzMrU/jdgZItOkO/SCX56/jdYegVcKjJgg7HJ1xhzbqvDU1SVR1cWNtmbg3QsC5txnjD/Bp
      cIfu0aMbPFJKcM8RuscnTdeK4EZ5i8nZdWpbyzj8cWI+B8ubJVqNCpGAB8HqoZBZRrJaaDRa
      uNwqC/NptEaBg0cfo1XKobjcNGs6hw6NsjFziRtbVmQ9h1bW8MeiHJ0Y61b6AFyZeY+zC/P8
      mxd+h5+891PS5QYxpwWvt5/VlStYfON85+iptuO9N/VLLi4t8i9e+B3eu+cOfSgYYCpXZEB1
      sFSu8/2n2i+qP4rp9CTvplexNFZ3ld+DSnA2t8BfXbuKX27gdCeYm369s+7QRoOfXf4HFvQA
      /+KJDswEP4pK8NTtWQ4dHUe2uaBWIl+rMjs3B+hMTt6iWCpR13QqlRqiKFCtVgmH/ATCMTbX
      Fu65Rs9SLH5QfInHB4nG/Gx+AspxMjxATIEtHUTFyajXx1olz8z6IkeGn8LB7qxkJpIjRP0x
      FN53h95Rlg/FBukPfrhVfPeMJA/jlPRd5/egEvyTq2ep1ouMRgZYyq503h1atFIzrXzvVCcG
      4nk03aE9qp3JW/PEoiE8qgoYKJKVWDKB3+PE6lDxe1VUVUX1eHC73Agi+P1+VNV93zU64BIp
      6XZUh4Vo3xDRgJvM+ir9gwdwOfffP/9xZAtrNGQXWqNI0G6lZFo4EU9ht3ux0cTuDO3KHfrC
      9EUUxUm+XmLunju0TBPVFWZubRrVFdy3O/R99Nqu8nvQHfrpg0/itTtoNquMJMYJOxwddofe
      bkeO7mKe+mN51Nyhe0pwj38s9JTgHp9qulYElzZWubO0hkUCXzDCxvoapmLDa4WGaUExa+iS
      C5vQpGrI2IQm5ZaIagFsKgPJGACvvfITJIuK262gY+X0qfZncPfLg8rt+j0leNyvMp0r4pFa
      u9rDC5DZWry/d/jDyrLS3Nh1vI9iR9F9POrjcqbKP32sPWX5wT3Bf/HzP8cbPk5SyTLbiLAy
      0ykl+B5anj8//w6pcJLPjh7bf7xHUQkubS7hdtpwuFRuza1S31pmenmLbKFCtbBFsdqkUspS
      rdVYWFigUKlTLW1w89YdSqUPFr7hWIx4JMpmNtutdD+SB5XbHSV4JJzi/vqgXa40enDv8IeV
      5b3E+yh2FN2DfePYhN0ZY+0UwcdHP4OslzjaNwYmHVSC7yG7GQkEWNrliqlfy6OqBFscbpxO
      J4KpY7FYCIQiRANe3KrKytIcwVgKCR2b0wPNKrlyi9HBPix2N5Xy9hYZp1tlaCBFMb+FLxjF
      7+2AkVKbPKjc7hRsjWYVtytI1OXa1R7eB8kUf1VZ3u1e34cRdPsAkWCbRlsP7gkuVTZxuaNE
      XB4QLYTs1s4owfcxmc8scnTgON4OrUj6R6ME7/Dhvb/rK0vYPWFUp7XT6fTo8Wt5pJTgHj0+
      abpWBBczq6wUKzRKBWyyQEPxkZn6Ja6Rz3DAC+ulGrVSAVO24bWLlFsSYY+VXEVHMWrUmgYa
      EiePbRsnvfP2m6huGwvpMv0JFU/iEKlwBxqp2mRnT3DMaqJ6+xGaOeaL1X0rtz88/zKarCLr
      xY7MGO/w1o2f7yq/HQX5+6e/yF//4gcYipfnBwb40e1b1DMXO6sE0+LlX74CtgjfPPrE/sM9
      ikpwcWMBq9NP0zCYvnWTSzdnODQyQDqdZms1zcxqFgQBm6GR3ipSL28xOTlJqVRis1CmWqtC
      vfxBayfBxsmTE6DVyOYr3Ur9I9nZE5y9pwSPRgfpxIfnaHR733CnZozfj7u7/HYUZOB+Qf7T
      a2ep1IqdV4INk4PxMXSjQ/Y5j+JMsBpKolllcoJCLBEi4h0mXVjh1NgAG6srHEjFUG0SIgJO
      TUPGJBEJk68ZeN1BACRgdXGJgf4+hkbGiMWiVHIZMpYAh4c7o0juhvH4CBZhgEzdIF8pMJHc
      v4uFbug8P/YEbrHZkRnjHfaS33h8hI3iFqPRAZqii8f6v8jN5WkCDkdnZoJ3EGW2ypsc6cDP
      D3j0Z4I3M+t4QxHk30BPf48eH0fPHbrHp5qu3QKVtzaYSmewWiQcskDVkBGbZapNA7c3wOjQ
      tiHSjtKreqy0dJknn3isu2ZFu+BBJXhx9Q5/eeks3z72JD+evMRYwLvrGd4H471+6RWWKw2i
      TgseTx9bW3MdUYJ3+NGFH+8q3oNK8M5MsKwXcboSzM++0Vkl2Kjz8uW3f7tngnVdo1rMkckW
      7qu9pWoTUYRK+YP7YcOxGIlIlNxmlkepje5BJTjqkHli7HMExCafPfa1Pc3wPhhPVJwMe32s
      VQrMZpY6pgTvsNt4DyrBOzPB269xpfNKsGh7ZGaCu/YJIIgSLtWLx+ejVckTj8UJ+tzIkoQp
      QDqdJplMcuTE40QjUVYW5xgdH+teQnvg6uItvFYHV5eniVpEHu8fIr85y4lYgNtzizx7oP1h
      mA/HG/D5WalqvDASJdMw8EgaFbNzIuBIJLWreAlVJa/LbJa2uJaeIhwaQa8bPHvgFAGbxOcm
      nma+2KEiWKtwc3OTY65EZ+IpYezGHYLh4TYvUHEpZVRPf88dusenm54S3ONTTffaobcy3FlY
      x2aVKBezuGwuarrESCrM3PImXpeFfLlFJOhFEKBaytMUbBRXb9EQoqhuGZc3gN9lxxsKIgFn
      f/4GqtPKwkaTVNhOYOg4CV/3DLNMvcZ//Lu/4D9841/SauT4ozd+yjcnjvKDa+/x7cMn+PHN
      6/z7F7/fdrwHZ4x3lOWAUERzpDjmt3TEHboTM8Fnrp9hudLkiyOjHVeCX/vFn2Pt+yJbK9cQ
      rCrfOvb0vuIBj6YSrGstqsUt1jbzgMHtixfoP3SU6ZlFBlSd87fXoF4mvbLM3NIK1WqVubl5
      ACavTyLJJtmlOa7Pr/ABeUh28tjxMfRGia0uG2a9cuk1mnqTugEvX3yDllbHIzV54eQ3cZo1
      vvzEt3cV78EZ4x1leSz1OB6p1TF36E7MBO/MKXdDCT7ePw6CjeFggJFYu/fsD+FRnAlu1muU
      GxqxWAyfRyXW38/qYpqhwQQLm3UODsTwqip98QC6oiJodRyql2g4xMBAilqjxYHDYxSzRQyt
      icfjQbHZGBkZxWxUyDcUJkb7umqYNZo4SMTtY6u0yfMTzxJyqQiCnYPxJNlak4lIjN08/YMz
      xhF1u+1ZMhvINj9xjx8QCe3TGOs++5gJzhYzBLxxXjz2WTw2OyGn2tGZYIsscWlxioQvStDp
      fvgFD+O3dSa4lN/C4vJh7UnIPbpETwnu8anmE1GCK8UiqsuOKxBgY3EFU1YIRuP0xUI0Nmd5
      81YOh6QjahWc/ijHD493K61d8aA79KtXX0O2BbFRYzpXxCfr+P2DfGboUNvxrs5d4hdLC/zh
      cy/RauT5L2+9wqhbRLP3IzczHXGHPnvrbWYLFVJu+67coR9UgrO5Rf7mxnWeiAU4s7CCtXyn
      s0owJn/08h/zuVO/y8lYfP/hHnUlmMYmJV0lszxFy3QiCAbZzAdV1Fg8RjQaJZvd7FZKu+ZB
      d+itSoGljSVS92aCtyp5ZjeWdhUvGUoRlSGnw0+vvImm1Ri5NxPcKXfosdggyUBi1+7QDyrB
      fz/5LtVGCaNZ57unv955Jdio8dVT/5TN7Gxn4u1DCe7aLVAxm2FuOYPH50MRTcqFHK5AADQF
      SdbBaKAZTqI+iZzmIKRamb59A7svQiIS7HRKe+b26gyGYeJSRBaKFSJ2mYIu45V1ci2RJ1Lt
      t/SmN+aYK5Tx2+1MJEa4vTqDoDeoYEVqFcHi41hiYF/5/uzaz3CpSQqFRXy+AU71t9ciPLlw
      lbwuMxaKEXT7t3ND4GBsiK38KmVNY75Y4rldfOL9egzO3b1AJDjMoL8Tv2uTt26+TTAwzKFI
      e+ryO7fPonqS3fkDyOfznQ7Zo0dX6CnBPT7VdK0Irmyt8id/8l8ZefIFnM08idQAr711kScP
      xbGGh5m5eZl/8jv/pFtPvy/09TTa2gZSyI+xmUM5ehxaVZrXbiKnEujZIoLQQnAHkGOxh8Yz
      ynlaM/NIqh2zaSAfGEdfmcfIlxDEJlj9UN0EVwRlYG97c418Bm1lE0ExMA0Z0SZh1DQsY+0d
      KLTuXMfUBSyHDtO8dg7Bm4RqFsEXQ5+9jBAaQU4NICp7m1rTFyYxpAhCeQ5CEwitVYy6A2Wg
      A0UwoK9N7yKeQWv6Noj27hXBTn+MJ44eZjzpRvAPMHn7BsmQD8ni4OrFDhVTXUJQ/YhWED0h
      BLcHAdBmpjD1FmIwhiAamPUaRiH30FgAosuL6LAiev2YlQKmAaLvni9QuB9EHTE2AOzdUlL0
      hhEUARDANBB9AcTdiGoWO4J9u3tUSgyDUb//GuXRo1DNo6f3PrMshaPbeYaioDfQllcwO3Vc
      rtd3Gc9E9IXA1Lt7CzR/5wahwVHeee0VRk88xdydSYRmDVc0hUOBiUMT3XrqfWEUtzCKVTCb
      IFgQbBakYBg9u4EUCKFnNwAdUxORI+0po3p2A0EwMBoGgiIhiGA0DQTZBFMGswWiFSm4d2Ms
      PbsBpo6pC5jlre1PqHCb+a2nMQ0J0aNilvIg20Gvg2hBsCmgGxjVBnIsurfkWlX0mokoa5jY
      Ea0GeqmF5O2AEgyg13cRz0RbXkRwed7/A6hWd+d136PHbwM9JbjHp5pfKYJnLv2cG5tw98p5
      vvcH/xbVyPP627/k6LGjXLl8A4fHhVfWKGsiyA4GQzZWyiLPnDr6gTjrM5d5b75K3O8i1R9n
      YWmNeDTItfPnOPGVlwjeG1a6cvUaPpfCtbsrfOOrn2fq9nV0yYWkVcjXDDw2gXJdw+nxoRg1
      ZIef/kR3F+xNZ25yZzONx+miUCnz+fEvcXn+bTYbTXwWmbppYdjj4xfLU/zesW88NF6hus7r
      89cYcTuZr+p86+CzLOfm+NncRY5EBlmvVjnkD3C3WOcLg3tzv84UFvjl+iIeSaOoi3hkE48r
      yZHwSFvXvz1zhqIu8rUDz/ParR/iUsewGgVyLShsXcUTfJzHEsfw7rEI3mE5d53bOQ2fWGTd
      8PDVoeP7ireNyV++9z85Ofw1Dvg+/pZvcv5Vas4JspuT2O2BDxbB6Zlb5Got+kbGOHT4GHp2
      lnfOnsUWiHPhzKvULB5K2Q3mVrJk1tbIri9y5o0zXJ+c/JVGXofdRlMTmDgQ4W9fOcdEv8rf
      nb3O6OD7a4DK5TIAstbisaefZvrOFLl7rtH5chW0BoVyDVGEWnmdWzfnKJU7NJb3MaR8/ajO
      IIpg4aDHR0kHUbKTcKjogoBu6tjMBqeG2hs49zgihOxOPK4k4y4HeR38VonxxJMMeROEXBH6
      A0NY9tEOHfakUBUJi+ImYHNQqpdZKa61ff3OdQCj0ZNIRoWkJwEYnBr6PM3qOldWr+85PwCM
      Ou+t3KbcbNAwFb4w2Ik3P2A2OD38Ivnyw5X5kcAgJg18zhRW8UPGWD6/n4s35vjyCQc2Y4Lk
      cBIrDf7Pa9f45le+TEWTERp+TAQETEwBbBOjzGVbv9IWbHEHeepkiBt3l3npK6e5sbjG1549
      wsL8Es21NMFUkkI2g9vrR1AE4h47eEY58/orJIbGcT7QcyLJEpgCTqsTxdEBN+GHMLM5g8ti
      w29zsFYtIxUXiDm9bDY1Bl1+yrqIpsgMu9tflJ3y9mGToCir5AoLeGSRsWAfd5bP4bBHAJmU
      9+FHqg97Dl2rUDZkkq4ARaP9Q76Q3UXZkMnXChh6jYArRqlRZMCXwmNRONl3gtXqPt34RBvf
      mvgGC7kigtBA6VSTr2ChUl+jz/fwIXvZ4ich2sg2b+N0xB9eAzRrJaqajNfd/j6u/cwEf9g1
      ukePbtK9Y1DTwDBFemt/ezzKdE0JXrj+LjPNEKcGVRY3y8iywuzNK4xMnERslREkCZvdRVNQ
      cCkKwdD25NKVS1fwe+1cuD7Dd7/1ItN3blLVJZySzlq+QshtpVht4nD7cCkGDcHK6ODe1NOH
      sd2+PM8fPvcdXr30I9Z1le+OH+JP3ztLTKlh8Y7xrYnH246X2Vrgb25c5l8/+23SmSlenZnm
      6b4kP5q8yOn+AdLlBt974ssdyf3HF3+C3zfIZ4ba01p+9N7L5Foi/+ypr3Nj4V1u5xRGVI0z
      8ytYyrcJ9j3PC4dOd6gdGu7Ov8X1sp/vHu6EG7bJH7/8n/ncqd/jROyjm+GuTf+M2UYIW3OV
      mmAnvXyRJ499p3tKsMPpIOI0+cnZm9iEJltbeXzBKNlMmmyhQjZf4MLZs9y9eh7Dvn3LUyqV
      MAGb2eTE088zO3WLtVwVoVJkMVdERmOrWEEQRRqVEtcnJyl1yqvmI3iwfbkvOkHSLvODa2/R
      aFY4PPgkdrO2q3hhf4qY8/0VSX6rhFds8vyxbzAW2V378sPYquSZ22y/Xdtm9RJ1bf8eJlJj
      SAbozQbfOf0NvvjYS9SLad7qVDu0VuSNqUnylUJn4hk1vnrqd9n4mPbqo33jYIqMhGMMhJN8
      4cRL5POL3ZsJlmUZzaKiWkycDiuixUbI70P1eLCIJk5vGH8oQCgSx9KsIHk85NeXMRUHss1B
      XzSIPxBi9vZ1XOE4saB/e6ewquLxeHC53Pg8biSrg6C/Q3O0H2KrsL49w9ssYhMMWrKTF488
      R8Dh2p65dQSJ7mJP8A6ZUpaQe1vxNQU7B2IJzk/9sqMrkpyKgtPuJ+Ftr924Xs/dX5HksNoB
      GYvNxbA/iGBoJIJJmp1akSRaeTw1hsOmEnS2f5DwaxEkZlZv0R85iO/jVi6JIrfSU4S8Mcrl
      NRLhwUd7JhigWNzeFdajRzf4RJVgwzAQe1Vxj0eIT2QmWNQaSA43CzMLaM0yBw6fxKwXUFwB
      CpllBEXC6vAyOpS6d3WDi+evUS9vog6d5Migl0vnrxOJB1kvtrA0N6nrFmRFJhyOsplZIzU6
      jsdh6Ujuheo6P5u/xqDbgy46OJE4zNTadaYLWbwyFHWRuMNBptHgS8MPn0HdidfvcpGplHhh
      7EsUiwtcWF/ieDDGjdwGDqFOU7DzwuCT+8r93bm3qJoKFqNG1VT4ymg7RlFwduZNirrIiwee
      o1hZ5c30XdxiC7stzGrmPJ7A4zyWOIpnn0rwSm6S23kBW+MWwcTXOeDujLHZ0sZFZuoePtvX
      jvJd59Xb7xJQY5/MTHCp2iCXzRIO+fGHomQzs+RLOhuZZWqaRq3aIJfN7FxJuVxDsbmwqEGG
      AhaWVtIgq6zNXEcTHeTXF5FdTpBdnPuHv6chyRTzHSqoeF+5LTRKFMtrVAyIeeLbrs6WbcU0
      5Y0TdrXXGbkTzxAsHFT9lI0d5VYk4R/GLhoICB25ddyJY7N68Fnb124slveV4HNLV2i0KiQ8
      MTKVDU4NvkCzts6Vtcn9JbejBDdKDAc65AwNoFe4uDZFudHugYiVhCdAppzp3p7gZr1GtakT
      jUbwelRUtxtJlvD5fLjdPmShidsXweN24Va3v79zvz916ybxgVEcVoVAKIzHrXDh3FXGjx7B
      5fagOq14/GFcTifxZJRGrUYwEsNuVTr6Ovo8EZqCBUOvgd5Etqj4LDKm6GCjtIzT6iXoaL8A
      91ttrLVMFKOO1+4BuP9Vtdpx7DLeR2Jq2CweXLKAKLsJO9sr0hutEqbowCpJTMQO41JsaHqN
      hHcQr9VG0B2hZQpEnf695ybIHAwPYZMceGxOLIobh9yB/8GihbHQIFbZhdfW3h/9enGFgdCB
      fyzu0DqlUgO3u/ttED0+XfRmgnt8qulaEZy+cY5bOQsTQ1FWVlZwe72UC2X6EiHm5hbxBIMo
      AuTyBcqVBolUgqHUANK9Bqkrl95DMZssVyx86bnHuXr5Ai5/jEp2FcNixazV0AWFYDRKLb+B
      J9RHPLKPj+cH0OfvoC+tICajGMsZlGeeR5+5iZHJIQZUjHwFQdYRfHHkwcGHxjMKG7Su3kAK
      OtALBtanTtO6eh4MGcEuYxRrCJKOKdqwnHhsTzkbG0tos8soEwdoXrqG5fhhmtduYX2mvSK4
      dfEspiZiefJpWhfPIgT7EN0K2tQi5uZdhORx5LEJROv+imBj9Rb6ugDVuwgHv4wc6MBSEKNB
      6+pVsDhQJtpTlnfy6OKZpMKRY4NcvngTrbjKhatzeG11zt1aw6eYTK9kcTusaMVV0utbTM0v
      33/zl0olQKJpiDz7xAR3pudpagLZzCqVpk69nKOhKwgibN69wK10kVKp2LHMxVgSwRtAiiUR
      fAEEQAxHAfP+V7NawdjMPCTSvXieEKLq2P6D8dsxdBBDEYytTcRoDNEfAlGAfRTBYqgPwSrS
      mrwKzTqtG1ehuQul2uZCcG7fP5uVMsbmOtrNScx6BfnEs1DcQJ++tef8gG0vqLtTmJUyUjL1
      8Me3i2hF9KuIkTYH7B/Io2u3QMXMCneW1omEA+Q2MxiySiriIJ0pMn/7DgeeOEXEJrK4vIIh
      q4R8NhqawPBAH9N3bmBxhxCNFsnkdm/HT3/0AyZOPoUk6AhogBVEB/GXAAAArklEQVRJBkyD
      7HoGbyRJMtYBlRLQpifBVMBogmRDcNoRRBOjpiNYwNQlBNnAbAnI/e31IelrywiSgFGuI9gs
      YLQwdQmKGVDDCKKGaVqQ+/beDqGvLSNFE7/yta1rF6cxdQkxFMAsZDFNBTmZ3M7bbgXNwChW
      kQcH9pzfNg30tRKiXcNUgoiODtyE6DWaV64hpUZ2MVPdQF8rfPJKcK2cJ5OvkUrurve9pwj3
      6Ab/H5Ix/adXSWiMAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Room Perf by Offer Pantip' width='192'>
      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
      U4wk9iaN+H/tTus4v5aLJgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top Submit Device by Offer' width='192'>
      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
      pFQ/eGNjEgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Submitter Device Release Price' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Submitter Device Release Year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Submitter Device Screen Size' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Running Total of Submit by #Impressions Before Click' width='192'>
      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
      1/1v3PKnAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Day Difference between 1st Click &amp; 1st Impression' width='192'>
      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
      fR7a/w9Zky6vE83qFwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Kaidee Reach and CTR Timeline' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Performance by Pantip Category Timeline' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Performance by Pantip Category' width='192'>
      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
      PgCLxSL8f71cruaqgVw5AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Optimization Results' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Landing Page Performance' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Funnel Chart DB' width='192'>
      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
      6QTvsA36Xzc+3xvcIsraAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='All Offer Timeline and Funnel DB' width='192'>
      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
      AfK6sacAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top Device Performance DB' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Perf by Pantip Category' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Pantip Kaidee Room Perf DB' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pantip Kaidee Room Perf by Offer DB' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABM5AAATOQGPwlYB
      AAAgAElEQVR4nOy9Z5BcZ3am+aT3N73PLO8LljAESZBssrvZTTab7Vu+JY00oVlJsROxsWYm
      dmNXEbv7QxuhndXsShqZ1ky3eiS1RFJ0TbLpQQuA8EB5X1lpKr33mXd/FAACaBDIKmSR1c18
      /iCAynvy3IvMut+57/eeIxFFUaRDh88o0k87gQ4dPk06X4AOn2mufgHWg6tU6hBYXqZ+zaIo
      k4xSqjUBSEfXWArGbhkwn04wMTFJIp277Zs3qkViyezP/HuzVmZqcpKlQKjV87iOhZkJ5hZX
      aH7M4q5WyvL8M8+Sr23f6u/cubO3/HkyGmZuaRVRhEo+xbPPPE8qneCZZ19kG9PqcAOyP/qj
      P/ojgGd+9BfUFXreOzPN7j43M/NL6AwmTrz5E1T2fiSVNMfffp2kKODUSQlEEpjNRoqZJCvB
      KBazCYkELp14jbNLaU68+iw9o/tYXVpArTOQSyWIxdepiwpmTr/OG6fm0YhFZkNZ5PU84fUY
      gsmCTCqhmlzhL//5NarrM2SVTkzyGqvhGBaziWwyytp6ErOgIbASYD2eopRLUUOBVq0E4M/+
      3z/FoZfy5oU1RrvtzC8FMJnNBAMrrEdinHjzeWrmIXb1WJmdnUdvMrMeDpKIrVMqV0kk4hRL
      ZYKhdcxWM4HFObLlOjqlhEAwTDydw2Iykk3FWA5GsZjNhFYXKTek6LRqAP7+Rz/EbHFgNBkI
      h2MIOiVrkTiCQU9k8QL/8topdGKSty8EWT7zGkrfHibefBrz0BF6bVpm55cQTGbCwQCx9Qg6
      kxW5VPKpfVB+UZFf+5fv/83f8j//H3+MTFph5sJJXj52Bp88gi0R5p9f+inDbg3SXJQ/+dOn
      cZqUTIwd5tz77+Cx6bgwfJRvffHujUASkMrkKBRSFmcu8C8vH2OPU0Ti3seFU8/y8H4/tYaW
      ailLJC7jw9ef5pEvPshf/fACf/ivvgNAJhljXWnikEHCX/zNjzg44mZiZo7ZySn29ppZXO3i
      nTeOM+CUonDtZmXhef79f/9vPzoZCSgU8Kd/8ie4vU6OnZomcukYj373t6hXK2i0Gn74/b9k
      9K4j/NX3/w55ZoXh+x6lFjtJVuHm5Fsv8/l79rIQLdClzvPk09/nl3/9V3jypyfoFypE9x7l
      /fdP8uB9hzn37hRvnAuQW1/l9/+nP8JpUFCrVihk1/nrH55BUojyyOcOcCmuwedxcvHMae55
      +Bvs7hI4+R/+I25tDZNGS7xSRatR8xd/+idY3F5eOnaKauQS9z36XXo6H/5t4boa4Lf+1W/z
      z//wY157/p+Rm70UcxnMJhOVXAql4KDH76ZaSCOqBA7f9zB7ei1UpVoOHnmAw3sGrwv76//6
      D5h97ycU5WaqxY3l0NieA2iVUoyCEbvLg9UoAKDUGhgbG6VazF+N4B8Yw6AQEetlZDoLg31d
      pOMRVIKD/h4fuWwOi8NDj9dF39A4annzuhOz9+3jVx49QrYksvuuwzx0710Idg+H941jMVtw
      Op3kSzV2jY9RLedBJXD06GE0MhgY3YPNbmX3yAC56BL/8vqHuG160rkSHl8PI4M9rK+tord5
      GR8dIRmP4enq5/GvfR1BLQNArtIyPjZGtZjnnj29/Nl/fY0H7tkLgMfjZmlxkcTaLGqTF4vF
      gtPpwmwx4XTaSWdLjO2+i0ceuheVYOfo4X3IOp//beHqEghgaM/dWGR5LP5h1sNh+gf76O/2
      4+zbjaEeZTlaYM+ho/RZ5SyHE+w9dBSPQWRhLcrYrt2o5BvfJ3d3Pz6HBYPJxOrSMj39gwz0
      92BzetAopOzas5eZC2dwdA1iMhmZOv0OqQJ85auPo9eoAJAqNHzxc/cwH8yyq8vApZU0X33i
      axglWebWS3z58/cjVyjxeZ2YrE4EnQq/z79xUgoV+/ftQSJV0uU2MTm7zNDoODq1Ar9/4zUm
      q5O9oz288eZ7fOGxxzHpNHj8fqSXf2bQKOnq6kJtdmBR1NBa3HT5/VisVtx2C/aeUUxikjMT
      83zui48SXZ5GVJsZ7PZs5F8vcPriPF954gm6PRamV7I8fPkL4PD1El+6xGwwy9eeeAylXIrZ
      4UankmN1+hgf8HJxcpa+oVEEnfpqzh3aj2Qn6AAffPAB99xzz6edxrZx8r1j9O86iNWo+7RT
      6XADO+IL0KHDp0VHB+jwmUZ++5d8tnn//bdx292o9XpkSi21YhIUetTSGjWJBpfdfNsYseVJ
      nnvrDFanhwcPjdGU62kUU4gqA/J6EVQCZ4+/ya6DR3HZbh8Psc4LTz9Fuqaky2XB4rDT0+Uh
      ma2wNDfF0NAwSpnYcn43BOfVF54mkq5x35F9vPTK67jsZjIlEbvLz1cfeeC6VwfnzlHU9jDg
      0TM/M4/b6yGyHsXp7SI4fZpkVYnVakVGA7evi2QsgkajoZRLY3T6EbQbNV8qvMDTL77N5774
      ZawmHfVsjPcurfLAfQdJRyJXr38stMhyIMahg7toSjRcnJjh1WMnAPi//rd/e11ux4+9wlKy
      zuePHkItkzAzeQmVswe/IOGp515lYKCn8wW4HYlEgPOnZqhLyhgsDpqlFA2ZDoe6SlnXzS89
      8YXbxqgUskSjUdRGB9//s/9AWejj/l1eJgIp9FQZP3A3i0tLhJNlfuNXv3PbeLVUgIZ1kEdG
      vRx/5x2i8RgXL57F5x9kefoMgXgZQzXYcn43BCfbsPLoI6OY7E6cjovs63Pw5Btn0Vs9P/Py
      ci5DTlqjlI7z3rFXEGxessUSct7HYNBRq4sszU3TFEUUqlNUmmpUihrx+Tnu+tI3uXffMABS
      mYJ6tUxk8SJrSgPpUJBAts5PXnyK3Hrt6vXXyuvEkgUqmQA1XTcWQQ/87IcfQIpIMVfg9WPH
      6NErCOUryONREu4xvC4blUK68wW4HVarE8FgBEkBEQlT51ew+Lvo9uiZj5ZbiqHSCTzx7V9m
      cfI8rsNH0DiGCM9+iMflQ1VNEE1kGB7bg0KhbCmewuxHljjJK28u43faESWgVjZYCITwjdyF
      QiLFoBpkocX8bgiOIEvw0itv8q1f+i42ux21wcg3vvsrzFw8hwhc+0RWbTBy7L1XyHjsyDRG
      TGYTfSOj5JJpFuan6e3to1ar4/F6iCXinD57CbfLxfCuUeqV0tU45WIBjVaHzuLk3OnT9PX1
      E0rO4/UPI3Wqrl5/ALV0HbvPRTC+cX6/95vfuumpVGp1VAoZfS4jl6ZWGBjsYnElTHdXifdD
      CUb7vJ0ieLNMTE4yPjb2aafxc4nYqPDyT15kYN+9DHY5P+10gBueApVyaVLFBvJGEY1541l4
      o1qiJlGhVkgR6xUWViP093VzO10mNH2C+ayG+MJZ5AYvCnkZhVRGBgNudQGl3olOb2J0qIfY
      whnOxtTYSnM0nbsJTbxPsS5g9+oILq7g7BnGTAb7ni/Sa1Hc8UkXCoVb/rxWzXJ8dZVDPi9n
      QhHu7RslkU+xsr6Cx2plvQilUoJms8m9g3e19J7vzHyIUq5AL2ni77kLeW6R6bKJWj6AiEi5
      WkEhk3Pf0IE7Ore3po6jkCkY8fQzFZrn6NDBlo47sXAeEZEj/fsIxRbJoiOdCdMUm9w7sIvn
      TvyUqtbKt/fce0f5Ta+cxWAbIRWdxOHejUPd2l3vljTSnAhkEBspjvTva+GAIicWgogUrl8C
      hebO8+P3VzDnpxn93HdYmTqLUtZAbesmn4jhtmo4eW6Wr/3Gv2Hcb7rlW+j1egrBJBqdlkyh
      zt5dPlRqBR9MxZEKRtKhZUa+8GWyhQoAammVhkJHLLCKQqtDWVLSQM7ufQew2SysLixg1bdn
      xabT3fp5/Mm186hUSs5HllEodMylghikInKDlYVYAIPRj9tkIC+qbxvrCl1OHwaFlLlkhngm
      iF2pZdzvZ20tTrohx2+RkazLWo73cQx7vETLTQqVJFart+V4NoOGdENOsVFhNhHAaR/CZtDQ
      VJop10rcu+deFjO5O8uvWWYxm2HcmGQpn8fUKKPTbbZIvxlapOIsNvtgi/npUMinMBr9198B
      Fs4c49n3J1HVigjOLiKr0/QOjlIqlrg4NctXvvwIF0+f5OHv/C5jPuPHn2ez+bE/20BkZmaW
      4cE+MvkaRkHb4ol26NBefmYJlCtVAZBKpeTzeQRBoFpvkkun6O3rYiUQpb/31tJ8ubyF4usy
      zWYTqbQjT3T4ZNiWIrhcLrO+cJZTy0U8Fj3dXR5WAhE8LhsXThxn/5e/gU0FJ99+Bf/YfZx4
      71UO37WPaLpIfD3E8GAf5YacZHgZuc7CgX272p3iLTm/dIYzK0sM+LuZDQb43gPf4LUzLxMs
      VLAqKjQ0XTzS28XfnfuQP3jga7eNl0gH+YdzJxizmljKFvmd+x7n5bM/Jd9U4NKrWUxlMcpq
      VKQ6vnvg4S3lvBad46cLC9jkNZI1Kff63ZyNFvnlA0dbOv7ZD58nWZPy2/d+hURqlacmLmJT
      1PC5xjh1/ims/gf4/Njd2FR3sgxt8tLZV6hK1UjqNaRKA4/vPnIH8a6ELfBf3n0Fs9HB1/be
      18IBVX749nPoBcf2KcFajZpqXcL4kJN/efk4410CL757kcFr7h5StYnU6jmaSiPlUpHllRVs
      DjvTk1Pk8zlcLheJRGK7UvxYRj0DWMxODnr6cZhdKACpQke/yUxP110IsjovXHiXcuXWxfQV
      rCYvPsGAVCJFR4NMA/od3YSTYXoc3YCIVCKl3mxsOWefYxCrSoZabcJtMDDsH0Utaf1325Xj
      AF669D7FSo5kIcNSLMAXD3yNcnaNY7Mfbjm/DZoMOgdoijL6LRb6XH13GO8yjTxuxxgqaavX
      r4zTPIBWdsNu0HZRr9cBsNltLC6FOXJglLlAggPjvYTiGURErCYBEVDpjPhcNiRiE6lCjVUw
      YLZbkMnVSKnhcPsxXhY7PinOLp5FplCzloqgVWhJl/PY1EpyohKLHBRqE4/suh+LVovNYGk5
      rkswU5VqaFTzSMQaVosPeaOMQW/Dpdcj6Gx4jNY7yl0vl9CU6+ky2wEpNsOtH1ZcoVxO05Tr
      0crlHBk8hEmjwWe2YTI4cOsNeG1eaqKEbrP9DrKTsLC+iN/i4FJkDY/JiVXXhv9bmY5QdBK3
      vR+7XmjhABXrqXnsFv/2LIEqlUq7Q3bosC383AphnWK5QzvYtq0QlXySi5NzaA0WFEopxVwW
      t9dPaC2AxWwmEkvg6/KzsjCPx+8jkyuhkdaoiCrMOhm5ioSRwV4Ann7yKR5/7CFefOsco91W
      RJmKldA6PU4zOp2G6eU4bped8ZGBtp5DNLHMP104wx8+9E1+cvpF8g0FCrFEUy5Qz6+iNI/y
      zT2HthTv5bMvI1M7yGVWSdakDFmMLGeLfO+eR9uS+zMnn8Nq6eP+gdYeIDx9/BmSNSm/e/8T
      vHnxTYKFKrJ6hobcSDJ0AlvXQ3xx9z3Y76gIvkKN506+DGonT+w5fOfhmnn+5q2XsJhdfHP/
      /S0cUOE/v/kMesG5fUXw9MwyQ91mJidmyKZiZBsKzr37NmWZnLXZi1itJoKJPBKlnkg4grKQ
      Yzmdp5BJMHHxEtncR90inBYNb5+cw2FRUSxWWAlGsKtLXFqIkauKuC164rFo28/BYe3Brd/Q
      KAadPYQSIXpdPawmQuzuvwctxS3HS+QzBKIryDUbxeegq5d23oyT+TQL0dWWX6/WfFQED7p6
      ARGjwYFFreTLh79FORPgrekT7UmuKTLsGaHRbNNSuZHH49yNWlJv8YAyTssQWpm4PUUwgIoK
      Z85PYPYNMjY6SD4RpX90lHI2i93lxmSxko5FUavl2CwWisjx260IgoDVagKZinIpj9FoRCrX
      YDUbMBkFatUygsmGTrBg0cnQG82U8zl6h0bRXbZTtptoNo5ErGO3dKESq/gdfcibJTQ6O25h
      80pmNBtnwOFDqtTj1igRFXpkzQomwYXH2HpRfSt0CgU6nRWfydbS60ulFKJCj1auIJGNYjV5
      UFNFq3fgNRjx2X1UmlJ6LY47T04iYS40R69rAIu2PUVwMHoJt30Qh6GVIlhNJDmHw9K9PTVA
      sVikUS2xuBZlsK+73eE7dGgb2yaEdejw88C2FcHFVIS/+uu/pe/gg+hrGdz+Lt547yyHRtyo
      bH0szpznG1//xna9/ZZInTlL4swMKr+d/Foe+y43yYsBBn73W4RfeJlSrknPIweYefIdrP1W
      CokK/b/05Y+NV42GmXvqbawDdrJrGSy7uoifX2bkd79FYWGW4AfzqDUNRKUBsZii3lAy8Ktf
      2VLua8+9RK2uQCYpU28o8d0/zsILJxn9ndau8cqTz1ItSxn89a8See1NiukakmoWud1L/vhr
      qPc+hPvzR1DrtvaRmf2Pf47h7s/RiCzTlKuhWkOiMeD/8p3tLt2gRuDpl0Hvwv9IKw8lKsx/
      /1nkju1Ugs0uDu4aZdhrAFMXkzNTeG1mpEoNF86f3q63vSOMo4MonC4M/i7co2YU/gHUPvfG
      RZJIoNFg5cVjNIsFjEO96Lp9t4yndLjRu00glaJUNpC7u9GoRCo10PUPodLLEAa6KQTCyI0W
      1Oat77QUBropBUKIEglio0Hg5XdoFPK3P/AyMr0JjXWjCDYM9oIoIvT3UAiE8HzrmzTWA0Te
      Obnl/Bxf+CLNTARhaBBRlGHwWzAM92853nU0RYSREcRGq0V1GbV3ELl8m5VgAHfPEIHps4wf
      OEqllKVeLuLrHcTttGG33Ymq2H5Sp8+CQonKKFAqQTMeRKrUUi3k0dqNSLUC/sceQmXWk52e
      Q2mxoXXdXrnVOi3URRUavZSmQo9YzKGxbxwn1iroevtQqkQkWiM679auSTmyjtrnR2c3IjdZ
      8D36OZRGHWpba0V1I5cGpR65Sk4lGkXt8iCW8xhGR9AYtWh7/DSbEvTerRXBhaUlVN4eavF1
      dH4nqek1tB4narNhS/GuQyIhNzOPfqAflamVolpNaW0Otb/roxqgWNzcI71bUa1W2xarQ4ft
      ZEcpwR11t8MnzXUVzdrEcZ76MIRX12DPSC/BnIT1qZMMHLiH9WgGpzLHK+cj/I//9ndvWz3H
      Fs5wfE2CXVXB59tYK68FpkDi4ciRcdYmPmQyp8ZAAY/dTBU5i/MrDPa5kaiMXDr5JkMHH2a4
      x71d574lnnrvH6hru3HIKwTy5TtWbo9NHGMxnccgrZBrKvnt+x5vS55PfvD0puJdqwT/+L0n
      KUt1KBu5NivBTX5y6iWqchNjQo3zeSvf3bP7DuJdCbt1JfhnzkZdTTOdqlNrNNBLJEgEO6sz
      51lPFan5+/Fq66TLYFPf/m2sehlLKymAn+kmAApMqjrLazmkUikyiRSHXeDSpSm6h4bZd/dD
      JBIRYGd9AUa6DxJIhhhz9yJJtV5kfhzjnl5q8hTVcgptG2/GWq1lU/HUGhNu9cbrDXobelFE
      ItGAKHL48Ld4d+Y8b01L+U5L++0/jiZD7iEuBKd5dWYZhbEV/24LXFaCqYVbPGBDCRbFG9qi
      CHYfX/n6MKvzM9gMMoI5KbutChKFOrJQlP1jPUyotVhb+PBrzW52+dyY1HLUCgn5ugyLwU45
      nSOWryPYXZgtTvSqKXQqGVWpBkmjyuioGqlaoJRP4PTuPBFNJlawmbycXZ3BYum943hnVmYw
      GP3YFAYKYgsXtkU8hs3F8wlG0g05sWwSp05HVWZAVsuAyoxVp+fze46ymLn90JNbIyNVSLKr
      5yDfuutBJhOl2x/SCgonWnEKm3Pw9q8FwIhBkcNo7NmeGuD2nuAOHXYG2yKEtf0pkCjSFEHa
      GRLRoc1smxIcmjrJTFrJSI+TcDiMwWgkny3g9dhZWQ5gtFlRSCCVzlAoVPF0u+n1dyOVwCvP
      P8Xuo0cJTAVRaSSoJWXyKheKag6LXsH7Eys8/ugjaBXb+8TonUuvMpmp83v3PcpCeIZ/PPMu
      u1xuik0lHq2CtUKFXzv8SMvxzi+d4YPACv/mgW9c9QSrJBVMRj+R8AWUpmG+tuvO+gIV8+v8
      9an38MjLm4p3rSf44vIpXplfpFuvQKa2El59r02e4CuI/Mlz/zcPHfoV7nL/bLvFTbMTPcGg
      YGx3D+fPTtPIrXP60gomdZlTM+uYFU0Wwwn0GiWN3DrBWJL5lTBXfsE7ugdYnDhDcG4K59A4
      62urhJZXaSokxLMNHn9gNwuB5PalfhmbpZdDFgOxOri0cg6PPIRcIqHRbDDi6sFvvbUSfCM+
      ezcuOaSu8QRHCxkWowHG+w6j4c7XxM9feIdqtbjpeNd6guW1Mo8f/ipSiZRGs9lGT/BlmiUe
      PfTLxBOL7Ym3Uz3By8shevt81EUJNpsDp92CVGyysBRgYHQYQSmjWBOxOTz0uM3E0znMl8cm
      9fn8aJ0eUsEV+sZ2YzBoqRXLOF0OwrEMA31d2z40rlxOk6jLaVayyJHid/ahltTQai2sRBcx
      6Kx4N+HhTWbWqcj11Cu5q57gcbsHjcaEiipqrRXXFrZXX8su/xhWrQ6xUd5UvGs9wWUUDNsc
      1OplLIILl07fJk/wZSQyFsLTdDmHMGva0BPq58kTXC5kiWVK+D07ozdkh882n5oS3IrqKzab
      iFJpZ4pHh21j24rgtYnjTKWU7B32E1wL4nDYCYfDmOwuLEo4cXGCwaExTDo1NvvGbfXHf/cD
      Hjx6F6GKQLOQpJHNYB7oo5BII6fCarTIo488+Il9IY6df5lLmQZ/8MBXODl7nHORCFZZibq2
      G7eytmkPr9go8X+++Pf8L1/9HQLrs7w0N3e1kZVZ0UCisvLN/Q/cPtAtmF+7xPtrYXTkNxXv
      Zp7gam4ZT9d9zE483WZPsMgfP/3HfOHIb3DA473zcDvREwwKdu/t5cl/fA6ZXCQciZENL3Ju
      do1keA2F0U4+HiEU/6jx1dDIMKdOfsjE1Dx7hp2shIosLc0jF6vUFGb2+gXapZ20gs3azxGr
      nmgd+pw9KIGB7oMYZbUteXhfPvMq1UaVchP8zqGNRlZXPMHODa/xnTLg24VO1th0vJt5gu8e
      fRgqiW3wBJd4/MivE4svtCfeTvQEAywuBbnvvoOk03kEwYBMoaTX7yGVK+J2WrHrZRQUDqq5
      GEajEaRyunxufH4fS8sR9uzuR6fVU642cFiNZKoSut3W27ZmbxflUpp4Q06znKHZqKDQmBBk
      deRqC81aftMe3kHvME6DmWQujkPYKJ71cgmiQo9SUqfbObglj/HNqNfLm4p3M09ws5rBZPTh
      0Grb7AmWMR+coNs1jFnbhsmZO80T3KoSnEwkMFs/uQ90hw43smM9wbcqkjvbpju0i21Xgi2S
      EhJHF1Y1KGgSz1VRiEUaMj25dBRBp0Wu05FZT+Ls6iIbj6BRS1hLqTh6aIhKfJFnPgzRb1Xi
      dtnJ1yQEluYYHuilipq12bOYusbZO9KmRqvX8MbFN652c76x+7JNCRZLL/f1tT4u6Vpl+afn
      XmG93OSwz8czl85wtLuPlVxxU8ryzbiiBP/2XUda7l4N1yvBf3/sB5gc+zjgEHhhdoZK7Gzb
      lODXT/4Ilf8R0sEPQe3k8V2tTbC5JTtZCZ6dWiYYDBEMBpmcmqSYz5EqVinkEiA2KBWrrCzP
      0kDH/OnXWUpUqDfqGPQfrQ3dFh3TKxEi0QSFTAK7w87k5BS5XI7+sf1QufNtyTfj2m7ON3Zf
      ThbSLMYCm4p3rbIskUig2cAgrfK5vV9hwNndlsZYV5TgzXSvhuuV4H2D9yFv5Hj50gcUStm2
      KsF7/SMgigx5hmk227RnbCcrwcNjQ5iNOsrVJr1dHmqijHR0DZu7G6vZSK1SwWixYbPasDhd
      qMQags2JrJajUJMj6NXorR7MWilWk4BEoUWrUmKxmpErNUjrZXQmG4KhDcXUDcgl4tVuzg5h
      o9i90n151OlFp7XgNbWuBF+rLDsNJuQqAzqFgSG3l0hibaMT8x02xrqiBD80vrnu1dcqwblC
      HL3BxSO7jmJUq7FrhbYqwQqVkVhymR5nP5Y2FcE/N0owQC6Xw2Bogxm6Q4c7ZEd5gm9KZyt0
      h21kW7tDX1pcx2fVsRpJYTVpSKWySFRanEY1uYoESS0HMjW5YoWD+ze8oS8982P2PvAgq1Mh
      NJomskaBiqEHWSmJw6ThtQ9n+cYTj2FQfzozvp//8AUEUxep1PKmui9/HIXcOn954m26dLK2
      eoLfnji2KaX6Sh7/3Re+w9+98beYnPuJhU5ukxIMz771n/Du+h4HbW3YDLcTleC56UXG9oxS
      KhVZW1piLZpEIpVAo3K1+3MqW0AhqbO4tHT1OGfPEAsXTxFdmkDo2UM0tEJ0aZGyTE40UeKb
      jx1hcTGyXWnflkQhzcL66qa7L38cz557i0q1gFZrwXmHI1KvZbNK9ZU8AO4auh9FI7t9SjCw
      r3u0bbF2pBJsFDRcmlrGoFUikSpw+bxYjEb0Bj0WsxFkKuw2MxJEZDIV9WYDk3Fj9Gp/Vxdq
      u49ceInekT0YjAKNYhGX20kwFGdgqBel7NPRAfRKJRqNiRGHZ1Pdlz+O3d27sGr1aGUiUqWR
      rnYorcBafHVTSvWVPACyhTh6vYtGNb09SvBl1BoTBoXszgP9vCrBHTp82uwoT/BmFd6OItzh
      TtnGIjjF5HKUciqExuzCZdYSiuepV4s4zAKoBXKxMDKlgnKljs6gJ7ASol7JMrRrP7VCCrnO
      QK1UZ2RkgPjieT4MgVVZxeOwUBJlrCzMM9jXTUOuZf78B3SN38NIXxu2115GbJT441d+zL97
      9Lc4MXucS7EYNiUka1L6jPpNe4LPLJzi7OW5w2/coASP26ybVpZvxkJwkuOhMBoxT76p5HtH
      WiuCr1WC37z0JpFSg4f7+tuuBAPQLPPc2Xd+secEL8wuMbJrGLlKh6SUJ1MqsbyyAtSZnJoh
      l8tRqtcpFEpIpVAqlrDbzFjsLhLrq5cV4kVyuY9UXotOxkokTSSeJp9K4LDbmMHd/fYAACAA
      SURBVJyaJJ/LMrb/Hir5eFvP4ZVzb1Bt1Cg3Yczdh9fiuaqYbsUTPHrN3OEbleCtKMs3o987
      hk7WRKcx49hEUX2tEjzs7KbL5tsWJRgAqXrHzAnetjtA/1Avkxen8Xi9yIByrYzf48bpdmAV
      jEjUOizCxn+QTC4DUUKxWMCmsgIN0vEkHo8fnbRBMJ7HbHYy6nVhVMvRaxSURAUysc7I0DAN
      hY5KMYvDtbkP5O340oGv0B1eYDE8TzwdRK+2YdLKSTfknF+bxWzu2VS886tTmFRazgfnGXT2
      oC1WqUo07HdbsYoHSNXa8/toxN1HpZylSOuNsbyCQLohJ55LcmFtDod9gN988FeZDi9g1Wh5
      aPxelrN32hjrMvUCk/E4e/VtulsrHGiaM9gcrbZbF9Ar8gjGrs6c4A6fbXacEtwpbDt8kmzb
      Eigyd5qTS0U8Vj293V6WVsP43HbOfvAeB7/yHewqOP7mSxh79pJZX0HQqtEY1Kys5LGZFdhd
      Vn760js8+o2vYze2QS3cAtd6gl/68BkiDQN9BjmL6TyCrLppD+/NPMHDZj2L6TxmRaMtyvKV
      btOHvB6en7zIv3/sey0dd60nOJFa4ccXzmORV9AZvCzNv9Y2JfjVD36AquurpOb+6RdbCdZq
      1FTqEvYMO3nyJ++xp0fguWPnGb5maqTa7CQfXiAXD1BQukjEI5AOspZtEI/E+PI3vs7a0tx2
      pXhbrvUEd7nH6dLKGfL04rf5tuThvZknePxyvHYpy1fi6cQSXzr89ZaPu9YT/ML5dymWsww6
      ewgkQm1Vgvd1bSjAv/BKMIDdYWNhMcy9h8aZXUlweHcfoWiKpgRsJiOIMDTUT1WiQ1FNYvcN
      oDEYUEpq2JwuYuEg3X1DqNu0/2SzXOsJ1khFqjIdgfVF9DoLcrG6aQ/vzTzBM6F59DoLIw53
      W5Tld2dOotdZUKoExp3ulu2m13qC7x2+G5NGS7VaZMA72nYlWKkSMKrkHSW4Q4dPmx2lBLdC
      p0ju0E62bW2Ri4WZCURQysBscxJbjyAq1JhUUBGVKMQSDZketaRKsSlHLamSr0kRlIBaoMe3
      MRnm73/0Qw7tGkXm6CKbSJBNhOgfHCWZydPMx0g1NHzunjvrqPxx3Ey57TPqWMwUNopgpYWv
      7T3acrxocpWnLp3lv3nga9Qqaf6ft1/mHp+XxUyBAx4XL05N8D986dfakvvE6rlNxbuZElzN
      reDxHWFu+rk2e4If48SH//kXuzt0Lh7AoFOj1QtMLYUpJ4PMB5MkMgWKmSTZy77gYqnEysoK
      mUKZYi52VSW+wtCAn9NnJ5hbCtAlNEiLRhbnpmkU82icPdh0ClotfTbLzZTbQXcvPquXAUc3
      gWSrI3k2cFi6cOs3nnr85Nxb1Oslhi7H0zXLfPHgE23LfbPxbqYEHxp5ELGaar8n+LPSHVqp
      NaDT6ZCIDZRKJVa7E5fVhEEQCAWWsLm7kdFArTNCtUgqX2Ow149SY6CQzyIIAlKFBrfThtfj
      JJgsM+A1YxDMVJsSTDolTZkau9nY7lMA4PTiWZRyLelyHs9lD284toJea0YmVul29OMSTJuO
      G80muX/0Xux6gfnwAnqtGaVKYNThaluPpGipuql413qCzy5fxGSwQy2HUfDi0Grb7Ak2EU/M
      fza7Q1/hRl/weiiAxuhA0KnanU6HDh/LzlKCxSZNUUqnxu3wSbFtRXA2GmJ6NYxCCsV0DtFk
      pFYs0+dz09Xdg0QCLzz1Xzn8wIPMzSfQKOrIG1mwDtHMxdCrpJyZX+OJxx7jU7L/8vqF16lL
      9Xx+1928cuYl1ktNBs0Cc6ksmnoCpXmUb+451HK8a5Xgn5x+kXxDgUOnZLmNc4KvKMHf3LWP
      H5w5wX/70DdbOu6T6g796gc/QOW9n/nlS/Q4/Dw8sv+O4gE7UwnOxlYx6NToBSNL8TJ7ey1M
      zCwxvxpGcnlh6u0fZursSZYmpujZM0xoJURwaYmGQkKqAI8dGWYxkt2uFG9LIp8mkVglW99o
      kkWzQd/lzsm7++9BS3FT8a5VggedPYQSIYYvK7ft8gRfUYKfO/c25U00DPukukPv6xoFmYFB
      m42VRPCO4wF3pARv2xIoG12jIlEik8tZC65Tq1UwWaxoJCIVJPR2+QlHwghKiGRrZBIxfD43
      uWKNTCqJw+Eglc4wPDqKUvbptEQJxVeYjsex6w3oZCJrhSpOtZRMXYFOUqYq07Pft7k97ZPB
      eUSxiUyskq7LyWYCGIx+NGKBgqjmvv7xO8r5lXOvYjD6uad3hMngPGPegZaOu7B0lnRDzqjD
      y3oyQE1uQFJNIdc4cKtl5Ot1FjM5Hhq4s/wK2SBxjCytnqHbM06vpfXGYh+PyFuX3sJmHWSX
      u7Ut8e9Mvo3RuE1FcEcJ7vDzwiekBIs0m+KdKbidArnDNrCNSnCEcK5AJZdFUitQULmQ18vU
      yilUGjMuh5FwNI3HYeS9Uxe4Z/8uouki+3ZveGJfeubHHDx6lIXFJGpFHXkjh8QyQCMXR6+S
      cm4xxFceeYRPap/cFU+wU73RwGqP03ZHyu2VbtO/snv/lub63o6ZwBnORov88oHWlOprleBj
      E8cIFWvbogRf4YV3/wbP6K9xl1Vz58F2phK8ikprptoUia7HyK4H8Y/sQipXYZSUCGVKBJdX
      WAhH6fa6KJeKlz3DG3j6hpg5f5rlqWm6x4cIr4YJLq/QVEhIFeFLhwZZin5yBfIVT7Dk8pzg
      O1Vur3Sb3upc39sx7B9FLWl9dXutEjzg7AHEbVGCr7DHP9K2WDtWCVZotGQzWRxuN2aLlVgw
      gN3lxGQw0BBFlHIFXo+DVK6MSadBqlDTbNQxCgIgocfnxeT2sr4aYGjXOHqDjmqhhMNhI5Is
      MtDtQfYJ9Qw9MX8KlUqgy2RCq7W0Tbn93NjRLc31bQ0pNkNrSvW1SnAiF8didCHWstuiBF9B
      rTa2bTv0jlKC0+l0u0N26LAt7CwluEOHT5htKyELyTB//ud/ycDdD6OrpvF29/Dq26e5e8yD
      ytHPwuRZvvPt72zX298RgegiP3jvBUb9wyQzaX71oV/izTM/YS1fwa1TYjJ1IammWu6+fHHp
      LG8uzjFkNVMo1/nS4Ud55/SGx1hoRKlruxk3azbl4b2RD6bf42I0xtGePp6+cIpv797D6WiR
      Xzu09TnB8ka2bZ7g05eeJyAfRpGfoyrXI6tmQe3kiT2HtxTvOnaiEqyzuDm8ZxejPgMSSw+X
      pifw2c3IlFrOn25fMbUd+C1WxnoOoVGoOORykGqAVKFj0GQmcrk79Ga6L7ttPfRrwWjuJpkO
      kW9+5DHuvzx3eLMe3hsZ9w7gs3oxy6o8fNcTjHSPo2YTRfBNlOB2eoIPdI/SoMmQe4hmo8qw
      Z4RGs03tc3aqJxhE3H0jrE6cYs/hB6mUstRKBXz9w3hcdhz29nUabiflYgq9qQuboslyGVT1
      AlaNipyoZL+nG43GhKRRarn7cjq3Tg4tTo0ctcEN5Qzqyx5jg7SGXG1BrtRvysN7Ix/MfohK
      JaBVCgx7fJdv7VLsLW7Xvtmc4Ea10F5PsFxLNhukyzlAMhOm1zWA5XJH6juiHZ7gYnFz+1o6
      dPhFYMfOCe7Q4ZPguopmbeI4T30YwqtrYLc7sBtVZCVGFMUwGucQY/0+zp18h3BOQpfbglEl
      w9w9jO4mddG13Zy93g3fZyg4A7g5dHiU0NQZpvIqDBQR9FpqpTL+/n5Wl1fpHR5D08xxdnIR
      h82CYDSxHomRLxVQyqCYziMaBQa9boLhKEZBi0pnxm1v5zP06z28P73BE2yWNzbdzflmnuAx
      qxHB6CcSvtBWJfj5Uz/ZVH43U4JdGhnRCiSCx9uuBO8UfqYIVlfTTK+liEVjnJ9ZxiCv8MYb
      73Dx4iV++txzXFhco5SNMXnpEnOTFyneQny70s05FAyyFrxx66sco7LOWixHJjhLXfCzNjtF
      UyHZGKm0vIDCYmHqxAlS6RTT05NXPcbL8Qq7e8w8+eLbyKkyuRhs+4cfrvfw3ugJ3ko355t5
      guOFDIvRQNuV4M3mdzMleMDZA2JzW5TgncJ1S6BsdI0sOlbnZzAZBahmSTf1KMtRJKYuDowP
      MDkxgUwuRyOtcW56lYHLnd66h8ev3gnK5TLFVIS61kVocRqVAgp1GWaDnEo6j9A9iqqUQGZ2
      sDI/g2DQko7FcXV1s7a6RvfACHppkXgFqqkUyWwarUqLxW5FJpMTDEep1Sr4PU6C4Sg6wcRA
      j39bLtB0eIFmU0QjEwkWq1TyEfSCD4tSJFWTcrh7aEvxxrwDTIcXUNIgWmkiyOpUpTr2eXvb
      kvdcaHpT+V1aOU+6IWfE7mY9FaQm0yOrZUFlwqtRkq/XWc7meOAO5xfsNDrdoTt8pukowR0+
      02xbRVPKJpicXUIslYg0FTz+4MYonB//3Q948OhdXFwu0tPvgYaISqxQkagY7O1idvICNZkW
      o25juEM+nSBfrqE3WpmbOMPY/rtpFtOojBbiwXX2HtpPG7ZT3ZRoYpl/unCGP3zom1eVVrdG
      jmDqollOEMiXW57DeyMvn30ZmdpBMRckL6pQi4VNd5u+FdMrp7asBP/4vScpS3WomwVkGhuh
      5bfbPid4p7BtSnCpWKJZSrC8nrnu34dGhjl18kNK+SzzgXUGe7u4eOkSuWyGuakZotki+WSc
      tbUAgcAa6XwJqVRCMZ/B5eshHpzk0tQauVyKakPctg8/gMPac7VovaK0XpkTPObupcu29boj
      kc8QiK7QkEioN+pb6jZ9K+5ECTbobdg0aqQSKfVGY1vmBO8Uts8THI+wuBZCLtWgFAxoZE38
      /i7C4QjyRp5kQYJaq6RSE1E0ilSlaob7e1hbWwMRapU82TJYTfqrI5RikTX0VjfVbAy1yYYc
      Gb7LLRS3iyse3lgqiFRtw6NTEC03yaYDWCy9HO7ZXBF8hZX1BZazBZxqGem6DLVYQFRa2O9r
      TxEMNSaDQca8PS29+lpP8Gp0garMgFYs0lSa6dKp2uYJ3ml0PMEdPtP83HWH7tChnWxbRROa
      OslMWslIj5NwOIzBaCSfLeD12FlZDmC0WVFIIJXOUChU8XS76fV3I5XAK88/xe6jR5k7fg5z
      /zByiYhZKyVdbDAy2EdgaZ5EoYbdvLHxqVLMkc4XUWkMRFZm8Q2Mo5XVqaKmkovRN7IPteL2
      28zS2Qg/PPUOux1WAok4JpOZcL7O7933KK+ceZ5Iw4BVVkIw+kkml6hIdXz3wMO3jbsWW+JH
      x19ixDcM9QZfOPAI6+sz/OOZdxl1OMjUpNzrd2/Kw3sjC+GNeLtcbopNJVpKLecH1yvBF5dP
      8cr8IjZpbts8wTuFbeyxoGBsdw/nz07TyK1z+tIKJnWZUzPrmBVNFsMJ9Boljdw6wViS+ZUw
      V9yNju4BFifOUKsUuTi7wuhgL1OTk+TyeVaX5lkMxpCU8iwFQwSDa8TTOaRIaVQKWBxu8qk4
      k5NT5HI58qV6Sx9+AJPgostkoirKudfnQqLr5ZDFQKwOPtcofo2c9cvKrVQipd5szYPqM1sY
      6TrAfk83yXSYfBNcWjmHRx5Cd1mB3ayH90auxJNf9ixvJj+4XgmW18o8fvir2+oJ3ilsqyd4
      eTlEb5+PuijBZnPgtFuQik0WlgIMjA4jKGUUayI2h4cet5l4OofZuPFbvc/nR1Rp6fI4iUQT
      eF12mhI5AwMDKGRSDAYDBp2Kch3cTgeCYESv19OslVEZLDitRmRKDVazEUFoZYvsR3j0Bmay
      NcatOpJ1Oc1KFrW0SU2mZdzhQaMx4TEICDobHuPtGzuVS2n0xi6a1QxKgwvKWeRI8Tv7oLrh
      xe0y29mMh/dGUrk0fmcfakkNrdaC22BoOT+43hNcRsGwzUE4sbKtnuCdwCeuBJcLWWKZEn6P
      s91v26HDpvnUlODOqKMOO4Ftq2jWJo4zlVKyd9hPcC2Iw2EnHA5jsruwKOHExQkGh8Yw6dTY
      7Bu31Z2iEr8/8Tqnoznu7fLxwcoyf/jwt68qwVZZibq2GzE733p36GaV//35/8JXd93Fu5fj
      3agEH3BZNqXc3siVucNWSXbz+XG9Evza+deJlOpt9QTvVLa1CN69t5cn//E5ZHKRcCRGNrzI
      udk1kuE1FEY7+XiEUDxx9YidohIbjV183msGoQe3ApKNj5Tgkcse3s10h37t3CuUGzUs1o/i
      3agEb1a5vZErc4e3kh9crwSPunvotndty5zgnca2eoIXl4Lcd99B0uk8gmBAplDS6/eQyhVx
      O63Y9TIKCgfVXAyj0QhSOV0+NzrBgttmJJrI4LKakKl0DA0NIAUEQUCjktGUqXE5bAhGIwa9
      gUoxi9nVh0UvRStYMAkCgmC4bY43o1rJslaW4FVDVa6nXsmyGFlEpRIwyBvI1RYUzRIanb2l
      OcF97iHcggUVVSqX4w06fEiVenpNFvQ6Kz6zjc14eD8OmVjZdH5wvSf49NJ5TAYHYm175gTv
      JLalBrjyFKhDh53Otizo6vU6lUIWVALNcha5VkBxk8VWNpu9+SPKZo1csYFBr6ZZK5GrgLRZ
      Q5SA0JLrf4NaKU9drkVzsze/BYVikrOhIAf83czE4uzz9ZHNxwmXagzb3cRySWqVHNFKs2UD
      SyyXxG6wXP0zk4sRKdWxKkXyogotJYpo6DFvrV/+lXjDDvfPvFdL+aWDpGpShuzuq/nWq3lQ
      mcll1+mxeyiLSgTlL1YNsG1nk1idZiYlQVHKgc2DTQ1KqUgiV0VSL4BCj1gvIWi1lJo1Mut5
      7B4rxVIVjaxCqmbh6KEhapkw/3JsnjG/CUEwsJC9iNvfSzASxebw0O3Vc+y1UzgcOiRGD7XI
      PIkKyORyVLU8aYkBr0WgWi9TLTdw+Lvo9d76EezxhXOoNHZeunAMs8FDHXhv7jTr5QYCRf55
      4gJ+rZRe756WrkW1nOD/e+tZ/t3Dj/MX77zE//rYbxLKZZiNLIMEJEgYdHYzG5mmx/yFLV3v
      K/EEyUZ+3xgZ4/m5GX7//tYa+J5YngVEhuxuFkOTvL60zAGXg6nENJnIaZSu+/jeFgv0ncy2
      FsE9vS6i4STZTIZ4PM7iwgLNeoOqKEVsVECsEInECYWDaAU78dUJgrEscpUSg+6j8Zn7xge4
      MLVINpegKdVSiQeIZSvkMwlWghvH5pJBUskk8Xgck8OBYHZRSCXo6evm/MkPKdaaZOMZbLf5
      8AP4bD2YxTShmhpFNU26AaJMhVOr4fTaPJVqgTH/btaTay1diZNLU2ikNd5amEYlboxIkjXL
      eOy9DFgdrBfyVEopBrxbtxteiXf+cn4XQouUyq2PSJJcI5ZPhJYolLPodVYEpYx//cjvIckG
      +OsPXtpyfjuVbWuLUinkCcWSOGwmGs0miUwRl1lLLFMhsDBB/+h+tCoZmWQcrcmEQqoCGuRS
      cYxOL8VkmKrUhMeqotRUUC3mkMlklPJZjHY364ElnP5e1AqRbLYCNMik0xgNGqQqHYgSaqUc
      qVyZ7m4vy4vL2O12tEbhtre9cjnDXDLNoMXEbDKFXKzjMxoJFqqMOr3Ec0ma9SIlNHS3uGSJ
      55LYDBbiuSTRbBIFNdbLTQbNRspSLdlMgLJEy6GuwS1d87ngFOvlJkf7x697L1uLS6D1ZIB0
      Q45Vrbp6bLWSQ1SaEORSlHIJK5nc1SXSLwrb8gWo1WrtDtmhw7aw4zzByWQSi0UgnUgj0woY
      NMqWj/3YoroNzAenCRUqjLtcREsNrMomRVFDzxaHvCXSIWZTWYYtJjINOcpGnmiluemhex/H
      ejJAWaqj29TaHQBEEvkMVr0JxAaJQoHV9VkaChMGWZNeh4+SqMTYKYJbIxVeZS5WoNuqY3Ju
      BZOgIZPOIlXrcZrU5CogVrIIZgfB9RgPP7Ax2ubMB2/iHdtFfHYV0WjDZNSjk9aI5yocOrif
      ybOnSBTq2MwCEglUS3lSmTwKrYFiMozZ1YNO3qCCiko2yu5D96NT3blxcsA7xJkTr7AamaTb
      s5vJ+BxliY6eux/ZUrwP5s9itfYTTK1zPLCMWd6g37/vjvO8wvuLUwB0H2wtv/m1Cd4JrPHb
      93yZSyvvcTGm5tu7+3hhZpG1hZ+idN/Pbx35XNvy2ylsWxG8Ho7i9XkIr4cJB9bIVuqYLCb0
      WiXzc3PU6w0ayChmEwQCa1c1UIu3j3x4mUqtxNxKGJ/Hydz8HM16nZXFOaLZMgaFhFgmQywe
      o1xrYjaZ0atlGExWGtUCc3Nz1Bt1kKnb8uEHiIbO4PEdQqMxk8iEUKmMGDb5ePVa+j0jFLIR
      UBmwa7WMd+8lkthco61b0We1EdtEv9cB3y6Ey78Od/XsQgm8PXWGh3cd4vce+33IrvCf3n2h
      bfntFLZtCSQ2a6yuRbEYVMTTRYwWE0qpBFEC1CtkyiKCVolYq5DMVZFKRbq7/OTyOfRqJcl0
      DrlSRSZXwC6oiWbKdPtcZLNZJIBE0mA9WcRuNiCVSEAC5XyWukyLWlKlLCrRKmUIxvYsiXL5
      JAqthWIuQrwKRlmNgqimz7q17cGZXJRwqY5dCam6HIO0QgntlpdUNxKKL9OQm/CbWleWY9kk
      AHbBQCxbAurYBQvZYhaVXMpyOsuww9OW/HYKHSW4w2eabVOCb0Yul8NguPX+nFQqhdlsIJPI
      INMK6DWKlt+33UVwsZRiMZ1jl7uLTC5GtNLEJK+TqkkxKzaK4G5zq0XmBsl8GovedI1y6yJZ
      yNKo5bcU7+OIp0OU0OA3tbYX6DolWGyQLBYpFuM05EYqpWRHCd4s6UiA+XiRLouW6YXA/9/e
      mf64kef3+aliFW8Wryb77lardWs01869410fwBoJYicLBI7zwghgIEAQI/9E/oa8DGAgrxxM
      bNhw7M06C+/O7Myudi7NSDOjo7vVB5tsXlWsmyxelRckWy2NNCK7W7Anw+eNRiL7R7KH16+e
      +ny+JJUwhdIB58+cxbQsookEjuUgSwJux+f7r78CwGcfvsf8xSs0Ngv0lSzJZJyo2Ea12rzy
      8gvc/vxTNKdLJq0gitB2HXTTRo7GcbUyqdlVolKPthDCM2o89723iB5zH7DXUNkt73BxfoV3
      Nz9HRsATRCR8um17cJTlld8be72qtsc7tz7hz37440NzK3UafFAsotCceL1voqTXuHFQ5D+8
      +S/Huv5RE/zl3nW+VENERQvw2dv7zdQET0qlXGNhcZ5ytUJ5v4jl9VheWMK2LeZTQTaKDVJB
      UFt95MCDGpX0/Bncyi5ep8VmoczifO7QIO9ub1KzPBKygDq0y61On1QyRSwUIJ7K0mu7bG1t
      0et2EaTwsZ/8AGGxRyq9hAxcyi+yZ+iHueVgWCEuTfbry2dWWEwMJqKMzO364hUU6XjrfeN9
      DytkIuGxr3/UBF9dvULwyL9NTfCEtFot/H6HQqlGOh5EM1ooaYWI6NPqgm7aLOaTHKgOqcRg
      UrhpmiwtLWHbNrGwTMOwkYJBTMslq4SoGR4ri7OYpokICEKfqu6STcYPk2WeM9gEh4Q2ni8T
      CQZO9JVop7zBvumQiMVZjsfRuiIJwUPvSaSlHo4fZi0zM9Gaj5rgkbntd91jrfckao0iDuGx
      T6572AQnqFstHLcKwTSZkDw1wZMwNcFTvi08cxP86Mb0mzaqY29iux6a20ViUPvxrOyvadX4
      rFLmB+eu4Tgq9w0bqWuidUSSgS6WH+LNtUtjr+e6Glu6xbWFwUwF1dYRei2MnkTEd7H6Ic7n
      TqcsoKIVcImM/YlSbeyjdUQu5Rco1nZoiTHWszNUTY2GpU5N8KSMTHBbLdKX46yvznF3u0gk
      GBjIqVASvVwgEArieR0S6Rn00jZnz62z0+gzr0jgd6ge1MjO5bFNl0A4xmsvXwO3xl/89ce8
      cGGWtJLEcxrMLa5RKB6QnZ1nfWWGX/zsPWaW8oh9BR+Xq1cmP9Py15s3iCbm8YH//dnPyc2c
      43fPX+adj9/nre+9wf+68RFM8ALYaahsl+5zaWGVcuUuf3f3Ht9fWeF6YYfZWAwfTu0FUG+2
      uHvwFWuZ3x/r+te37+ADl/ILfFLYxAe6To739oq0qp9MTfCkjEywFIkTlwUK5QMKhX2gx8bG
      Nr1ul2A0RiAgk86kCNDHMjTaXpNYIoOua9TrNcLxDEZpg1B6Htc2D9f/3ouXuXHzLqap00Wm
      b5YoaS6uoXF/b59wPIOt19A1lbqqH+sxrM6uE26p1LsgBeO4dpVbm9e5eun73LhzndeuTNbi
      FhF7pDPLyMDy7EVyERl5aIIHqYDTo93UOL/03NjXP3rro//+srSN3TSmJvg4jExwOpVAALqd
      FrrVJpVR6DUt/GCC0QEaQRTAF/D9Pv1OCzGcxNHKhBIpJFGEbpN333ufpXPnmUnNsTynYHUE
      Ok0bSZJoOQbxzDy14ja5xTWiIRHTdAAfo9EgkUog+iLIEZRYaOzH4LoNtnQLsd9iJZ1hz2wy
      H4uRVDJopkZOmeyY/f2De+wbDko8xotLF6iZGmK/RaMrEcHF9SOn9glwc/sGLSE2dnt1Wd0b
      boLDtFo67UCC9WyOmqkRkqSpCZ6EqQme8m3hmZtgyzRJjLkJtiwL3+dIm0Mf03RRlDidpo1H
      iH6nBfjPbOML0Gnb3KqUuTwzw33D4urc8mEmOCsPMryOVcLuB3n9zMWnrjfKGD+/sMj9hnGY
      I65ZGr2OQ8ltE+q7Y6/3JDRHp99xDzPGLSHGyjFM8IG6RzeQQOwaiKEsljXNBE/MyAR3tBI9
      OcbZ5Vk2dkpEQhLRoIgQUtArRQIhGc/rElcUGqpJ1zOYXz1HWOjR7PuE5SiKcg7jYIt3N12W
      UxJKIsSdWzbLa6uUq1XyC2ssxrv87OM7LCRjBPNzaHdu05JCSJLA0vo1VvLjV6T8n1vvEo/m
      ebexS8F0uDq3fJgJToeDCAj8wfNv8Fc3Px3rCTvKGL+78RlpAbS5NbAKO13/rAAAHJRJREFU
      /PlHv+JiKsby3GWuLJ4de73HsV/d4CcbG+Sjg/vn4yMgsPLSeGb5qAnWvTb3yp8MRdgW+4UP
      pyZ4UkYmWArHSEgCxWqZYqmET5etrR263R5yNEpAlEmlkwTEALmZFJncPG23PswKH2BZD3Kt
      V88tcft+CUstIUYz1AvbmF4PQ61SLBZRcovo5T0aqka1WiWfz5Kem6ehmt9wT7+OLwRJ+CYF
      L8AlJfFQJnhtmOH97N5HvHrpzbHWG2WMD1oCggB94MbePfyuy/mlK9T00kTrPfY28ufJReTD
      jPHZ9GSnQx81wa5T5+LyNZaUFLrXmZrgSTlqglNKHBHodj0Mu00ylaDXsvHlBMHA4KZHJtd1
      XcLhgb4fZIUzSB0bW0iRj0FfjuNaDQKBALapk5tfpLC9zfLaOrLfxvT60Oui6xqJaIRQNI4v
      CLRdF1GSCMeSjNPs1/YsvqrVuJBNs9UwCfidw0xwRvZpiVFiAcbO244yxmeUGFuGRZAeVxbP
      Ubc0hJ6H0ZdQ5MDY6z2JuqXR67i0xCjBnkVPSrKUHO906KMmuFjfpScrzAQhFJ0lKvpTEzwJ
      UxM85dvCszsM2vUoVnWWHqlBN83B15Gjm9iu5+B2Jeh5X7vsabSbFr1AjEjw9L7NeS2TO6rG
      +bRyaG4bZoV9x+Pa/DKqbdBtW2Ob1k7b5vODA56bzbGlDzbVI7O8GAth9KTDYqzjngtk2XUO
      ml0u5GZRbYNWU58oY3zUBFe0Ap2AgtBuQCiNbVWmJnhSDjY/Y8uMUty+Q1+K0/YsAoII0TSi
      UyK7dIVwQGB1dQm3tsNff1zhwmwUJZmgaWosrJylUKqQm1tkbSnBP/70N8zOxhBSS3QONqi3
      /GH5lYUuJFnKHim/WlllfWnu2Pf9g3sfcU/VES48z87Q3P5y8xYBQOqZXC/s89rK+tim9e8+
      +zmJWJ67gT6/uneDq3N/fGiWaQtcL+zw1tkrE5nbRyk0Kry3eQfx/EV+WdgngTtRxvioCS42
      qtys3CTcdxHDWSp7H0xN8KTE43HabQ9br1IoaOSzKRYWsuweaIjBJIUvfk0k++DT4cXLa9y8
      u4Np1umLUVq1Paqmh6nV2CsWiSbzmGoRTVWp1WqkZ2dJZuZxGipr62e4cf06bruHUdPJneDJ
      D9DsC7w0k8TuPjC3wtCPjrKzk5hWX5BJ9A2qXZmrmSxq74FZHmWCJzW3jyJKEZYVhdXh/Zs0
      Y3zUBEejaVKhIPFYlrDYn5rg49D1HNx2H7VeJxJJkEiEEUUB0+0QkQXu3dvglRcuUah3mM8E
      6QgRmraOJEm4lk4qv0h57z6zy2eJBAflVz499EaD1Kj8CpGOa6JZLc6cWWR7c5t8fpZY6unl
      V99Eq2Vwu66SDHQPze1yIkHJ6XBtYYWaqXGg7o5tWtuexRfVKpdmMmw1TMS+d2iW5yIBGl0J
      1ypOZG4fxbRqFN0Ol2cXqJka/a4zUcb4qAnudmw6gThix8CX0ySD4tQET4Jtj1/JN2XKPyXP
      ZA8gSRKdps3mToFQVOHs6iIwOMwZjQ46P2v1GrmZf14D19qexR1VJSP77DRULs2vU7YfzgTP
      BMHoSYR9F7sf4tzMk/vyu12Xz4v7XM7nuVNXOZdOcrNS4e31q4dmebReXPAmMrcjjjZAa45O
      27MouW3OJGKoHYHzM+OdWzRth34G3PrN+6x97y0+/ov3yM/P8uFnW/z2y2uYJLDUEj/+Nz9+
      ljc/Mf/3q9+wEpNpLrxFffculXjqa5lgJ5vj0/098tEY4HNu5slzeH96812ikQw/vVNkJeTz
      l+U+F7KD06tHZjkj+1h9mbgsTmRuAZpO9bBt+tAEB/ssz13m72++y/ryC2O/AKbt0KeMHImz
      kJ8hExUhOoNmWsylIuzs7LKzs/usbvZEvLi8zu1qCdGrIMWWiT0mExwMJshFIw+Z0yfhI5EL
      tNhzuwgCLOfOEvY01O4DsywEYyRD8sTmFuDD3Qdt0yMTfGloluPRDLVGcey1pu3Qp0ir1QLA
      UGtE0zkqhftk5lZQaweIvo8ciSHQ/2f3FajZMtjUdC5lM7iEaTR2vpYJTks9jK5EGBfXD3Pu
      G95hux2Hm+UDLmYz3FEbXJ7JsK3bCH3v0CznQyKNXoAYzYnM7YhRxvhRs5wUuxg9aeziru98
      O7TjOKe26PR06CnfFh76BPAck82dAnOLq/Q7LrncYIPnOA6O65LPjf+O3W5aeITxO81Ds2ua
      GhBCUWKHt7WwvEoAH0VJ0GmaOB5E4spY5+w8jmfZEA2Dw4X7TpvleOhE5vYBg1Zmek3UtsCF
      3Mkcxoi6XsQlOvamevS4Xlk5x+fbN/CEGHLP/G61Q9d2vuIffvEF0fgtsjFIR2S6UoKPb23y
      /Vev8ovCBoHkKjOJIHJIxlYPqDSa+Mj8+z/5dxztcDNKG/zjPZfVtISiKPiAZRRBWOCNN65S
      27lP/twL3Pn0XTpun3g8hG7oyPEZun4A0X98A/Tbb7zKF8OG6GxGQcSn5Vropks4nsSuFx9q
      iHb1Mi+/+TtE5NMJHP568wbL81cnztw+iVErs+ipnFt56dReAEWtyielff707T8Y6/qjxwVw
      bfEsf/XFF/zrKxe/e+3QS2fO80c//kNom2wVDqiaHnPpBNVaDSGcJOi32N/d4vMv7mC2eoQj
      YebCAUrVGpVajf6Rta5dWOHLzX0MXaderz9yS302bn/F5edeRK9WMG0dp9VDFvpoTveJDdA7
      m3ep2+3B5fqgHMvrQiaVIRoUvtYQHQhGT+3JD3Bp+Tlqjf0Tm9sRI7Mcj2WpNcYbuTQO4Uhy
      omKs0eMC+NXtD/nBc29+99qhPcfEI4QSC1GrVXCdFrF4bHCaciQC+IiCiNDvYLZ84hEJHwHJ
      hx6D89xz+Rwig69AvpzAMTX8rodHiHgIWrqKkF1DEVoIkThBsY+uamimRSaZxHZcQjGFsPT4
      Buh4PHHYEI3foW56ZJLxwf3Cp+U80hAdOlk51qPU9RJGT8Yx909kbo9SMzWEfgu9K32jV5iE
      qraPw/hFW6PHpciDoHZOyVAb5p6n7dATMt0ET/m28MwzwU3bxO1BdtjTX9jZpE2YfEY5zAoP
      ssDHz/mOZhIfd+M8Lkczt6ORRuPOCX7SeplYipqlIfRaE7U5P42yVniqqT7KURNcqu/iiTHk
      Yahm2g59DJqmyu3bd7GdDo4c5V/81qsAaLpLQlB5f6/ElaUUJdXCMRosLWa48aH92Hm/C0vr
      rM+H+Pn7t8ingoTmlrG2NrF8AVEKIDgm7WiGXDJBt+3gdXzml1dZmT89z/Bo5rbXsceeE/xN
      6/2rCxd558ub/PaZsxO1OT+Nj/c2eZqpPspRE/zp/tbwXwWm7dDHRK3WsCwV1XjYbjbqZUgt
      kQtDuVyhVDwgl5vBsvQnzvut7W1SKBaJpxfQa7s01MHluXyO+OwcVt3mzNocn/7mY7xeH02z
      mD3FJz98PXM7yZzgb1pvNNd30jbnpzGOqX7S9YXhX6bt0Mek1WrRazcpHFSJhqMEQiGa9oP2
      53g8jmmaeI5JWwwjC33CYRkI8rh5v/h94tEgptuFfhtd10nGokiR2CDzazkYrsvK8gLb27vk
      8jkSinLqr+6jmduIP9mc4CetN7Kufrc5UZvz0yipu0811Uc5aoJbLYNOIIHYMabt0Mdhmgme
      8m3hmQViJtmYWqZJ7Mg7dqW4h2Z7LM7NHk52f1yW+FkxyvC+snqeqqmSV7KHGd5cSJjYBD8u
      EwwM186g2gYdzzxxO7Rq61S1AlpH5Pvrl1Fti2w8OdbPHs0El+q7dCWFYM+iKQzSat8JE3ya
      1Ha+4rYmsDKbQ68V8MQoYqdJJp+nsrtDKJNjNq1Qr5RQHcjPpnjp+RcICFCsqVxaVPjrv32X
      l39wlfJumY5jMbuyjF4tkZyZRRbDgEFl38KXReYWl7ly4Szv/uNPSc8uIQnBx14+DqMMr2FX
      +G+/+Dv+6x/+6WGGd7OwO7EJflwmWGvs8d+v/5I/uvYCvyzskw1JJ2qHLgzbpv/T2z/inY/f
      547k8lHZ5U9e/+FYP380E9zw2tzd+RDNKPPCube4/sn//O6Y4NND4uz6PDc/+xJbr7Jb1JnP
      BtksWWTjITS3g9BtYetV1IZJrWEfjh9yjQa7ms+19TzlgwMK+0Uy+TyuaSKH4zTtBrquUqvX
      iCh50ukEllocBnCSuKb2tctbzvjlWKMM79/c+Yqg79HqP8jwrh/DBD8uE/zx7l36nSZrh/N5
      T9YOPWqbvjNsr760+hzRCf7vHr1116lxeeUF0sosxdr2d8cEnyaeY7NfVVmaz1I6qBGOJEgl
      gpSK+1z/6Ct+9Ac/IhUU2R9elojJVFST9TODWcGJeALHNGm2XSy3TzISoC9HkMXBwTlLbxBN
      JgkIMoLYB18gkRhsrvHBMh65vNvGF2UIhJ7aED3K8L68vE7N1Kia9cMM72wkMLEJflwm+Oqw
      HXpkXNtt88Tt0DVTIwAklQwBetRMi5wy3unVRzPB+7VtenKSxahMR0qQCk7boSdiaoKnfFt4
      Zib4aZvgx80M/udiiVstg3tag3Pp5OGcYBiY22qjiNYROZ9Wxp7rO1pvPaWwMWyH1q0qRcdj
      MRai0uzRbdVP3A4NoBoHGD0JRewce05wtbFPJ5Cgpm7Rl5PERX9qgidF3bvD3YZwaGejiSxq
      eRdRmWUlCjd29lmcWyKTjLG8PDgq8iwt8cULl1iYGa8helerUS7v0OEM5WEmuDI0t//xzd/j
      L2/8imptY+y5vqP17tZE5oft0L/e+pIAPp86Kmfnr/LW6snaoUd8sPEpVl/mWn722HOCS3qV
      W5Uv+OMXX+UnG9vsb//fqQmeHPkhO1sqFTFqRco1HU2tE1ZmiPoudat1+BPP0hJXDrSx73ks
      AKHkPNkjmeCRub17/0Ounn9zorm+o/XiPGiHHu05w+EUqnFw4nboEdIwY3ySOcHRSJpUOMj7
      d2/w21e+NzXBk9JqtfAcm1JNO7SzC3M5amqDdCaDVtdIphIY1SJS7hy46jO3xHO5FO0uRBMK
      8lOet3vV++zp+nBe7iAT/MIwcysCyUQGtbE/9lzf0XoX51comoN26Ll4nINmh4VokHob0iH5
      xO3QAKp+QKMXICl2jj0nuNtx6IhxIgGfmUQGy7WmJngSpiZ4yreFZ26C+02TQEzhceXNT8zv
      9juYThclEaHfbnJ74z4zc4tEZHFw/a5Hw3QIxhRiz+Ac6FZL5069QVrusdvQee3CKzTtQTt0
      LsihCW6JMVZT42yCB+u9uLR2aJbhYROcjaceuuy43N67hdYROaPEjt0OPTLBgY4xbYc+LiMT
      HHItyC8wE4JQAOqWh9Cx8YMJ/I5LMhal2e+gl23ySzO4jkdE8tA6WX74+iU6RgmSy9y/9yX0
      PCKxGB3LQG0HCMhhIkKHUCpLThKotpu4DQNRjvL9t99g44sb1FWH2EyatCCQv3KF6Bj3fVut
      UT64z7lXf5+Pdv6eoAj/MGyHvtNxWJu/yq/u3wZg9ZUfjb1eLRU9NMuPmuDfO3OGv7lzm//y
      OycrC7u8dIF3Pn6fg6px7HbokQlut8xpO/TxGZjg8kEdQx9kezc2N+h3u3i+CF0PaHNwUGe/
      uE80mae28wWFqokcCpGIxQ5X2tm8y7mLV/HMOnXdwrBdwpJApW4znw2yVzZQa3WMVodUOkU2
      HmZ37z57VZP5hEyxNrh8XDsRD0AotYBkbhFNXUDkQTv0xaEJPpsdv8hqtN4X2w/M8qMm+PP9
      TZqeNekv+WuMTPBJ2qFHJnjaDn0CRiZ4biZNt9+jrrssZGJUjRa7G7c4f/V7xMIBGmqdWCpF
      MBDGp4ep1UjPLuFoJdpiisVsmKYvEwtJmEaDWl1nZiaFY1oEwnGUqES3L1CraqRyaYLi4Kka
      icexTRNZgJ4gUK1opHIpJISnOoXdyia7DZ3nV84RkBPsVbaYG7ZDz0cljJ5MxHfoSSmWU083
      raP1XrvwCpY9MMuPmuCjf54EzdRIKhnqWuHY7dAjEzwXCUzboY/D1ARP+bbwzDPBk1ItFWjY
      bRZm80SSCSROboNPi1Em2OzJpKTeRO3LT1qv13EODezRpueTMs0Ej8cznxO8kolyZ6tAUglj
      6BaBcIy8EsZqC+AZJNI5SpU6P3x7IIFKdY2LCwn+9ifv89LbVyjtlPBbDpmFJaz6JygzC8ii
      P6hEqaj0hAC5uQWuXFzng/d+jjKTRxZDgEW1ODgVOj+/yOXzxw+vw4MM79trF7hX3sFy1Ina
      l5+03nxsUDcT6Zn87cZd/vNv/eGJ7ueIaSZ4PJ75nOBytUJ5v4jl9Uilk8QjQba2tuj2uvQE
      CdfShvODB7hmg70GXD2bozKcLZyaydFyLORInJZtoBsN6mqdUCxFMq3QMmpsbheGl+sY+uDy
      SCJHKhXHc0++uRyZ4G7bZG3+4sTty09ab2Rgb5bu02yd3mCRaSZ4PJ75nOB0PIhmtFDSCvJw
      HjBdD8PzSUSCg2P6dhtB9Fk5YoMd08Trelh2GyUu0xPCBAedTbiWQTCeRBJERkuODDKAbepE
      lSQiEqLoQ79D3xdBCj/1VOhvom5pVBtFrH6QcyllovblJ63X6zjoPYmLufnDjPBpMM0Ej8fU
      BE/5TvPMDoM+jnGam/+p88BPYjSHVxHbwxblsxNlbh/FsKqU3C5pqTuxWR6HilaYqL36qAne
      q27R6ATot+rfrXbo06RxsMdGzWE1G+OrjV1SyTC7+wdcXF/HMExiShLbtJFlcNs+P3jrdeDh
      PPArP7zG/nYRmjaZpWXMWonkzBKy2Ae/Q61cpycGyM8t8dzlc7z3i599Y174JIzm8M5GJZbn
      r3Jn95OJMrePUjQN7hzcR+i1WJ7QLI/DpO3VR03w9Y0bXDzzCs8tnvnutUOfFpWDKotLCxxU
      Djgo7GO2eqwsLWObFovpIHf3NdJBUJt9goEHH0IP5YHLBxQK+6Rm8jStUR5YR9c16vUaoVia
      VDpJS6+wcX/viXnhSfLAT2I0h/fc0ARPmrn92nq9Jou59cNW5knM8jhM2l591ARfW3uJUn3n
      u9cOfZr4/Q57+1UyiRB13SWZSREJ9Gl1oWHYLOVTHKg26UQUBDB0g+WVh/PAXqeFYbVJJmR6
      QoSgNDgw5xgNQokUkigiiBzmgY1ha/TX8sL9Dn5fBDly7E3waA5vLgRGT2Y9m5koc/sod/e/
      otLscSWXndgsj8PN7RsTtVc/NCe4bdGRFCKiP22HPg5TEzzl28IzN8GWaR7me+GbN8KmaaEo
      Y8QWux63N+6Tyc0RCQ77//sdDMMmEI4Tj8hPX2NMNFsnEx+8K59kDu+jOK7GtmHz3PwKNUuD
      XnPsjPG4TGKWH5cJ7jbr2H4Iud+amuBJGZngjlaiJ8c4uzzLxk6JSEgiGhQRQgp6pUggJON5
      XeKpLEZ5l7Wza+w2+swpEvgdquU62dkctuUSCMV45cWr0FTxQjl2tu4h0icajeLaKrYbwA8E
      CQd7hKIZFtIiWxUPWjpCIMyr33+d4ASPoart8c6tT/izH/74xHN4H+UnN99lJnuWg1qHd768
      yUo0MHbGeBwK5bsTmeXHZYJDvsPVtdf52cfvTE3wpIxMsBSOkZAEikOr69Nla2uHbreHHI0S
      EGVS6SQB+tiGRttrEU2kD21vJJ7GONgilJqj6Twwuvs7m6ydu4TvWZTrBg3TJhYUqVYM5ucS
      7B+oaFod1fZIpNLMxyN4Ez6GfGaFxUQcOPkc3keRgnGadp2Ph+3Qk2SMx2FSs/y4TPALZ15i
      v749NcGTctQEp5Q4ItDtehh2m2QqQa9l48uJw6M/4lDn9vt9/K6HEFJw9eqh7aXX5P33f83i
      +jrZ5CxLswnsjkg8ImOaJlq9TiqbxbNNBDlGIhGk1xeoV6vEU1nCskgAaPX7BJjMJ5zWHN5H
      sR2VPbvJldkl6pZGv+uOnTGe5L6Pa5YflwkWuwZCMENCEqYmeBKmJnjKt4VnboIf3fR+8yb4
      UePbxzQdFCVBu2mxcX+PucVVZLGPoih0PRu72SMUTRB5XOj4mIwyvBcySbZ0i2sLq5h2jZLb
      IR8SMXoSUZoTmVbV1omIfbYNh6vzy6h6iXsNk/PpBFb/wcilcTO8T6KuF7H6oYnv31ETDIO8
      stcy6MlJPFedmuBJGZngtlqkL8dZX53j7naRSDBALBSAUBK9XCAQCuJ5HRLJJGrdoNfSWVi7
      QFjo0uxDWI5x5UoCo7RBcvkl7n15nX7HJRaPo1cqCEqeTg+C9EnNpIgAZsvF0k3EcJwfvPXa
      4Vzh33r7jbE2PaMMb0c4y0HpPpcWVvnl3Y8oN3u8trTC9cIOb529MrZprev7/I+PPuBsOk0m
      APXcMtc3b5DNrvPLzS8B6HXsiTK8T2K03oX5tWOb4K3iF/zD1jaL8Qg+sLfz66kJnpSRCZYi
      ceKyQGFodaHHxsY2vW6XYDRGICCTzqQIiAHyM2myswt4bn2YFS5hmg82vpt3v+Li1edx9Qqq
      aWM5LYKiT9X0yAYDlIfziB2vSyqTIh4NUtjZpKw3ScgC434xG2V4Z8Qe6cwyMuCLYeaiEcRQ
      glw0OpFpnUktsZpK8vziGTbUGgEB1hcu4ZhlVmdmKdv2xBneJ3F+uN5JTPCt/fs4TYNRe9fU
      BB+DkQlOpxIIQLfTQrfapDIKvaaFH0wQGp7eLIgC+AKu6xAZziMeZIUzSB0LW8iQj/v4coKQ
      BIauUtNMcukEttNEiiSIyyKIPuWaSTaTRBIFfAESR+YK9xi84sfNBOcSCjXLQYnHWEumKDod
      ZsMCja6EaxUnMq01UyMs9ijYbfyuw1IyxUGzSyrQOzJyafwM75MoqwVaYhRT3zu2CR7lkx1X
      g9DgdOipCZ6AqQme8m3hmZlgv+tRqhkszj+cSTWt4UY38eBduOs5bNzfIze3RDAwzP72PBqm
      SzCaOHb51TinXz+OtmexoTVYTyfZNiwuzy4BA7Mq9j2MnkQqMH4meLTemWT8sB3asGqUm10y
      wf6pZYIHc4eTaI5JJpY8sQleVBRqVoOGNc0ET0z5/k22zSilnXv4Uox22yYgiPjRFAGnTHrh
      IuGAwMrKIk11j1DuLFv3Poe+RzQao20baEfKr4LJDDOSSK3t0tRNRDnKG2++yuZXn6NqDrFM
      hpgIludiDbPHbVsllpolHZWw2gL9ps6lF18jHv7mUyV21Cq/2vgE4fxLfLDxOZdn/y2aXuDP
      P/oVl9JxrL6M7zXGNsGj9bZTM6SG7dAVy+BeeYeAGOA0MsEjU/27Z87wQbHI76ysnNgEv7G0
      yC8LJVq1T6cmeFLi8TjtdhvHqLFfbJDLJJmbz1AoNxCCCYq3PySSefDpsLN5l3OXruBZKnXD
      wrSbhCWBqmozl5HZrxho9TpWq0MylSQTC1EobLNfs5hLyJTqOmq9jnMkexyJpxB7be4NM8i+
      KD/1yT/4rYi8nJuh2pG4nM6g9eDG3j38ros4bF+eyAQP1yu3H7RDB/otFnJrp5YJHpnq9cUr
      KNLpmOAvD3awm8bUBE9Kq9Wi6zk02300TSMcjpOIhxBEAavZJSwJbG1u8tK1C+yrXebSMh0x
      QkQWMU2del0nO5PENQcntyUiAbp9gXpdJ5VNIosiAjwovxKh60NdM8mkFQJDs9zxHJrdAEpI
      OMwgj/OVyPNM7qoa59Ip7usmYr/9kAlu9AKkA72xTfBovTUlzpYxaIeW6VBp9TmfVk4tE3x0
      7vDRP8fhcSZ4OZWmbmmEAv//ZoL/H2ZcVToNKwypAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Pantip Room Perf by Offer DB' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Optimal Impression Cap' width='192'>
      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
      hLlEBxA2tf8BIAGEmrjLd44AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Submitter Device Charact DB' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
