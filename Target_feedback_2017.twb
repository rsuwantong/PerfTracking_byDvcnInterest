<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0520.1152                                -->
<workbook source-build='9.3.2 (9300.16.0520.1152)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' inline='true' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' version='9.3'>
      <connection authentication='no' authentication-type='0' class='hadoophive' connection-type='Impala' dbname='' odbc-connect-string-extras='' one-time-sql='' port='21050' schema='meas_ana' server='impala.prd.sg1.tapad.com' sslcert='' sslmode='' username=''>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[meas_table_dvc_pro].[tapad_id]' />
                <expression op='[impb4click_byoffer].[tapad_id]' />
              </expression>
              <expression op='='>
                <expression op='[meas_table_dvc_pro].[offer]' />
                <expression op='[impb4click_byoffer].[offer]' />
              </expression>
            </expression>
          </clause>
          <relation name='meas_table_dvc_pro' table='[meas_ana].[meas_table_dvc_prop_2017]' type='table' />
          <relation name='impb4click_byoffer' table='[meas_ana].[impb4click_byoffer_tpid_2017]' type='table' />
        </relation>
        <cols>
          <map key='[brand]' value='[meas_table_dvc_pro].[brand]' />
          <map key='[carrier]' value='[meas_table_dvc_pro].[carrier]' />
          <map key='[clicks]' value='[meas_table_dvc_pro].[clicks]' />
          <map key='[cluster]' value='[meas_table_dvc_pro].[cluster]' />
          <map key='[dvc_commercname]' value='[meas_table_dvc_pro].[dvc_commercname]' />
          <map key='[dvc_techname]' value='[meas_table_dvc_pro].[dvc_techname]' />
          <map key='[ful_channel]' value='[meas_table_dvc_pro].[ful_channel]' />
          <map key='[hl_platform]' value='[meas_table_dvc_pro].[hl_platform]' />
          <map key='[impb4click]' value='[impb4click_byoffer].[impb4click]' />
          <map key='[impclick_daydif]' value='[impb4click_byoffer].[impclick_daydif]' />
          <map key='[imps]' value='[meas_table_dvc_pro].[imps]' />
          <map key='[landings]' value='[meas_table_dvc_pro].[landings]' />
          <map key='[offer (impb4click_byoffer)]' value='[impb4click_byoffer].[offer]' />
          <map key='[offer]' value='[meas_table_dvc_pro].[offer]' />
          <map key='[pt_cat]' value='[meas_table_dvc_pro].[pt_cat]' />
          <map key='[release_month]' value='[meas_table_dvc_pro].[release_month]' />
          <map key='[release_price]' value='[meas_table_dvc_pro].[release_price]' />
          <map key='[release_year]' value='[meas_table_dvc_pro].[release_year]' />
          <map key='[room_id]' value='[meas_table_dvc_pro].[room_id]' />
          <map key='[room_name]' value='[meas_table_dvc_pro].[room_name]' />
          <map key='[screensize]' value='[meas_table_dvc_pro].[screensize]' />
          <map key='[selects]' value='[meas_table_dvc_pro].[selects]' />
          <map key='[sighted_date]' value='[meas_table_dvc_pro].[sighted_date]' />
          <map key='[source (impb4click_byoffer)]' value='[impb4click_byoffer].[source]' />
          <map key='[source]' value='[meas_table_dvc_pro].[source]' />
          <map key='[submits]' value='[meas_table_dvc_pro].[submits]' />
          <map key='[tapad_id (impb4click_byoffer)]' value='[impb4click_byoffer].[tapad_id]' />
          <map key='[tapad_id]' value='[meas_table_dvc_pro].[tapad_id]' />
        </cols>
        <connection-customization class='hadoophive' enabled='false' version='9.3'>
          <vendor name='hadoophive' />
          <driver name='hadoophive' />
          <customizations>
            <customization name='CAP_CONNECT_STORED_PROCEDURE' value='no' />
            <customization name='CAP_CREATE_TEMP_TABLES' value='no' />
            <customization name='CAP_DEFERS_CONNECTION_VERIFICATION' value='no' />
            <customization name='CAP_FAST_METADATA' value='no' />
            <customization name='CAP_HIVE_FIX_METADATA_NAMES' value='no' />
            <customization name='CAP_INDEX_TEMP_TABLES' value='no' />
            <customization name='CAP_INSERT_TEMP_EXEC_STORED_PROCEDURE' value='no' />
            <customization name='CAP_ODBC_ALWAYS_THROW_CONNECT_ERRORS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_DATETIME_AS_CHAR' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_DATE_AS_CHAR' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_MAX_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_MEDIUM_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_SIGNED' value='yes' />
            <customization name='CAP_ODBC_BIND_FORCE_SMALL_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_INT64' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_PREFERRED_TYPES' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_WIDE_CHAR' value='no' />
            <customization name='CAP_ODBC_CURSOR_DYNAMIC' value='no' />
            <customization name='CAP_ODBC_CURSOR_FORWARD_ONLY' value='yes' />
            <customization name='CAP_ODBC_CURSOR_KEYSET_DRIVEN' value='no' />
            <customization name='CAP_ODBC_CURSOR_STATIC' value='no' />
            <customization name='CAP_ODBC_DRIVER_HIVE_ASSUME_LATEST' value='no' />
            <customization name='CAP_ODBC_ERROR_IGNORE_FALSE_ALARM' value='no' />
            <customization name='CAP_ODBC_FETCH_BUFFERS_RESIZABLE' value='yes' />
            <customization name='CAP_ODBC_FETCH_BUFFERS_SIZE_MASSIVE' value='no' />
            <customization name='CAP_ODBC_FETCH_CONTINUE_ON_ERROR' value='no' />
            <customization name='CAP_ODBC_FORCE_SINGLE_ROW_BINDING' value='no' />
            <customization name='CAP_ODBC_METADATA_STRING_LENGTH_UNKNOWN' value='yes' />
            <customization name='CAP_ODBC_REBIND_SKIP_UNBIND' value='no' />
            <customization name='CAP_ODBC_TRIM_VARCHAR_PADDING' value='no' />
            <customization name='CAP_ODBC_UNBIND_AUTO' value='no' />
            <customization name='CAP_ODBC_UNBIND_BATCH' value='no' />
            <customization name='CAP_ODBC_UNBIND_EACH' value='yes' />
            <customization name='CAP_ODBC_USE_NATIVE_PROTOCOL' value='no' />
            <customization name='CAP_QUERY_ALWAYS_USE_AQ_CACHE' value='no' />
            <customization name='CAP_QUERY_BLENDING_ALWAYS_USE_LOCAL_MAPPING_TABLES' value='no' />
            <customization name='CAP_QUERY_BLENDING_PREFER_LOCAL_MAPPING_TABLES' value='yes' />
            <customization name='CAP_QUERY_BLENDING_REMOTE_MAPPING_TABLES' value='yes' />
            <customization name='CAP_QUERY_BOOLEXPR_TO_INTEXPR' value='no' />
            <customization name='CAP_QUERY_BOOL_IDENTIFIER_TO_LOGICAL' value='yes' />
            <customization name='CAP_QUERY_EMPTY_DOMAIN_TOP' value='no' />
            <customization name='CAP_QUERY_FORCE_AGGREGATE_MEASURES' value='no' />
            <customization name='CAP_QUERY_GROUP_BY_ALIAS' value='no' />
            <customization name='CAP_QUERY_GROUP_BY_DEGREE' value='yes' />
            <customization name='CAP_QUERY_HAVING_REQUIRES_GROUP_BY' value='no' />
            <customization name='CAP_QUERY_HAVING_UNSUPPORTED' value='no' />
            <customization name='CAP_QUERY_JOIN_ACROSS_SCHEMAS' value='yes' />
            <customization name='CAP_QUERY_JOIN_ASSUME_CONSTRAINED' value='no' />
            <customization name='CAP_QUERY_JOIN_PUSH_DOWN_CONDITION_EXPRESSIONS' value='no' />
            <customization name='CAP_QUERY_JOIN_REQUIRES_SCOPE' value='no' />
            <customization name='CAP_QUERY_JOIN_REQUIRES_SUBQUERY' value='no' />
            <customization name='CAP_QUERY_NULL_REQUIRES_CAST' value='no' />
            <customization name='CAP_QUERY_RECOMPILE_FAILED_QUERY' value='no' />
            <customization name='CAP_QUERY_SELECT_ALIASES_SORTED' value='no' />
            <customization name='CAP_QUERY_SORT_BY' value='yes' />
            <customization name='CAP_QUERY_SORT_BY_DEGREE' value='no' />
            <customization name='CAP_QUERY_SUBQUERIES' value='yes' />
            <customization name='CAP_QUERY_SUBQUERIES_WITH_TOP' value='yes' />
            <customization name='CAP_QUERY_SUBQUERY_DATASOURCE_CONTEXT' value='yes' />
            <customization name='CAP_QUERY_SUBQUERY_QUERY_CONTEXT' value='yes' />
            <customization name='CAP_QUERY_SUPPORTS_LODJOINS' value='yes' />
            <customization name='CAP_QUERY_SUPPRESS_CHECK_DOMAIN_LITERALS_THRESHOLD' value='no' />
            <customization name='CAP_QUERY_SUPPRESS_NULL_CHECK_QUERIES' value='no' />
            <customization name='CAP_QUERY_TOPSTYLE_LIMIT' value='no' />
            <customization name='CAP_QUERY_TOPSTYLE_ROWNUM' value='no' />
            <customization name='CAP_QUERY_TOPSTYLE_TOP' value='no' />
            <customization name='CAP_QUERY_TOP_0_METADATA' value='yes' />
            <customization name='CAP_QUERY_TOP_N' value='yes' />
            <customization name='CAP_QUERY_USE_DOMAIN_RANGES_OPTIMIZATION' value='no' />
            <customization name='CAP_QUERY_USE_QUERY_FUSION' value='yes' />
            <customization name='CAP_QUERY_WHERE_FALSE_METADATA' value='no' />
            <customization name='CAP_SELECT_INTO' value='no' />
            <customization name='CAP_SELECT_TOP_INTO' value='no' />
            <customization name='CAP_STORED_PROCEDURE_PREFER_TEMP_TABLE' value='no' />
            <customization name='CAP_STORED_PROCEDURE_REPAIR_TEMP_TABLE_STRINGS' value='no' />
            <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_BUFFER' value='no' />
            <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_NEW_PROTOCOL' value='no' />
            <customization name='CAP_SUPPRESS_CONNECTION_POOLING' value='yes' />
            <customization name='CAP_SUPPRESS_DISCOVERY_QUERIES' value='no' />
            <customization name='CAP_SUPPRESS_GET_SERVER_TIME' value='yes' />
            <customization name='CAP_SUPPRESS_QUICK_FILTER_ACCELERATION_VIEWS' value='no' />
          </customizations>
        </connection-customization>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>sighted_date</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sighted_date]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>sighted_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tapad_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tapad_id]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>tapad_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[carrier]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>carrier</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>offer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[offer]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>offer</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[room_id]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>room_id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[room_name]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>room_name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pt_cat</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pt_cat]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>pt_cat</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ful_channel</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ful_channel]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>ful_channel</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>imps</remote-name>
            <remote-type>20</remote-type>
            <local-name>[imps]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>imps</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>clicks</remote-name>
            <remote-type>20</remote-type>
            <local-name>[clicks]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>clicks</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>landings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[landings]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>landings</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>selects</remote-name>
            <remote-type>20</remote-type>
            <local-name>[selects]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>selects</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>submits</remote-name>
            <remote-type>20</remote-type>
            <local-name>[submits]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>submits</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hl_platform</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hl_platform]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>hl_platform</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dvc_techname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dvc_techname]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>dvc_techname</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dvc_commercname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dvc_commercname]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>dvc_commercname</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>brand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[brand]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>brand</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>release_price</remote-name>
            <remote-type>129</remote-type>
            <local-name>[release_price]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>release_price</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>release_year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[release_year]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>release_year</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>release_month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[release_month]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>release_month</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>screensize</remote-name>
            <remote-type>129</remote-type>
            <local-name>[screensize]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>screensize</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cluster</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cluster]</local-name>
            <parent-name>[meas_table_dvc_pro]</parent-name>
            <remote-alias>cluster</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source (impb4click_byoffer)]</local-name>
            <parent-name>[impb4click_byoffer]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>offer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[offer (impb4click_byoffer)]</local-name>
            <parent-name>[impb4click_byoffer]</parent-name>
            <remote-alias>offer</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tapad_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tapad_id (impb4click_byoffer)]</local-name>
            <parent-name>[impb4click_byoffer]</parent-name>
            <remote-alias>tapad_id</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>impb4click</remote-name>
            <remote-type>20</remote-type>
            <local-name>[impb4click]</local-name>
            <parent-name>[impb4click_byoffer]</parent-name>
            <remote-alias>impb4click</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>impclick_daydif</remote-name>
            <remote-type>3</remote-type>
            <local-name>[impclick_daydif]</local-name>
            <parent-name>[impb4click_byoffer]</parent-name>
            <remote-alias>impclick_daydif</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_LONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CPM' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[CPSubmit (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [pt_cat]=&apos;cat1&apos; then 250/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat3&apos; then 200/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat6&apos; then 120/35&#13;&#10;ELSE 3&#13;&#10;END' />
      </column>
      <column caption='Ranking' datatype='integer' default-format='n#,##0.00;-#,##0.00' name='[CPSubmit (copy)]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='index()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Landing Rate' datatype='real' default-format='p0.00%' name='[Calculation_407294330779045888]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([landings])/sum([clicks])' />
      </column>
      <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
      </column>
      <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([submits])/sum([landings])' />
      </column>
      <column caption='CPSubmit' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_417990356997468162]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([imps])/1000)/sum([submits])*MAX([CPSubmit (copy 2)])' />
      </column>
      <column caption='Rank' datatype='integer' name='[Calculation_544935571523895296]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='index()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([tapad_id])' />
      </column>
      <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
      </column>
      <column datatype='integer' name='[Impb4Click (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[impb4click]' />
      </column>
      <column datatype='integer' name='[Impb4Click (group)]' role='dimension' type='ordinal'>
        <calculation class='categorical-bin' column='[impb4click]'>
          <bin value='16'>
            <value>16</value>
            <value>17</value>
            <value>18</value>
            <value>19</value>
            <value>20</value>
            <value>21</value>
            <value>22</value>
            <value>23</value>
            <value>24</value>
            <value>25</value>
            <value>26</value>
            <value>27</value>
            <value>28</value>
            <value>29</value>
            <value>30</value>
            <value>32</value>
            <value>34</value>
            <value>35</value>
            <value>36</value>
            <value>37</value>
            <value>38</value>
            <value>39</value>
            <value>40</value>
            <value>41</value>
            <value>43</value>
            <value>46</value>
            <value>47</value>
            <value>49</value>
            <value>50</value>
            <value>52</value>
            <value>53</value>
            <value>54</value>
            <value>61</value>
            <value>64</value>
            <value>65</value>
            <value>67</value>
            <value>68</value>
            <value>80</value>
            <value>83</value>
            <value>223</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='16' value='&gt; 15' />
        </aliases>
      </column>
      <column datatype='integer' name='[Impclick Daydif (group)]' role='dimension' type='ordinal'>
        <calculation class='categorical-bin' column='[impclick_daydif]'>
          <bin value='11'>
            <value>11</value>
            <value>12</value>
            <value>13</value>
            <value>14</value>
            <value>15</value>
            <value>16</value>
            <value>17</value>
            <value>18</value>
            <value>19</value>
            <value>20</value>
            <value>21</value>
            <value>22</value>
            <value>23</value>
            <value>24</value>
            <value>25</value>
            <value>26</value>
            <value>27</value>
            <value>28</value>
            <value>29</value>
            <value>30</value>
            <value>31</value>
            <value>32</value>
            <value>33</value>
            <value>34</value>
            <value>35</value>
            <value>36</value>
            <value>37</value>
            <value>38</value>
            <value>39</value>
            <value>40</value>
            <value>41</value>
            <value>42</value>
            <value>43</value>
            <value>44</value>
            <value>45</value>
            <value>46</value>
            <value>47</value>
            <value>48</value>
            <value>49</value>
            <value>50</value>
            <value>51</value>
            <value>52</value>
            <value>53</value>
            <value>54</value>
            <value>55</value>
            <value>56</value>
            <value>57</value>
            <value>58</value>
            <value>59</value>
            <value>60</value>
            <value>61</value>
            <value>62</value>
            <value>63</value>
            <value>64</value>
            <value>65</value>
            <value>66</value>
            <value>67</value>
            <value>68</value>
            <value>69</value>
            <value>70</value>
            <value>71</value>
            <value>72</value>
            <value>73</value>
            <value>74</value>
            <value>75</value>
            <value>78</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='11' value='&gt;10' />
        </aliases>
      </column>
      <column caption='Imps dim' datatype='integer' name='[Imps (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[imps]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Rank submit' datatype='integer' name='[Rank (copy)]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='rank(sum([submits]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Release Price (thb)' datatype='integer' name='[Release Price (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[release_price]*40' />
      </column>
      <column caption='Release Price (thb) (bin)' datatype='integer' name='[Release Price (thb) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='3' formula='[Release Price (copy)]' peg='0' size='2000' />
      </column>
      <column datatype='string' name='[Release Year (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[release_year]'>
          <bin value='&quot;2016&quot;'>
            <value>&quot;2016&quot;</value>
            <value>&quot;22016&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;2016&quot;' value='2016' />
        </aliases>
      </column>
      <column datatype='string' name='[Room Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[room_name]'>
          <bin value='&quot;amulet&quot;'>
            <value>&quot;amulet&quot;</value>
            <value>&quot;amuletbang&quot;</value>
            <value>&quot;amuletpathumthani&quot;</value>
            <value>&quot;amuletphra&quot;</value>
            <value>&quot;amuletphrae&quot;</value>
            <value>&quot;amuletprachinburip&quot;</value>
            <value>&quot;amuletrayong&quot;</value>
            <value>&quot;amuletsi&quot;</value>
            <value>&quot;amuletsingburip&quot;</value>
            <value>&quot;amuletwrap&quot;</value>
          </bin>
          <bin value='&quot;astina&quot;'>
            <value>&quot;astina&quot;</value>
            <value>&quot;auto&quot;</value>
            <value>&quot;auto_part&quot;</value>
            <value>&quot;autobangkok_metropolitanp&quot;</value>
            <value>&quot;autoburiram&quot;</value>
            <value>&quot;autochachoengsao&quot;</value>
            <value>&quot;autochiangrai&quot;</value>
            <value>&quot;autocontextual&quot;</value>
            <value>&quot;autokalasinp&quot;</value>
            <value>&quot;autokanchanaburi&quot;</value>
            <value>&quot;autokhonkaen&quot;</value>
            <value>&quot;autokhonkaenp&quot;</value>
            <value>&quot;autoloei&quot;</value>
            <value>&quot;automahasarakham&quot;</value>
            <value>&quot;autonakhonpathom&quot;</value>
            <value>&quot;autonakhonphanom&quot;</value>
            <value>&quot;autonakhonphanomp&quot;</value>
            <value>&quot;autonakhonratchasima&quot;</value>
            <value>&quot;autonakhonsawan&quot;</value>
            <value>&quot;autonakhonsithammarat&quot;</value>
            <value>&quot;autonongbualamphu&quot;</value>
            <value>&quot;autopattanip&quot;</value>
            <value>&quot;autophetchabun&quot;</value>
            <value>&quot;autophichit&quot;</value>
            <value>&quot;autophitsanulok&quot;</value>
            <value>&quot;autorayong&quot;</value>
            <value>&quot;autosakonnakhon&quot;</value>
            <value>&quot;autosaraburi&quot;</value>
            <value>&quot;autosisaket&quot;</value>
            <value>&quot;autosongkhla&quot;</value>
            <value>&quot;autosukhothai&quot;</value>
            <value>&quot;autosuphanburi&quot;</value>
            <value>&quot;autosuratthani&quot;</value>
            <value>&quot;autosurin&quot;</value>
            <value>&quot;autotak&quot;</value>
            <value>&quot;autothanyaburip&quot;</value>
            <value>&quot;autoudonthani&quot;</value>
            <value>&quot;autowrap&quot;</value>
            <value>&quot;car&quot;</value>
            <value>&quot;car_parts&quot;</value>
            <value>&quot;cyclone&quot;</value>
            <value>&quot;strada&quot;</value>
          </bin>
          <bin value='&quot;bicycles&quot;'>
            <value>&quot;bicycles&quot;</value>
            <value>&quot;bicyclesbangkok&quot;</value>
            <value>&quot;bicycleskanchanaburi&quot;</value>
            <value>&quot;bicycleskrabi&quot;</value>
            <value>&quot;bicycleslamphun&quot;</value>
            <value>&quot;bicyclessamutsakhon&quot;</value>
            <value>&quot;bicyclessongkhla&quot;</value>
            <value>&quot;bicyclessuratthani&quot;</value>
            <value>&quot;bicyclesubonratchathani&quot;</value>
          </bin>
          <bin value='&quot;business_for_sale&quot;'>
            <value>&quot;business_for_sale&quot;</value>
            <value>&quot;business_service&quot;</value>
          </bin>
          <bin value='&quot;computer&quot;'>
            <value>&quot;computer&quot;</value>
            <value>&quot;computerkhonkaen&quot;</value>
            <value>&quot;computerprachuapkhirikhan&quot;</value>
          </bin>
          <bin value='&quot;electric&quot;'>
            <value>&quot;electric&quot;</value>
            <value>&quot;electricnakhonsawan&quot;</value>
            <value>&quot;electricphitsanulok&quot;</value>
            <value>&quot;electricratchaburi&quot;</value>
            <value>&quot;electricubonratchathani&quot;</value>
          </bin>
          <bin value='&quot;lifestyle&quot;'>
            <value>&quot;lifestyle&quot;</value>
            <value>&quot;lifestyle..&quot;</value>
          </bin>
          <bin value='&quot;mom_and_kid&quot;'>
            <value>&quot;mom_and_kid&quot;</value>
            <value>&quot;mom_and_kidsongkhla&quot;</value>
          </bin>
          <bin value='&quot;pet&quot;'>
            <value>&quot;pet&quot;</value>
            <value>&quot;petkanchanaburi&quot;</value>
            <value>&quot;petkhonkaen&quot;</value>
            <value>&quot;petnakhonratchasima&quot;</value>
            <value>&quot;petphetchabun&quot;</value>
          </bin>
          <bin value='&quot;phone_device&quot;'>
            <value>&quot;phone_device&quot;</value>
            <value>&quot;phone_devicenakhonratchasima&quot;</value>
            <value>&quot;phone_devicesongkhla&quot;</value>
          </bin>
          <bin value='&quot;realestate&quot;'>
            <value>&quot;realestate&quot;</value>
            <value>&quot;realestateayutthaya&quot;</value>
            <value>&quot;realestatebangkok&quot;</value>
            <value>&quot;realestateburiram&quot;</value>
            <value>&quot;realestatechachoengsao&quot;</value>
            <value>&quot;realestatechaiyaphum&quot;</value>
            <value>&quot;realestatechiang&quot;</value>
            <value>&quot;realestatechiangmai&quot;</value>
            <value>&quot;realestatechiangrai&quot;</value>
            <value>&quot;realestatechonburi&quot;</value>
            <value>&quot;realestatecontextual&quot;</value>
            <value>&quot;realestatekanchanaburi&quot;</value>
            <value>&quot;realestatekhonkaen&quot;</value>
            <value>&quot;realestatekrabi&quot;</value>
            <value>&quot;realestatelopburi&quot;</value>
            <value>&quot;realestatenakhonratchasima&quot;</value>
            <value>&quot;realestatenakhonsawan&quot;</value>
            <value>&quot;realestatenakhonsithammarat&quot;</value>
            <value>&quot;realestatenonthaburi&quot;</value>
            <value>&quot;realestatepathumthani&quot;</value>
            <value>&quot;realestatephangnga&quot;</value>
            <value>&quot;realestatephayao&quot;</value>
            <value>&quot;realestatephetchabun&quot;</value>
            <value>&quot;realestatephichit&quot;</value>
            <value>&quot;realestatephuket&quot;</value>
            <value>&quot;realestateprachinburi&quot;</value>
            <value>&quot;realestateratchaburi&quot;</value>
            <value>&quot;realestaterayong&quot;</value>
            <value>&quot;realestatesakaeo&quot;</value>
            <value>&quot;realestatesakonnakhon&quot;</value>
            <value>&quot;realestatesamutprakan&quot;</value>
            <value>&quot;realestatesamutsakhon&quot;</value>
            <value>&quot;realestatesaraburi&quot;</value>
            <value>&quot;realestatesongkhla&quot;</value>
            <value>&quot;realestatesuratthani&quot;</value>
            <value>&quot;realestatesurin&quot;</value>
            <value>&quot;realestateubonratchathani&quot;</value>
            <value>&quot;realestateudonthani&quot;</value>
            <value>&quot;realestateuthaithani&quot;</value>
            <value>&quot;realestatewrap&quot;</value>
          </bin>
          <bin value='&quot;shoes&quot;'>
            <value>&quot;shoes&quot;</value>
            <value>&quot;shoesnakhonsithammarat&quot;</value>
            <value>&quot;shoesphuket&quot;</value>
            <value>&quot;shoessongkhla&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;amulet&quot;' value='amulet' />
          <alias key='&quot;astina&quot;' value='auto' />
          <alias key='&quot;bicycles&quot;' value='bicycles' />
          <alias key='&quot;business_for_sale&quot;' value='business_service' />
          <alias key='&quot;computer&quot;' value='computer' />
          <alias key='&quot;electric&quot;' value='electric' />
          <alias key='&quot;lifestyle&quot;' value='lifestyle' />
          <alias key='&quot;mom_and_kid&quot;' value='mom_and_kid' />
          <alias key='&quot;pet&quot;' value='pet' />
          <alias key='&quot;phone_device&quot;' value='phone_device' />
          <alias key='&quot;realestate&quot;' value='realestate' />
          <alias key='&quot;shoes&quot;' value='shoes' />
        </aliases>
      </column>
      <column caption='Screensize (bin)' datatype='integer' name='[Screensize (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[screensize]' peg='0' size='1' />
      </column>
      <column caption='Brand' datatype='string' name='[brand]' role='dimension' type='nominal' />
      <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
      <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
      <column caption='Cluster' datatype='real' name='[cluster]' role='measure' type='quantitative' />
      <column caption='Dvc Commercname' datatype='string' name='[dvc_commercname]' role='dimension' type='nominal' />
      <column caption='Dvc Techname' datatype='string' name='[dvc_techname]' role='dimension' type='nominal' />
      <column caption='Ful Channel' datatype='string' name='[ful_channel]' role='dimension' type='nominal' />
      <column caption='Hl Platform' datatype='string' name='[hl_platform]' role='dimension' type='nominal' />
      <column caption='Impb4Click' datatype='integer' name='[impb4click]' role='measure' type='quantitative' />
      <column caption='Impclick Daydif' datatype='integer' name='[impclick_daydif]' role='measure' type='quantitative' />
      <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
      <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
      <column caption='Offer (Impb4Click Byoffer)' datatype='string' name='[offer (impb4click_byoffer)]' role='dimension' type='nominal' />
      <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;booster&quot;' value='Booster' />
          <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
          <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
          <alias key='&quot;mgm&quot;' value='Mgm' />
          <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
          <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
          <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
          <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
          <alias key='&quot;mnp-free-device&quot;' value='OEM' />
          <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
          <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
          <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
          <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
          <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
          <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
          <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
          <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
          <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
          <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
          <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
          <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
          <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
          <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
          <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
          <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
          <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
        </aliases>
      </column>
      <column caption='Pt Cat' datatype='string' name='[pt_cat]' role='dimension' type='nominal' />
      <column caption='Release Month' datatype='string' name='[release_month]' role='dimension' type='nominal' />
      <column caption='Release Price' datatype='integer' datatype-customized='true' name='[release_price]' role='dimension' type='ordinal' />
      <column caption='Release Year' datatype='string' name='[release_year]' role='dimension' type='nominal' />
      <column caption='Room Id' datatype='integer' name='[room_id]' role='dimension' type='ordinal' />
      <column caption='Room Name' datatype='string' name='[room_name]' role='dimension' type='nominal' />
      <column caption='Screensize' datatype='integer' datatype-customized='true' name='[screensize]' role='dimension' type='ordinal' />
      <column caption='Selects' datatype='integer' name='[selects]' role='measure' type='quantitative' />
      <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
      <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
      <column caption='Tapad Id (Impb4Click Byoffer)' datatype='string' name='[tapad_id (impb4click_byoffer)]' role='dimension' type='nominal' />
      <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
      <column-instance column='[impb4click]' derivation='None' name='[none:impb4click:qk]' pivot='key' type='quantitative' />
      <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
      <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Impb4Click,Offer)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:impb4click:qk]' />
          <groupfilter function='level-members' level='[none:offer:nk]' />
        </groupfilter>
      </group>
      <group name='[Offer &amp; Dvc Commercname (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[dvc_commercname]' />
          <groupfilter function='level-members' level='[offer]' />
        </groupfilter>
      </group>
      <group name='[Offer &amp; Room Name (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[room_name]' />
          <groupfilter function='level-members' level='[offer]' />
        </groupfilter>
      </group>
      <group name='[Source &amp; Offer (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[offer]' />
          <groupfilter function='level-members' level='[source]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='false' units='records'>
        <connection class='dataengine' dbname='D:\Tapad_UC1\Measurement_new\Measurement_2017\meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana).tde' schema='Extract' tablename='Extract' update-time='01/25/2017 10:18:49 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[CPSubmit (copy 2)]' value='[Extract].[Calculation_417990356997468162]' />
            <map key='[Impb4Click (copy)]' value='[Extract].[Impb4Click (copy)]' />
            <map key='[Impb4Click (group)]' value='[Extract].[Impb4Click (group)]' />
            <map key='[Impclick Daydif (group)]' value='[Extract].[Impclick Daydif (group)]' />
            <map key='[Imps (copy)]' value='[Extract].[Imps (copy)]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[Release Price (copy)]' value='[Extract].[Release Price (copy)]' />
            <map key='[Release Price (thb) (bin)]' value='[Extract].[Release Price (thb) (bin)]' />
            <map key='[Release Year (group)]' value='[Extract].[Release Year (group)]' />
            <map key='[Room Name (group)]' value='[Extract].[Room Name (group)]' />
            <map key='[Screensize (bin)]' value='[Extract].[Screensize (bin)]' />
            <map key='[brand]' value='[Extract].[brand]' />
            <map key='[carrier]' value='[Extract].[carrier]' />
            <map key='[clicks]' value='[Extract].[clicks]' />
            <map key='[cluster]' value='[Extract].[cluster]' />
            <map key='[dvc_commercname]' value='[Extract].[dvc_commercname]' />
            <map key='[dvc_techname]' value='[Extract].[dvc_techname]' />
            <map key='[ful_channel]' value='[Extract].[ful_channel]' />
            <map key='[hl_platform]' value='[Extract].[hl_platform]' />
            <map key='[impb4click]' value='[Extract].[impb4click]' />
            <map key='[impclick_daydif]' value='[Extract].[impclick_daydif]' />
            <map key='[imps]' value='[Extract].[imps]' />
            <map key='[landings]' value='[Extract].[landings]' />
            <map key='[offer (impb4click_byoffer)]' value='[Extract].[offer]' />
            <map key='[offer]' value='[Extract].[offer1]' />
            <map key='[pt_cat]' value='[Extract].[pt_cat]' />
            <map key='[release_month]' value='[Extract].[release_month]' />
            <map key='[release_price]' value='[Extract].[release_price]' />
            <map key='[release_year]' value='[Extract].[release_year]' />
            <map key='[room_id]' value='[Extract].[room_id]' />
            <map key='[room_name]' value='[Extract].[room_name]' />
            <map key='[screensize]' value='[Extract].[screensize]' />
            <map key='[selects]' value='[Extract].[selects]' />
            <map key='[sighted_date]' value='[Extract].[sighted_date]' />
            <map key='[source (impb4click_byoffer)]' value='[Extract].[source]' />
            <map key='[source]' value='[Extract].[source1]' />
            <map key='[submits]' value='[Extract].[submits]' />
            <map key='[tapad_id (impb4click_byoffer)]' value='[Extract].[tapad_id]' />
            <map key='[tapad_id]' value='[Extract].[tapad_id1]' />
          </cols>
          <calculations>
            <calculation column='[CPSubmit (copy 2)]' formula='IF [pt_cat]=&apos;cat1&apos; then 250/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat3&apos; then 200/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat6&apos; then 120/35&#13;&#10;ELSE 3&#13;&#10;END' />
            <calculation column='[Impb4Click (copy)]' formula='[impb4click]' />
            <calculation column='[Impb4Click (group)]' formula='CASE [impb4click]&#10;  WHEN 16 THEN 16&#10;  WHEN 17 THEN 16&#10;  WHEN 18 THEN 16&#10;  WHEN 19 THEN 16&#10;  WHEN 20 THEN 16&#10;  WHEN 21 THEN 16&#10;  WHEN 22 THEN 16&#10;  WHEN 23 THEN 16&#10;  WHEN 24 THEN 16&#10;  WHEN 25 THEN 16&#10;  WHEN 26 THEN 16&#10;  WHEN 27 THEN 16&#10;  WHEN 28 THEN 16&#10;  WHEN 29 THEN 16&#10;  WHEN 30 THEN 16&#10;  WHEN 32 THEN 16&#10;  WHEN 34 THEN 16&#10;  WHEN 35 THEN 16&#10;  WHEN 36 THEN 16&#10;  WHEN 37 THEN 16&#10;  WHEN 38 THEN 16&#10;  WHEN 39 THEN 16&#10;  WHEN 40 THEN 16&#10;  WHEN 41 THEN 16&#10;  WHEN 43 THEN 16&#10;  WHEN 46 THEN 16&#10;  WHEN 47 THEN 16&#10;  WHEN 49 THEN 16&#10;  WHEN 50 THEN 16&#10;  WHEN 52 THEN 16&#10;  WHEN 53 THEN 16&#10;  WHEN 54 THEN 16&#10;  WHEN 61 THEN 16&#10;  WHEN 64 THEN 16&#10;  WHEN 65 THEN 16&#10;  WHEN 67 THEN 16&#10;  WHEN 68 THEN 16&#10;  WHEN 80 THEN 16&#10;  WHEN 83 THEN 16&#10;  WHEN 223 THEN 16&#10;  ELSE [impb4click]&#10;END' />
            <calculation column='[Impclick Daydif (group)]' formula='CASE [impclick_daydif]&#10;  WHEN 11 THEN 11&#10;  WHEN 12 THEN 11&#10;  WHEN 13 THEN 11&#10;  WHEN 14 THEN 11&#10;  WHEN 15 THEN 11&#10;  WHEN 16 THEN 11&#10;  WHEN 17 THEN 11&#10;  WHEN 18 THEN 11&#10;  WHEN 19 THEN 11&#10;  WHEN 20 THEN 11&#10;  WHEN 21 THEN 11&#10;  WHEN 22 THEN 11&#10;  WHEN 23 THEN 11&#10;  WHEN 24 THEN 11&#10;  WHEN 25 THEN 11&#10;  WHEN 26 THEN 11&#10;  WHEN 27 THEN 11&#10;  WHEN 28 THEN 11&#10;  WHEN 29 THEN 11&#10;  WHEN 30 THEN 11&#10;  WHEN 31 THEN 11&#10;  WHEN 32 THEN 11&#10;  WHEN 33 THEN 11&#10;  WHEN 34 THEN 11&#10;  WHEN 35 THEN 11&#10;  WHEN 36 THEN 11&#10;  WHEN 37 THEN 11&#10;  WHEN 38 THEN 11&#10;  WHEN 39 THEN 11&#10;  WHEN 40 THEN 11&#10;  WHEN 41 THEN 11&#10;  WHEN 42 THEN 11&#10;  WHEN 43 THEN 11&#10;  WHEN 44 THEN 11&#10;  WHEN 45 THEN 11&#10;  WHEN 46 THEN 11&#10;  WHEN 47 THEN 11&#10;  WHEN 48 THEN 11&#10;  WHEN 49 THEN 11&#10;  WHEN 50 THEN 11&#10;  WHEN 51 THEN 11&#10;  WHEN 52 THEN 11&#10;  WHEN 53 THEN 11&#10;  WHEN 54 THEN 11&#10;  WHEN 55 THEN 11&#10;  WHEN 56 THEN 11&#10;  WHEN 57 THEN 11&#10;  WHEN 58 THEN 11&#10;  WHEN 59 THEN 11&#10;  WHEN 60 THEN 11&#10;  WHEN 61 THEN 11&#10;  WHEN 62 THEN 11&#10;  WHEN 63 THEN 11&#10;  WHEN 64 THEN 11&#10;  WHEN 65 THEN 11&#10;  WHEN 66 THEN 11&#10;  WHEN 67 THEN 11&#10;  WHEN 68 THEN 11&#10;  WHEN 69 THEN 11&#10;  WHEN 70 THEN 11&#10;  WHEN 71 THEN 11&#10;  WHEN 72 THEN 11&#10;  WHEN 73 THEN 11&#10;  WHEN 74 THEN 11&#10;  WHEN 75 THEN 11&#10;  WHEN 78 THEN 11&#10;  ELSE [impclick_daydif]&#10;END' />
            <calculation column='[Imps (copy)]' formula='[imps]' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Release Price (copy)]' formula='[release_price]*40' />
            <calculation column='[Release Price (thb) (bin)]' formula='SYS_NUMBIN([Release Price (copy)],2000)' />
            <calculation column='[Release Year (group)]' formula='CASE [release_year]&#10;  WHEN &quot;2016&quot; THEN &quot;2016&quot;&#10;  WHEN &quot;22016&quot; THEN &quot;2016&quot;&#10;  ELSE [release_year]&#10;END' />
            <calculation column='[Room Name (group)]' formula='CASE [room_name]&#10;  WHEN &quot;amulet&quot; THEN &quot;amulet&quot;&#10;  WHEN &quot;amuletbang&quot; THEN &quot;amulet&quot;&#10;  WHEN &quot;amuletpathumthani&quot; THEN &quot;amulet&quot;&#10;  WHEN &quot;amuletphra&quot; THEN &quot;amulet&quot;&#10;  WHEN &quot;amuletphrae&quot; THEN &quot;amulet&quot;&#10;  WHEN &quot;amuletprachinburip&quot; THEN &quot;amulet&quot;&#10;  WHEN &quot;amuletrayong&quot; THEN &quot;amulet&quot;&#10;  WHEN &quot;amuletsi&quot; THEN &quot;amulet&quot;&#10;  WHEN &quot;amuletsingburip&quot; THEN &quot;amulet&quot;&#10;  WHEN &quot;amuletwrap&quot; THEN &quot;amulet&quot;&#10;  WHEN &quot;astina&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;auto&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;auto_part&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autobangkok_metropolitanp&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autoburiram&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autochachoengsao&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autochiangrai&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autocontextual&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autokalasinp&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autokanchanaburi&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autokhonkaen&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autokhonkaenp&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autoloei&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;automahasarakham&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autonakhonpathom&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autonakhonphanom&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autonakhonphanomp&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autonakhonratchasima&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autonakhonsawan&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autonakhonsithammarat&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autonongbualamphu&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autopattanip&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autophetchabun&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autophichit&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autophitsanulok&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autorayong&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autosakonnakhon&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autosaraburi&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autosisaket&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autosongkhla&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autosukhothai&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autosuphanburi&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autosuratthani&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autosurin&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autotak&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autothanyaburip&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autoudonthani&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;autowrap&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;car&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;car_parts&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;cyclone&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;strada&quot; THEN &quot;astina&quot;&#10;  WHEN &quot;bicycles&quot; THEN &quot;bicycles&quot;&#10;  WHEN &quot;bicyclesbangkok&quot; THEN &quot;bicycles&quot;&#10;  WHEN &quot;bicycleskanchanaburi&quot; THEN &quot;bicycles&quot;&#10;  WHEN &quot;bicycleskrabi&quot; THEN &quot;bicycles&quot;&#10;  WHEN &quot;bicycleslamphun&quot; THEN &quot;bicycles&quot;&#10;  WHEN &quot;bicyclessamutsakhon&quot; THEN &quot;bicycles&quot;&#10;  WHEN &quot;bicyclessongkhla&quot; THEN &quot;bicycles&quot;&#10;  WHEN &quot;bicyclessuratthani&quot; THEN &quot;bicycles&quot;&#10;  WHEN &quot;bicyclesubonratchathani&quot; THEN &quot;bicycles&quot;&#10;  WHEN &quot;business_for_sale&quot; THEN &quot;business_for_sale&quot;&#10;  WHEN &quot;business_service&quot; THEN &quot;business_for_sale&quot;&#10;  WHEN &quot;computer&quot; THEN &quot;computer&quot;&#10;  WHEN &quot;computerkhonkaen&quot; THEN &quot;computer&quot;&#10;  WHEN &quot;computerprachuapkhirikhan&quot; THEN &quot;computer&quot;&#10;  WHEN &quot;electric&quot; THEN &quot;electric&quot;&#10;  WHEN &quot;electricnakhonsawan&quot; THEN &quot;electric&quot;&#10;  WHEN &quot;electricphitsanulok&quot; THEN &quot;electric&quot;&#10;  WHEN &quot;electricratchaburi&quot; THEN &quot;electric&quot;&#10;  WHEN &quot;electricubonratchathani&quot; THEN &quot;electric&quot;&#10;  WHEN &quot;lifestyle&quot; THEN &quot;lifestyle&quot;&#10;  WHEN &quot;lifestyle..&quot; THEN &quot;lifestyle&quot;&#10;  WHEN &quot;mom_and_kid&quot; THEN &quot;mom_and_kid&quot;&#10;  WHEN &quot;mom_and_kidsongkhla&quot; THEN &quot;mom_and_kid&quot;&#10;  WHEN &quot;pet&quot; THEN &quot;pet&quot;&#10;  WHEN &quot;petkanchanaburi&quot; THEN &quot;pet&quot;&#10;  WHEN &quot;petkhonkaen&quot; THEN &quot;pet&quot;&#10;  WHEN &quot;petnakhonratchasima&quot; THEN &quot;pet&quot;&#10;  WHEN &quot;petphetchabun&quot; THEN &quot;pet&quot;&#10;  WHEN &quot;phone_device&quot; THEN &quot;phone_device&quot;&#10;  WHEN &quot;phone_devicenakhonratchasima&quot; THEN &quot;phone_device&quot;&#10;  WHEN &quot;phone_devicesongkhla&quot; THEN &quot;phone_device&quot;&#10;  WHEN &quot;realestate&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestateayutthaya&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatebangkok&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestateburiram&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatechachoengsao&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatechaiyaphum&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatechiang&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatechiangmai&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatechiangrai&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatechonburi&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatecontextual&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatekanchanaburi&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatekhonkaen&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatekrabi&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatelopburi&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatenakhonratchasima&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatenakhonsawan&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatenakhonsithammarat&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatenonthaburi&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatepathumthani&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatephangnga&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatephayao&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatephetchabun&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatephichit&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatephuket&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestateprachinburi&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestateratchaburi&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestaterayong&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatesakaeo&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatesakonnakhon&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatesamutprakan&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatesamutsakhon&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatesaraburi&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatesongkhla&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatesuratthani&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatesurin&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestateubonratchathani&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestateudonthani&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestateuthaithani&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;realestatewrap&quot; THEN &quot;realestate&quot;&#10;  WHEN &quot;shoes&quot; THEN &quot;shoes&quot;&#10;  WHEN &quot;shoesnakhonsithammarat&quot; THEN &quot;shoes&quot;&#10;  WHEN &quot;shoesphuket&quot; THEN &quot;shoes&quot;&#10;  WHEN &quot;shoessongkhla&quot; THEN &quot;shoes&quot;&#10;  ELSE [room_name]&#10;END' />
            <calculation column='[Screensize (bin)]' formula='SYS_NUMBIN([screensize],1)' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='2850673' timestamp-start='2017-01-25 10:18:49.339' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_417990356997468162</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CPSubmit (copy 2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_417990356997468162</remote-alias>
              <ordinal>0</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>3.0</statistic>
                <statistic aggregation='Max' datatype='real'>7.1428571428571432</statistic>
                <statistic aggregation='Count' datatype='integer'>2850673</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>23</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>2850673</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Release Price (copy)</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Release Price (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Release Price (copy)</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>58</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>800</statistic>
                <statistic aggregation='Max' datatype='integer'>30400</statistic>
                <statistic aggregation='Count' datatype='integer'>2579174</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Release Price (thb) (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Release Price (thb) (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Release Price (thb) (bin)</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>15</statistic>
                <statistic aggregation='Count' datatype='integer'>2579174</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Screensize (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Screensize (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Screensize (bin)</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>10</statistic>
                <statistic aggregation='Count' datatype='integer'>2136330</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>brand</remote-name>
              <remote-type>129</remote-type>
              <local-name>[brand]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>brand</remote-alias>
              <ordinal>5</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>38</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;acer&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;zte&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2136335</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[carrier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier</remote-alias>
              <ordinal>6</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AIS&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wi-Fi&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2850673</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>clicks</remote-name>
              <remote-type>16</remote-type>
              <local-name>[clicks]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>clicks</remote-alias>
              <ordinal>7</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>11</statistic>
                <statistic aggregation='Count' datatype='integer'>2739883</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>24</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cluster</remote-name>
              <remote-type>4</remote-type>
              <local-name>[cluster]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cluster</remote-alias>
              <ordinal>8</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>13.0</statistic>
                <statistic aggregation='Count' datatype='integer'>2136335</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>26</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dvc_commercname</remote-name>
              <remote-type>129</remote-type>
              <local-name>[dvc_commercname]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dvc_commercname</remote-alias>
              <ordinal>9</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3694</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;zyq&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2848178</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dvc_techname</remote-name>
              <remote-type>129</remote-type>
              <local-name>[dvc_techname]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dvc_techname</remote-alias>
              <ordinal>10</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4157</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;zyq&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2848178</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>20</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ful_channel</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ful_channel]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ful_channel</remote-alias>
              <ordinal>11</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;callcenter&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;online&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>19394</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hl_platform</remote-name>
              <remote-type>129</remote-type>
              <local-name>[hl_platform]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hl_platform</remote-alias>
              <ordinal>12</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ANDROID&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;PC_OTHERS&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2848178</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Impb4Click (copy)</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Impb4Click (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Impb4Click (copy)</remote-alias>
              <ordinal>13</ordinal>
              <family>impb4click_byoffer</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>56</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>223</statistic>
                <statistic aggregation='Count' datatype='integer'>43902</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>30</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>impb4click</remote-name>
              <remote-type>2</remote-type>
              <local-name>[impb4click]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>impb4click</remote-alias>
              <ordinal>13</ordinal>
              <family>impb4click_byoffer</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>56</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>223</statistic>
                <statistic aggregation='Count' datatype='integer'>43902</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>30</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Impclick Daydif (group)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Impclick Daydif (group)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Impclick Daydif (group)</remote-alias>
              <ordinal>14</ordinal>
              <family>impb4click_byoffer</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>781.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.01778962234066785</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>11</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.4363055694588599</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.43630060034522006</statistic>
                <statistic aggregation='Var' datatype='real'>0.19036254994082</statistic>
                <statistic aggregation='VarP' datatype='real'>0.19035821386159943</statistic>
                <statistic aggregation='Count' datatype='integer'>43902</statistic>
                <statistic aggregation='Median' datatype='integer'>11</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>8371.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>impclick_daydif</remote-name>
              <remote-type>16</remote-type>
              <local-name>[impclick_daydif]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>impclick_daydif</remote-alias>
              <ordinal>14</ordinal>
              <family>impb4click_byoffer</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>20</statistic>
                <statistic aggregation='Count' datatype='integer'>43902</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>29</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Imps (copy)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Imps (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Imps (copy)</remote-alias>
              <ordinal>15</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>119</statistic>
                <statistic aggregation='Count' datatype='integer'>2739883</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>31</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>imps</remote-name>
              <remote-type>16</remote-type>
              <local-name>[imps]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>imps</remote-alias>
              <ordinal>15</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>119</statistic>
                <statistic aggregation='Count' datatype='integer'>2739883</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>31</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>landings</remote-name>
              <remote-type>16</remote-type>
              <local-name>[landings]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>landings</remote-alias>
              <ordinal>16</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>95</statistic>
                <statistic aggregation='Count' datatype='integer'>127107</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>27</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>offer</remote-name>
              <remote-type>129</remote-type>
              <local-name>[offer (impb4click_byoffer)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>offer</remote-alias>
              <ordinal>17</ordinal>
              <family>impb4click_byoffer</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;lucky-number&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;sim-platinum-number&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>43902</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>offer1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[offer]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>offer1</remote-alias>
              <ordinal>18</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;http://www.googletagmanager.com/ns&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;sim-platinum-number&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2778515</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pt_cat</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pt_cat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pt_cat</remote-alias>
              <ordinal>19</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;cat1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;cat6&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2268579</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>release_month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[release_month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>release_month</remote-alias>
              <ordinal>20</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;September&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2136335</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>release_price</remote-name>
              <remote-type>2</remote-type>
              <local-name>[release_price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>release_price</remote-alias>
              <ordinal>21</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>58</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>20</statistic>
                <statistic aggregation='Max' datatype='integer'>760</statistic>
                <statistic aggregation='Count' datatype='integer'>2579174</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>release_year</remote-name>
              <remote-type>129</remote-type>
              <local-name>[release_year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>release_year</remote-alias>
              <ordinal>22</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;2007&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;22016&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2136335</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>room_id</remote-name>
              <remote-type>2</remote-type>
              <local-name>[room_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>room_id</remote-alias>
              <ordinal>23</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>270</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>300</statistic>
                <statistic aggregation='Count' datatype='integer'>467099</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Room Name (group)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Room Name (group)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Room Name (group)</remote-alias>
              <ordinal>24</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>86</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;watch&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2656842</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;family&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>room_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[room_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>room_name</remote-alias>
              <ordinal>24</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>121</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;watch&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2656842</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>screensize</remote-name>
              <remote-type>16</remote-type>
              <local-name>[screensize]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>screensize</remote-alias>
              <ordinal>25</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>10</statistic>
                <statistic aggregation='Count' datatype='integer'>2136330</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>selects</remote-name>
              <remote-type>2</remote-type>
              <local-name>[selects]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>selects</remote-alias>
              <ordinal>26</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>772</statistic>
                <statistic aggregation='Count' datatype='integer'>127107</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>28</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sighted_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[sighted_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sighted_date</remote-alias>
              <ordinal>27</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>24</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2017-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2017-01-24#</statistic>
                <statistic aggregation='Count' datatype='integer'>2850673</statistic>
                <statistic aggregation='Median' datatype='date'>#2017-01-18#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>source</remote-name>
              <remote-type>129</remote-type>
              <local-name>[source (impb4click_byoffer)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>source</remote-alias>
              <ordinal>28</ordinal>
              <family>impb4click_byoffer</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;kd&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;pt&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>43902</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>source1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[source]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>source1</remote-alias>
              <ordinal>29</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;fb&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;pt&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2850673</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>submits</remote-name>
              <remote-type>16</remote-type>
              <local-name>[submits]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>submits</remote-alias>
              <ordinal>30</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>10</statistic>
                <statistic aggregation='Count' datatype='integer'>127107</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>25</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tapad_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tapad_id (impb4click_byoffer)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tapad_id</remote-alias>
              <ordinal>31</ordinal>
              <family>impb4click_byoffer</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14789</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;00013e71-dcbd-11e6-b0c2-005056a265eb&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;fffe5ee1-e107-11e6-b0c2-005056a265eb&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>43902</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>21</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tapad_id1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tapad_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tapad_id1</remote-alias>
              <ordinal>32</ordinal>
              <family>meas_table_dvc_pro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1986973</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;00000491-69bf-11e6-92d4-005056a2171e&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;fffff941-225c-11e6-8717-0621605bd0b7&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2850673</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>22</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Impb4Click (group)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Impb4Click (group)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Impb4Click (group)</remote-alias>
              <family>impb4click_byoffer</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>16</statistic>
                <statistic aggregation='Count' datatype='integer'>43902</statistic>
                <statistic aggregation='Median' datatype='integer'>16</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Release Year (group)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Release Year (group)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Release Year (group)</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;2007&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;22016&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2136335</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;2012&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.620104' measure-ordering='alphabetic' measure-percentage='0.379896' rowDisplayCount='10' show-aliased-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:offer:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;mnp-huawei-p9&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;mnp-asus-zenfone-55&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;mnp-samsung-galaxy-note5&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;mnp-samsung-galaxy-j5-prime&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;mnp-samsung-galaxy-j2-prime&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;mnp-samsung-galaxy-j7-prime&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;mnp-huawei-mate9&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:offer:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;mnp-samsung-galaxy-j2&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;mnp-iphone-se&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;mnp-samsung-galaxy-j2-prime&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>%all%</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Nice Number&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;mnp-device-discount-samsung-non-share&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;mnp-free-dtac-pocket-wifi&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;mnp-samsung-galaxy-j7-prime&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;mnp-vivo-v5&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;tariff&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>%null%</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;mnp-asus-zenfone-55&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;mnp-device-discount-samsung&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;mnp-huawei-p9&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;mnp-oppo-mirror5&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;mnp-samsung-galaxy-j5&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;iphone-discount&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;lucky-number&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;mgm&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;mnp-samsung-galaxy-a5&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;mnp-samsung-galaxy-note5&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;mnp-samsung-galaxy-nj2&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;mnp-device-clearance&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;mnp-samsung-galaxy-j5-prime&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;booster&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;sim-nice-number&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;device-discount&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;sim-platinum-number&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;mnp-asus-zenfone-45&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;mnp-iphone6-6plus&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;mnp-free-device&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;mnp-huawei-mate9&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;mnp-free-dtac-phone-s2&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;mnp-iphone7&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:source:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;fb&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;oth&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;pt&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;kd&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Thailand&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
      <datasources>
        <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
      </datasources>
      <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
        <column-instance column='[sighted_date]' derivation='None' name='[none:sighted_date:qk]' pivot='key' type='quantitative' />
        <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
      </datasource-dependencies>
      <filter class='quantitative' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]' included-values='in-range'>
        <min>#2017-02-02#</min>
        <max>#2017-02-03#</max>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Day Difference between 1st Click &amp; 1st Impression'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column datatype='integer' name='[Impb4Click (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[impb4click]'>
                <bin value='16'>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>32</value>
                  <value>34</value>
                  <value>35</value>
                  <value>36</value>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>43</value>
                  <value>46</value>
                  <value>47</value>
                  <value>49</value>
                  <value>50</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                  <value>61</value>
                  <value>64</value>
                  <value>65</value>
                  <value>67</value>
                  <value>68</value>
                  <value>80</value>
                  <value>83</value>
                  <value>223</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='16' value='&gt; 15' />
              </aliases>
            </column>
            <column datatype='integer' name='[Impclick Daydif (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[impclick_daydif]'>
                <bin value='11'>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                  <value>35</value>
                  <value>36</value>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                  <value>55</value>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>78</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='11' value='&gt;10' />
              </aliases>
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Impb4Click' datatype='integer' name='[impb4click]' role='measure' type='quantitative' />
            <column caption='Impclick Daydif' datatype='integer' name='[impclick_daydif]' role='measure' type='quantitative' />
            <column-instance column='[clicks]' derivation='None' name='[none:clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[impb4click]' derivation='None' name='[none:impb4click:qk]' pivot='key' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[sighted_date]' derivation='None' name='[none:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[pcto:usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Exclusions (Impb4Click,Offer)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:impb4click:qk]' />
                <groupfilter function='level-members' level='[none:offer:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:impb4click:qk]' member='236' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-oppo-mirror5&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impb4Click (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Impb4Click (group)]' />
              <groupfilter function='member' level='[Impb4Click (group)]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:clicks:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone7&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j5-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j7-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-note5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-vivo-v5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-nice-number&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;fb&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:clicks:qk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Exclusions (Impb4Click,Offer)]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impb4Click (group)]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impclick Daydif (group)]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk] * [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[pcto:usr:Calculation_855683945803128832:qk])</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impclick Daydif (group)]</cols>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Funnel by Offer'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Funnel by Offer</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='CPM' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[CPSubmit (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [pt_cat]=&apos;cat1&apos; then 250/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat3&apos; then 200/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat6&apos; then 120/35&#13;&#10;ELSE 3&#13;&#10;END' />
            </column>
            <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
            </column>
            <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([submits])/sum([landings])' />
            </column>
            <column caption='CPSubmit' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_417990356997468162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([imps])/1000)/sum([submits])*MAX([CPSubmit (copy 2)])' />
            </column>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
            <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[sighted_date]' derivation='None' name='[none:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Pt Cat' datatype='string' name='[pt_cat]' role='dimension' type='nominal' />
            <column caption='Selects' datatype='integer' name='[selects]' role='measure' type='quantitative' />
            <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[clicks]' derivation='Sum' name='[sum:clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[imps]' derivation='Sum' name='[sum:imps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[landings]' derivation='Sum' name='[sum:landings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[selects]' derivation='Sum' name='[sum:selects:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_417990356996841472]' derivation='User' name='[usr:Calculation_417990356996841472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997001217]' derivation='User' name='[usr:Calculation_417990356997001217:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997468162]' derivation='User' name='[usr:Calculation_417990356997468162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803309057]' derivation='User' name='[usr:Calculation_855683945803309057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:selects:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone7&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j5-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j7-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-note5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-vivo-v5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-nice-number&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:offer:nk]' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:source:nk]' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;oth&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;kd&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;pt&quot;</bucket>
              <bucket>&quot;fb&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]' value='81' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' value='36' />
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' value='80' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' max='30.0' palette='tableau-red-green' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' />
              <text column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk] / [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk])</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Kaidee &amp; Pantip Funnel Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='CPM' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[CPSubmit (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [pt_cat]=&apos;cat1&apos; then 250/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat3&apos; then 200/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat6&apos; then 120/35&#13;&#10;ELSE 3&#13;&#10;END' />
            </column>
            <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
            </column>
            <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([submits])/sum([landings])' />
            </column>
            <column caption='CPSubmit' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_417990356997468162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([imps])/1000)/sum([submits])*MAX([CPSubmit (copy 2)])' />
            </column>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
            <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[sighted_date]' derivation='None' name='[none:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Pt Cat' datatype='string' name='[pt_cat]' role='dimension' type='nominal' />
            <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[clicks]' derivation='Sum' name='[sum:clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[imps]' derivation='Sum' name='[sum:imps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[landings]' derivation='Sum' name='[sum:landings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_417990356996841472]' derivation='User' name='[usr:Calculation_417990356996841472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997001217]' derivation='User' name='[usr:Calculation_417990356997001217:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997468162]' derivation='User' name='[usr:Calculation_417990356997468162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803309057]' derivation='User' name='[usr:Calculation_855683945803309057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone7&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j5-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j7-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-note5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-vivo-v5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-nice-number&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:offer:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;tariff&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='10' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk] + [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]))))))))</rows>
        <cols>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk] / [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Kaidee &amp; Pantip Funnel Timeline'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
            </column>
            <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([submits])/sum([landings])' />
            </column>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
            <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[sighted_date]' derivation='None' name='[none:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[landings]' derivation='Sum' name='[sum:landings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[sighted_date]' derivation='Day-Trunc' name='[tdy:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356996841472]' derivation='User' name='[usr:Calculation_417990356996841472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997001217]' derivation='User' name='[usr:Calculation_417990356997001217:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803309057]' derivation='User' name='[usr:Calculation_855683945803309057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mgm&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone-se&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone7&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime-v2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j5-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j7-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-note5&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;kd&quot;</bucket>
              <bucket>&quot;pt&quot;</bucket>
              <bucket>&quot;fb&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='3' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='5' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
          <pane id='6' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk] + [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk])))))</rows>
        <cols>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk] * [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[tdy:sighted_date:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Kaidee Pantip Room Performance'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='CPM' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[CPSubmit (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [pt_cat]=&apos;cat1&apos; then 250/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat3&apos; then 200/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat6&apos; then 120/35&#13;&#10;ELSE 3&#13;&#10;END' />
            </column>
            <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
            </column>
            <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([submits])/sum([landings])' />
            </column>
            <column caption='CPSubmit' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_417990356997468162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([imps])/1000)/sum([submits])*MAX([CPSubmit (copy 2)])' />
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_544935571523895296]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='index()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
            </column>
            <column datatype='string' name='[Room Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[room_name]'>
                <bin value='&quot;amulet&quot;'>
                  <value>&quot;amulet&quot;</value>
                  <value>&quot;amuletbang&quot;</value>
                  <value>&quot;amuletpathumthani&quot;</value>
                  <value>&quot;amuletphra&quot;</value>
                  <value>&quot;amuletphrae&quot;</value>
                  <value>&quot;amuletprachinburip&quot;</value>
                  <value>&quot;amuletrayong&quot;</value>
                  <value>&quot;amuletsi&quot;</value>
                  <value>&quot;amuletsingburip&quot;</value>
                  <value>&quot;amuletwrap&quot;</value>
                </bin>
                <bin value='&quot;astina&quot;'>
                  <value>&quot;astina&quot;</value>
                  <value>&quot;auto&quot;</value>
                  <value>&quot;auto_part&quot;</value>
                  <value>&quot;autobangkok_metropolitanp&quot;</value>
                  <value>&quot;autoburiram&quot;</value>
                  <value>&quot;autochachoengsao&quot;</value>
                  <value>&quot;autochiangrai&quot;</value>
                  <value>&quot;autocontextual&quot;</value>
                  <value>&quot;autokalasinp&quot;</value>
                  <value>&quot;autokanchanaburi&quot;</value>
                  <value>&quot;autokhonkaen&quot;</value>
                  <value>&quot;autokhonkaenp&quot;</value>
                  <value>&quot;autoloei&quot;</value>
                  <value>&quot;automahasarakham&quot;</value>
                  <value>&quot;autonakhonpathom&quot;</value>
                  <value>&quot;autonakhonphanom&quot;</value>
                  <value>&quot;autonakhonphanomp&quot;</value>
                  <value>&quot;autonakhonratchasima&quot;</value>
                  <value>&quot;autonakhonsawan&quot;</value>
                  <value>&quot;autonakhonsithammarat&quot;</value>
                  <value>&quot;autonongbualamphu&quot;</value>
                  <value>&quot;autopattanip&quot;</value>
                  <value>&quot;autophetchabun&quot;</value>
                  <value>&quot;autophichit&quot;</value>
                  <value>&quot;autophitsanulok&quot;</value>
                  <value>&quot;autorayong&quot;</value>
                  <value>&quot;autosakonnakhon&quot;</value>
                  <value>&quot;autosaraburi&quot;</value>
                  <value>&quot;autosisaket&quot;</value>
                  <value>&quot;autosongkhla&quot;</value>
                  <value>&quot;autosukhothai&quot;</value>
                  <value>&quot;autosuphanburi&quot;</value>
                  <value>&quot;autosuratthani&quot;</value>
                  <value>&quot;autosurin&quot;</value>
                  <value>&quot;autotak&quot;</value>
                  <value>&quot;autothanyaburip&quot;</value>
                  <value>&quot;autoudonthani&quot;</value>
                  <value>&quot;autowrap&quot;</value>
                  <value>&quot;car&quot;</value>
                  <value>&quot;car_parts&quot;</value>
                  <value>&quot;cyclone&quot;</value>
                  <value>&quot;strada&quot;</value>
                </bin>
                <bin value='&quot;bicycles&quot;'>
                  <value>&quot;bicycles&quot;</value>
                  <value>&quot;bicyclesbangkok&quot;</value>
                  <value>&quot;bicycleskanchanaburi&quot;</value>
                  <value>&quot;bicycleskrabi&quot;</value>
                  <value>&quot;bicycleslamphun&quot;</value>
                  <value>&quot;bicyclessamutsakhon&quot;</value>
                  <value>&quot;bicyclessongkhla&quot;</value>
                  <value>&quot;bicyclessuratthani&quot;</value>
                  <value>&quot;bicyclesubonratchathani&quot;</value>
                </bin>
                <bin value='&quot;business_for_sale&quot;'>
                  <value>&quot;business_for_sale&quot;</value>
                  <value>&quot;business_service&quot;</value>
                </bin>
                <bin value='&quot;computer&quot;'>
                  <value>&quot;computer&quot;</value>
                  <value>&quot;computerkhonkaen&quot;</value>
                  <value>&quot;computerprachuapkhirikhan&quot;</value>
                </bin>
                <bin value='&quot;electric&quot;'>
                  <value>&quot;electric&quot;</value>
                  <value>&quot;electricnakhonsawan&quot;</value>
                  <value>&quot;electricphitsanulok&quot;</value>
                  <value>&quot;electricratchaburi&quot;</value>
                  <value>&quot;electricubonratchathani&quot;</value>
                </bin>
                <bin value='&quot;lifestyle&quot;'>
                  <value>&quot;lifestyle&quot;</value>
                  <value>&quot;lifestyle..&quot;</value>
                </bin>
                <bin value='&quot;mom_and_kid&quot;'>
                  <value>&quot;mom_and_kid&quot;</value>
                  <value>&quot;mom_and_kidsongkhla&quot;</value>
                </bin>
                <bin value='&quot;pet&quot;'>
                  <value>&quot;pet&quot;</value>
                  <value>&quot;petkanchanaburi&quot;</value>
                  <value>&quot;petkhonkaen&quot;</value>
                  <value>&quot;petnakhonratchasima&quot;</value>
                  <value>&quot;petphetchabun&quot;</value>
                </bin>
                <bin value='&quot;phone_device&quot;'>
                  <value>&quot;phone_device&quot;</value>
                  <value>&quot;phone_devicenakhonratchasima&quot;</value>
                  <value>&quot;phone_devicesongkhla&quot;</value>
                </bin>
                <bin value='&quot;realestate&quot;'>
                  <value>&quot;realestate&quot;</value>
                  <value>&quot;realestateayutthaya&quot;</value>
                  <value>&quot;realestatebangkok&quot;</value>
                  <value>&quot;realestateburiram&quot;</value>
                  <value>&quot;realestatechachoengsao&quot;</value>
                  <value>&quot;realestatechaiyaphum&quot;</value>
                  <value>&quot;realestatechiang&quot;</value>
                  <value>&quot;realestatechiangmai&quot;</value>
                  <value>&quot;realestatechiangrai&quot;</value>
                  <value>&quot;realestatechonburi&quot;</value>
                  <value>&quot;realestatecontextual&quot;</value>
                  <value>&quot;realestatekanchanaburi&quot;</value>
                  <value>&quot;realestatekhonkaen&quot;</value>
                  <value>&quot;realestatekrabi&quot;</value>
                  <value>&quot;realestatelopburi&quot;</value>
                  <value>&quot;realestatenakhonratchasima&quot;</value>
                  <value>&quot;realestatenakhonsawan&quot;</value>
                  <value>&quot;realestatenakhonsithammarat&quot;</value>
                  <value>&quot;realestatenonthaburi&quot;</value>
                  <value>&quot;realestatepathumthani&quot;</value>
                  <value>&quot;realestatephangnga&quot;</value>
                  <value>&quot;realestatephayao&quot;</value>
                  <value>&quot;realestatephetchabun&quot;</value>
                  <value>&quot;realestatephichit&quot;</value>
                  <value>&quot;realestatephuket&quot;</value>
                  <value>&quot;realestateprachinburi&quot;</value>
                  <value>&quot;realestateratchaburi&quot;</value>
                  <value>&quot;realestaterayong&quot;</value>
                  <value>&quot;realestatesakaeo&quot;</value>
                  <value>&quot;realestatesakonnakhon&quot;</value>
                  <value>&quot;realestatesamutprakan&quot;</value>
                  <value>&quot;realestatesamutsakhon&quot;</value>
                  <value>&quot;realestatesaraburi&quot;</value>
                  <value>&quot;realestatesongkhla&quot;</value>
                  <value>&quot;realestatesuratthani&quot;</value>
                  <value>&quot;realestatesurin&quot;</value>
                  <value>&quot;realestateubonratchathani&quot;</value>
                  <value>&quot;realestateudonthani&quot;</value>
                  <value>&quot;realestateuthaithani&quot;</value>
                  <value>&quot;realestatewrap&quot;</value>
                </bin>
                <bin value='&quot;shoes&quot;'>
                  <value>&quot;shoes&quot;</value>
                  <value>&quot;shoesnakhonsithammarat&quot;</value>
                  <value>&quot;shoesphuket&quot;</value>
                  <value>&quot;shoessongkhla&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;amulet&quot;' value='amulet' />
                <alias key='&quot;astina&quot;' value='auto' />
                <alias key='&quot;bicycles&quot;' value='bicycles' />
                <alias key='&quot;business_for_sale&quot;' value='business_service' />
                <alias key='&quot;computer&quot;' value='computer' />
                <alias key='&quot;electric&quot;' value='electric' />
                <alias key='&quot;lifestyle&quot;' value='lifestyle' />
                <alias key='&quot;mom_and_kid&quot;' value='mom_and_kid' />
                <alias key='&quot;pet&quot;' value='pet' />
                <alias key='&quot;phone_device&quot;' value='phone_device' />
                <alias key='&quot;realestate&quot;' value='realestate' />
                <alias key='&quot;shoes&quot;' value='shoes' />
              </aliases>
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
            <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[room_name]' derivation='None' name='[none:room_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[sighted_date]' derivation='None' name='[none:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Pt Cat' datatype='string' name='[pt_cat]' role='dimension' type='nominal' />
            <column caption='Room Name' datatype='string' name='[room_name]' role='dimension' type='nominal' />
            <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[clicks]' derivation='Sum' name='[sum:clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[imps]' derivation='Sum' name='[sum:imps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[landings]' derivation='Sum' name='[sum:landings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_417990356996841472]' derivation='User' name='[usr:Calculation_417990356996841472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997001217]' derivation='User' name='[usr:Calculation_417990356997001217:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997468162]' derivation='User' name='[usr:Calculation_417990356997468162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_544935571523895296]' derivation='User' name='[usr:Calculation_544935571523895296:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803309057]' derivation='User' name='[usr:Calculation_855683945803309057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Room Name (group)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;accessories&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;agriculture&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;camera&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;cate&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;l&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;land&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;m\%20frontier\%20navara&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;pra_kru&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;talisman&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;watchp&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Room Name (group)]' />
              <groupfilter function='member' level='[Room Name (group)]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone7&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j5-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j7-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-note5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-vivo-v5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-nice-number&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:room_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:room_name:nk]' member='&quot;&quot;' />
                <groupfilter function='member' level='[none:room_name:nk]' member='&quot;08&quot;' />
                <groupfilter function='member' level='[none:room_name:nk]' member='&quot;2&quot;' />
                <groupfilter function='member' level='[none:room_name:nk]' member='&quot;5&quot;' />
                <groupfilter function='member' level='[none:room_name:nk]' member='&quot;90&quot;' />
                <groupfilter function='member' level='[none:room_name:nk]' member='&quot;97&quot;' />
                <groupfilter function='member' level='[none:room_name:nk]' member='&quot;a\%20\%20uto&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;pt&quot;</bucket>
              <bucket>&quot;kd&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:1]' included-values='in-range'>
            <min>1</min>
            <max>29</max>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:1]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' value='60' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' max='30.0' min='0.61671428571428577' palette='tableau-red-green' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' />
              <text column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk] / [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)])</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</cols>
        <subtotals>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Landing Page Performance'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([submits])/sum([landings])' />
            </column>
            <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[sighted_date]' derivation='None' name='[none:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[landings]' derivation='Sum' name='[sum:landings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sighted_date]' derivation='Day-Trunc' name='[tdy:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997001217]' derivation='User' name='[usr:Calculation_417990356997001217:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone7&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j5-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j7-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-note5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-vivo-v5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-nice-number&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;fb&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;kd&quot;</bucket>
              <bucket>&quot;pt&quot;</bucket>
              <bucket>&quot;fb&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]' field-type='quantitative' max='0.29999999999999999' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' value='10' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
          <pane id='6' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
          <pane id='7' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk] + [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]))</rows>
        <cols>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk] * [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[tdy:sighted_date:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Optimization Results'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
            </column>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[sighted_date]' derivation='None' name='[none:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[sighted_date]' derivation='Day-Trunc' name='[tdy:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356996841472]' derivation='User' name='[usr:Calculation_417990356996841472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803309057]' derivation='User' name='[usr:Calculation_855683945803309057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mgm&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone-se&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone7&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j5-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j7-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-note5&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;mnp-samsung-galaxy-j2-prime&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-j5-prime&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-j7-prime&quot;</bucket>
              <bucket>&quot;mnp-asus-zenfone-55&quot;</bucket>
              <bucket>&quot;mnp-huawei-mate9&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-note5&quot;</bucket>
              <bucket>&quot;mnp-huawei-p9&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]' field-type='quantitative' max='0.02' min='-0.0044673539518900341' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='3' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk] * ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk] + [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]))))</rows>
        <cols>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk] * [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[tdy:sighted_date:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Pantip Room Performance by Offer'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='CPM' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[CPSubmit (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [pt_cat]=&apos;cat1&apos; then 250/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat3&apos; then 200/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat6&apos; then 120/35&#13;&#10;ELSE 3&#13;&#10;END' />
            </column>
            <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
            </column>
            <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([submits])/sum([landings])' />
            </column>
            <column caption='CPSubmit' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_417990356997468162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([imps])/1000)/sum([submits])*MAX([CPSubmit (copy 2)])' />
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_544935571523895296]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='index()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
            </column>
            <column datatype='string' name='[Room Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[room_name]'>
                <bin value='&quot;amulet&quot;'>
                  <value>&quot;amulet&quot;</value>
                  <value>&quot;amuletbang&quot;</value>
                  <value>&quot;amuletpathumthani&quot;</value>
                  <value>&quot;amuletphra&quot;</value>
                  <value>&quot;amuletphrae&quot;</value>
                  <value>&quot;amuletprachinburip&quot;</value>
                  <value>&quot;amuletrayong&quot;</value>
                  <value>&quot;amuletsi&quot;</value>
                  <value>&quot;amuletsingburip&quot;</value>
                  <value>&quot;amuletwrap&quot;</value>
                </bin>
                <bin value='&quot;astina&quot;'>
                  <value>&quot;astina&quot;</value>
                  <value>&quot;auto&quot;</value>
                  <value>&quot;auto_part&quot;</value>
                  <value>&quot;autobangkok_metropolitanp&quot;</value>
                  <value>&quot;autoburiram&quot;</value>
                  <value>&quot;autochachoengsao&quot;</value>
                  <value>&quot;autochiangrai&quot;</value>
                  <value>&quot;autocontextual&quot;</value>
                  <value>&quot;autokalasinp&quot;</value>
                  <value>&quot;autokanchanaburi&quot;</value>
                  <value>&quot;autokhonkaen&quot;</value>
                  <value>&quot;autokhonkaenp&quot;</value>
                  <value>&quot;autoloei&quot;</value>
                  <value>&quot;automahasarakham&quot;</value>
                  <value>&quot;autonakhonpathom&quot;</value>
                  <value>&quot;autonakhonphanom&quot;</value>
                  <value>&quot;autonakhonphanomp&quot;</value>
                  <value>&quot;autonakhonratchasima&quot;</value>
                  <value>&quot;autonakhonsawan&quot;</value>
                  <value>&quot;autonakhonsithammarat&quot;</value>
                  <value>&quot;autonongbualamphu&quot;</value>
                  <value>&quot;autopattanip&quot;</value>
                  <value>&quot;autophetchabun&quot;</value>
                  <value>&quot;autophichit&quot;</value>
                  <value>&quot;autophitsanulok&quot;</value>
                  <value>&quot;autorayong&quot;</value>
                  <value>&quot;autosakonnakhon&quot;</value>
                  <value>&quot;autosaraburi&quot;</value>
                  <value>&quot;autosisaket&quot;</value>
                  <value>&quot;autosongkhla&quot;</value>
                  <value>&quot;autosukhothai&quot;</value>
                  <value>&quot;autosuphanburi&quot;</value>
                  <value>&quot;autosuratthani&quot;</value>
                  <value>&quot;autosurin&quot;</value>
                  <value>&quot;autotak&quot;</value>
                  <value>&quot;autothanyaburip&quot;</value>
                  <value>&quot;autoudonthani&quot;</value>
                  <value>&quot;autowrap&quot;</value>
                  <value>&quot;car&quot;</value>
                  <value>&quot;car_parts&quot;</value>
                  <value>&quot;cyclone&quot;</value>
                  <value>&quot;strada&quot;</value>
                </bin>
                <bin value='&quot;bicycles&quot;'>
                  <value>&quot;bicycles&quot;</value>
                  <value>&quot;bicyclesbangkok&quot;</value>
                  <value>&quot;bicycleskanchanaburi&quot;</value>
                  <value>&quot;bicycleskrabi&quot;</value>
                  <value>&quot;bicycleslamphun&quot;</value>
                  <value>&quot;bicyclessamutsakhon&quot;</value>
                  <value>&quot;bicyclessongkhla&quot;</value>
                  <value>&quot;bicyclessuratthani&quot;</value>
                  <value>&quot;bicyclesubonratchathani&quot;</value>
                </bin>
                <bin value='&quot;business_for_sale&quot;'>
                  <value>&quot;business_for_sale&quot;</value>
                  <value>&quot;business_service&quot;</value>
                </bin>
                <bin value='&quot;computer&quot;'>
                  <value>&quot;computer&quot;</value>
                  <value>&quot;computerkhonkaen&quot;</value>
                  <value>&quot;computerprachuapkhirikhan&quot;</value>
                </bin>
                <bin value='&quot;electric&quot;'>
                  <value>&quot;electric&quot;</value>
                  <value>&quot;electricnakhonsawan&quot;</value>
                  <value>&quot;electricphitsanulok&quot;</value>
                  <value>&quot;electricratchaburi&quot;</value>
                  <value>&quot;electricubonratchathani&quot;</value>
                </bin>
                <bin value='&quot;lifestyle&quot;'>
                  <value>&quot;lifestyle&quot;</value>
                  <value>&quot;lifestyle..&quot;</value>
                </bin>
                <bin value='&quot;mom_and_kid&quot;'>
                  <value>&quot;mom_and_kid&quot;</value>
                  <value>&quot;mom_and_kidsongkhla&quot;</value>
                </bin>
                <bin value='&quot;pet&quot;'>
                  <value>&quot;pet&quot;</value>
                  <value>&quot;petkanchanaburi&quot;</value>
                  <value>&quot;petkhonkaen&quot;</value>
                  <value>&quot;petnakhonratchasima&quot;</value>
                  <value>&quot;petphetchabun&quot;</value>
                </bin>
                <bin value='&quot;phone_device&quot;'>
                  <value>&quot;phone_device&quot;</value>
                  <value>&quot;phone_devicenakhonratchasima&quot;</value>
                  <value>&quot;phone_devicesongkhla&quot;</value>
                </bin>
                <bin value='&quot;realestate&quot;'>
                  <value>&quot;realestate&quot;</value>
                  <value>&quot;realestateayutthaya&quot;</value>
                  <value>&quot;realestatebangkok&quot;</value>
                  <value>&quot;realestateburiram&quot;</value>
                  <value>&quot;realestatechachoengsao&quot;</value>
                  <value>&quot;realestatechaiyaphum&quot;</value>
                  <value>&quot;realestatechiang&quot;</value>
                  <value>&quot;realestatechiangmai&quot;</value>
                  <value>&quot;realestatechiangrai&quot;</value>
                  <value>&quot;realestatechonburi&quot;</value>
                  <value>&quot;realestatecontextual&quot;</value>
                  <value>&quot;realestatekanchanaburi&quot;</value>
                  <value>&quot;realestatekhonkaen&quot;</value>
                  <value>&quot;realestatekrabi&quot;</value>
                  <value>&quot;realestatelopburi&quot;</value>
                  <value>&quot;realestatenakhonratchasima&quot;</value>
                  <value>&quot;realestatenakhonsawan&quot;</value>
                  <value>&quot;realestatenakhonsithammarat&quot;</value>
                  <value>&quot;realestatenonthaburi&quot;</value>
                  <value>&quot;realestatepathumthani&quot;</value>
                  <value>&quot;realestatephangnga&quot;</value>
                  <value>&quot;realestatephayao&quot;</value>
                  <value>&quot;realestatephetchabun&quot;</value>
                  <value>&quot;realestatephichit&quot;</value>
                  <value>&quot;realestatephuket&quot;</value>
                  <value>&quot;realestateprachinburi&quot;</value>
                  <value>&quot;realestateratchaburi&quot;</value>
                  <value>&quot;realestaterayong&quot;</value>
                  <value>&quot;realestatesakaeo&quot;</value>
                  <value>&quot;realestatesakonnakhon&quot;</value>
                  <value>&quot;realestatesamutprakan&quot;</value>
                  <value>&quot;realestatesamutsakhon&quot;</value>
                  <value>&quot;realestatesaraburi&quot;</value>
                  <value>&quot;realestatesongkhla&quot;</value>
                  <value>&quot;realestatesuratthani&quot;</value>
                  <value>&quot;realestatesurin&quot;</value>
                  <value>&quot;realestateubonratchathani&quot;</value>
                  <value>&quot;realestateudonthani&quot;</value>
                  <value>&quot;realestateuthaithani&quot;</value>
                  <value>&quot;realestatewrap&quot;</value>
                </bin>
                <bin value='&quot;shoes&quot;'>
                  <value>&quot;shoes&quot;</value>
                  <value>&quot;shoesnakhonsithammarat&quot;</value>
                  <value>&quot;shoesphuket&quot;</value>
                  <value>&quot;shoessongkhla&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;amulet&quot;' value='amulet' />
                <alias key='&quot;astina&quot;' value='auto' />
                <alias key='&quot;bicycles&quot;' value='bicycles' />
                <alias key='&quot;business_for_sale&quot;' value='business_service' />
                <alias key='&quot;computer&quot;' value='computer' />
                <alias key='&quot;electric&quot;' value='electric' />
                <alias key='&quot;lifestyle&quot;' value='lifestyle' />
                <alias key='&quot;mom_and_kid&quot;' value='mom_and_kid' />
                <alias key='&quot;pet&quot;' value='pet' />
                <alias key='&quot;phone_device&quot;' value='phone_device' />
                <alias key='&quot;realestate&quot;' value='realestate' />
                <alias key='&quot;shoes&quot;' value='shoes' />
              </aliases>
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
            <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[room_name]' derivation='None' name='[none:room_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[sighted_date]' derivation='None' name='[none:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Pt Cat' datatype='string' name='[pt_cat]' role='dimension' type='nominal' />
            <column caption='Room Name' datatype='string' name='[room_name]' role='dimension' type='nominal' />
            <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[clicks]' derivation='Sum' name='[sum:clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[imps]' derivation='Sum' name='[sum:imps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[landings]' derivation='Sum' name='[sum:landings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_417990356996841472]' derivation='User' name='[usr:Calculation_417990356996841472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997001217]' derivation='User' name='[usr:Calculation_417990356997001217:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997468162]' derivation='User' name='[usr:Calculation_417990356997468162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_544935571523895296]' derivation='User' name='[usr:Calculation_544935571523895296:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' />
            </column-instance>
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803309057]' derivation='User' name='[usr:Calculation_855683945803309057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Room Name (Combined)]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Room Name (group)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;accessories&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;agriculture&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;cate&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;l&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;land&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;m\%20frontier\%20navara&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;pra_kru&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;talisman&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;watchp&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone7&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j5-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j7-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-note5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-vivo-v5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-nice-number&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:offer:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;booster&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-device-discount-samsung&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;tariff&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]'>
            <groupfilter expression='[Calculation_855683945803128832] &gt; 500' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                <groupfilter function='level-members' level='[none:room_name:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;08&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;2&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;5&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;90&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;97&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;a\%20\%20uto&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]'>
            <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' value='76' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' max='100.0' min='0.20857142857142857' palette='tableau-red-green' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' />
              <text column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk] / [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Room Name (Combined)])</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</cols>
        <subtotals>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Performance by Pantip Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='CPM' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[CPSubmit (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [pt_cat]=&apos;cat1&apos; then 250/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat3&apos; then 200/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat6&apos; then 120/35&#13;&#10;ELSE 3&#13;&#10;END' />
            </column>
            <column caption='Landing Rate' datatype='real' default-format='p0.00%' name='[Calculation_407294330779045888]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([landings])/sum([clicks])' />
            </column>
            <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
            </column>
            <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([submits])/sum([landings])' />
            </column>
            <column caption='CPSubmit' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_417990356997468162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([imps])/1000)/sum([submits])*MAX([CPSubmit (copy 2)])' />
            </column>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
            <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[pt_cat]' derivation='None' name='[none:pt_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[sighted_date]' derivation='None' name='[none:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Pt Cat' datatype='string' name='[pt_cat]' role='dimension' type='nominal' />
            <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[clicks]' derivation='Sum' name='[sum:clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[imps]' derivation='Sum' name='[sum:imps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[landings]' derivation='Sum' name='[sum:landings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_407294330779045888]' derivation='User' name='[usr:Calculation_407294330779045888:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356996841472]' derivation='User' name='[usr:Calculation_417990356996841472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997001217]' derivation='User' name='[usr:Calculation_417990356997001217:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997468162]' derivation='User' name='[usr:Calculation_417990356997468162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803309057]' derivation='User' name='[usr:Calculation_855683945803309057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_407294330779045888:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_407294330779045888:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mgm&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone-se&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone7&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime-v2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j5-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j7-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-note5&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:pt_cat:nk]' />
              <groupfilter function='member' level='[none:pt_cat:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]'>
            <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]' value='52' />
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' value='68' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='35.0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' palette='tableau-red-green' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' />
              <text column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk] / [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk])</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</cols>
        <subtotals>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Performance by Pantip Category Timeline'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
            </column>
            <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([submits])/sum([landings])' />
            </column>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
            <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[pt_cat]' derivation='None' name='[none:pt_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[sighted_date]' derivation='None' name='[none:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Pt Cat' datatype='string' name='[pt_cat]' role='dimension' type='nominal' />
            <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[landings]' derivation='Sum' name='[sum:landings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[sighted_date]' derivation='Day-Trunc' name='[tdy:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356996841472]' derivation='User' name='[usr:Calculation_417990356996841472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997001217]' derivation='User' name='[usr:Calculation_417990356997001217:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803309057]' derivation='User' name='[usr:Calculation_855683945803309057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mgm&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone-se&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone7&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime-v2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j5-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j7-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-note5&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:pt_cat:nk]' />
              <groupfilter function='member' level='[none:pt_cat:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]'>
            <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='3' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='5' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
          <pane id='6' y-axis-name='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk] + ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk] + [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk])))))</rows>
        <cols>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk] * [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[tdy:sighted_date:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Room Perf by Offer Pantip'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='CPM' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[CPSubmit (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [pt_cat]=&apos;cat1&apos; then 250/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat3&apos; then 200/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat6&apos; then 120/35&#13;&#10;ELSE 3&#13;&#10;END' />
            </column>
            <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
            </column>
            <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([submits])/sum([landings])' />
            </column>
            <column caption='CPSubmit' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_417990356997468162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([imps])/1000)/sum([submits])*MAX([CPSubmit (copy 2)])' />
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_544935571523895296]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='index()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
            </column>
            <column datatype='string' name='[Room Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[room_name]'>
                <bin value='&quot;amulet&quot;'>
                  <value>&quot;amulet&quot;</value>
                  <value>&quot;amuletbang&quot;</value>
                  <value>&quot;amuletpathumthani&quot;</value>
                  <value>&quot;amuletphra&quot;</value>
                  <value>&quot;amuletphrae&quot;</value>
                  <value>&quot;amuletprachinburip&quot;</value>
                  <value>&quot;amuletrayong&quot;</value>
                  <value>&quot;amuletsi&quot;</value>
                  <value>&quot;amuletsingburip&quot;</value>
                  <value>&quot;amuletwrap&quot;</value>
                </bin>
                <bin value='&quot;astina&quot;'>
                  <value>&quot;astina&quot;</value>
                  <value>&quot;auto&quot;</value>
                  <value>&quot;auto_part&quot;</value>
                  <value>&quot;autobangkok_metropolitanp&quot;</value>
                  <value>&quot;autoburiram&quot;</value>
                  <value>&quot;autochachoengsao&quot;</value>
                  <value>&quot;autochiangrai&quot;</value>
                  <value>&quot;autocontextual&quot;</value>
                  <value>&quot;autokalasinp&quot;</value>
                  <value>&quot;autokanchanaburi&quot;</value>
                  <value>&quot;autokhonkaen&quot;</value>
                  <value>&quot;autokhonkaenp&quot;</value>
                  <value>&quot;autoloei&quot;</value>
                  <value>&quot;automahasarakham&quot;</value>
                  <value>&quot;autonakhonpathom&quot;</value>
                  <value>&quot;autonakhonphanom&quot;</value>
                  <value>&quot;autonakhonphanomp&quot;</value>
                  <value>&quot;autonakhonratchasima&quot;</value>
                  <value>&quot;autonakhonsawan&quot;</value>
                  <value>&quot;autonakhonsithammarat&quot;</value>
                  <value>&quot;autonongbualamphu&quot;</value>
                  <value>&quot;autopattanip&quot;</value>
                  <value>&quot;autophetchabun&quot;</value>
                  <value>&quot;autophichit&quot;</value>
                  <value>&quot;autophitsanulok&quot;</value>
                  <value>&quot;autorayong&quot;</value>
                  <value>&quot;autosakonnakhon&quot;</value>
                  <value>&quot;autosaraburi&quot;</value>
                  <value>&quot;autosisaket&quot;</value>
                  <value>&quot;autosongkhla&quot;</value>
                  <value>&quot;autosukhothai&quot;</value>
                  <value>&quot;autosuphanburi&quot;</value>
                  <value>&quot;autosuratthani&quot;</value>
                  <value>&quot;autosurin&quot;</value>
                  <value>&quot;autotak&quot;</value>
                  <value>&quot;autothanyaburip&quot;</value>
                  <value>&quot;autoudonthani&quot;</value>
                  <value>&quot;autowrap&quot;</value>
                  <value>&quot;car&quot;</value>
                  <value>&quot;car_parts&quot;</value>
                  <value>&quot;cyclone&quot;</value>
                  <value>&quot;strada&quot;</value>
                </bin>
                <bin value='&quot;bicycles&quot;'>
                  <value>&quot;bicycles&quot;</value>
                  <value>&quot;bicyclesbangkok&quot;</value>
                  <value>&quot;bicycleskanchanaburi&quot;</value>
                  <value>&quot;bicycleskrabi&quot;</value>
                  <value>&quot;bicycleslamphun&quot;</value>
                  <value>&quot;bicyclessamutsakhon&quot;</value>
                  <value>&quot;bicyclessongkhla&quot;</value>
                  <value>&quot;bicyclessuratthani&quot;</value>
                  <value>&quot;bicyclesubonratchathani&quot;</value>
                </bin>
                <bin value='&quot;business_for_sale&quot;'>
                  <value>&quot;business_for_sale&quot;</value>
                  <value>&quot;business_service&quot;</value>
                </bin>
                <bin value='&quot;computer&quot;'>
                  <value>&quot;computer&quot;</value>
                  <value>&quot;computerkhonkaen&quot;</value>
                  <value>&quot;computerprachuapkhirikhan&quot;</value>
                </bin>
                <bin value='&quot;electric&quot;'>
                  <value>&quot;electric&quot;</value>
                  <value>&quot;electricnakhonsawan&quot;</value>
                  <value>&quot;electricphitsanulok&quot;</value>
                  <value>&quot;electricratchaburi&quot;</value>
                  <value>&quot;electricubonratchathani&quot;</value>
                </bin>
                <bin value='&quot;lifestyle&quot;'>
                  <value>&quot;lifestyle&quot;</value>
                  <value>&quot;lifestyle..&quot;</value>
                </bin>
                <bin value='&quot;mom_and_kid&quot;'>
                  <value>&quot;mom_and_kid&quot;</value>
                  <value>&quot;mom_and_kidsongkhla&quot;</value>
                </bin>
                <bin value='&quot;pet&quot;'>
                  <value>&quot;pet&quot;</value>
                  <value>&quot;petkanchanaburi&quot;</value>
                  <value>&quot;petkhonkaen&quot;</value>
                  <value>&quot;petnakhonratchasima&quot;</value>
                  <value>&quot;petphetchabun&quot;</value>
                </bin>
                <bin value='&quot;phone_device&quot;'>
                  <value>&quot;phone_device&quot;</value>
                  <value>&quot;phone_devicenakhonratchasima&quot;</value>
                  <value>&quot;phone_devicesongkhla&quot;</value>
                </bin>
                <bin value='&quot;realestate&quot;'>
                  <value>&quot;realestate&quot;</value>
                  <value>&quot;realestateayutthaya&quot;</value>
                  <value>&quot;realestatebangkok&quot;</value>
                  <value>&quot;realestateburiram&quot;</value>
                  <value>&quot;realestatechachoengsao&quot;</value>
                  <value>&quot;realestatechaiyaphum&quot;</value>
                  <value>&quot;realestatechiang&quot;</value>
                  <value>&quot;realestatechiangmai&quot;</value>
                  <value>&quot;realestatechiangrai&quot;</value>
                  <value>&quot;realestatechonburi&quot;</value>
                  <value>&quot;realestatecontextual&quot;</value>
                  <value>&quot;realestatekanchanaburi&quot;</value>
                  <value>&quot;realestatekhonkaen&quot;</value>
                  <value>&quot;realestatekrabi&quot;</value>
                  <value>&quot;realestatelopburi&quot;</value>
                  <value>&quot;realestatenakhonratchasima&quot;</value>
                  <value>&quot;realestatenakhonsawan&quot;</value>
                  <value>&quot;realestatenakhonsithammarat&quot;</value>
                  <value>&quot;realestatenonthaburi&quot;</value>
                  <value>&quot;realestatepathumthani&quot;</value>
                  <value>&quot;realestatephangnga&quot;</value>
                  <value>&quot;realestatephayao&quot;</value>
                  <value>&quot;realestatephetchabun&quot;</value>
                  <value>&quot;realestatephichit&quot;</value>
                  <value>&quot;realestatephuket&quot;</value>
                  <value>&quot;realestateprachinburi&quot;</value>
                  <value>&quot;realestateratchaburi&quot;</value>
                  <value>&quot;realestaterayong&quot;</value>
                  <value>&quot;realestatesakaeo&quot;</value>
                  <value>&quot;realestatesakonnakhon&quot;</value>
                  <value>&quot;realestatesamutprakan&quot;</value>
                  <value>&quot;realestatesamutsakhon&quot;</value>
                  <value>&quot;realestatesaraburi&quot;</value>
                  <value>&quot;realestatesongkhla&quot;</value>
                  <value>&quot;realestatesuratthani&quot;</value>
                  <value>&quot;realestatesurin&quot;</value>
                  <value>&quot;realestateubonratchathani&quot;</value>
                  <value>&quot;realestateudonthani&quot;</value>
                  <value>&quot;realestateuthaithani&quot;</value>
                  <value>&quot;realestatewrap&quot;</value>
                </bin>
                <bin value='&quot;shoes&quot;'>
                  <value>&quot;shoes&quot;</value>
                  <value>&quot;shoesnakhonsithammarat&quot;</value>
                  <value>&quot;shoesphuket&quot;</value>
                  <value>&quot;shoessongkhla&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;amulet&quot;' value='amulet' />
                <alias key='&quot;astina&quot;' value='auto' />
                <alias key='&quot;bicycles&quot;' value='bicycles' />
                <alias key='&quot;business_for_sale&quot;' value='business_service' />
                <alias key='&quot;computer&quot;' value='computer' />
                <alias key='&quot;electric&quot;' value='electric' />
                <alias key='&quot;lifestyle&quot;' value='lifestyle' />
                <alias key='&quot;mom_and_kid&quot;' value='mom_and_kid' />
                <alias key='&quot;pet&quot;' value='pet' />
                <alias key='&quot;phone_device&quot;' value='phone_device' />
                <alias key='&quot;realestate&quot;' value='realestate' />
                <alias key='&quot;shoes&quot;' value='shoes' />
              </aliases>
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
            <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[room_name]' derivation='None' name='[none:room_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[sighted_date]' derivation='None' name='[none:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Pt Cat' datatype='string' name='[pt_cat]' role='dimension' type='nominal' />
            <column caption='Room Name' datatype='string' name='[room_name]' role='dimension' type='nominal' />
            <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[clicks]' derivation='Sum' name='[sum:clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[imps]' derivation='Sum' name='[sum:imps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[landings]' derivation='Sum' name='[sum:landings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_417990356996841472]' derivation='User' name='[usr:Calculation_417990356996841472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997001217]' derivation='User' name='[usr:Calculation_417990356997001217:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997468162]' derivation='User' name='[usr:Calculation_417990356997468162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_544935571523895296]' derivation='User' name='[usr:Calculation_544935571523895296:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' />
            </column-instance>
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803309057]' derivation='User' name='[usr:Calculation_855683945803309057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Room Name (Combined)]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Room Name (group)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;accessories&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;agriculture&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;cate&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;l&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;land&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;m\%20frontier\%20navara&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;pra_kru&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;talisman&quot;' />
                <groupfilter function='member' level='[Room Name (group)]' member='&quot;watchp&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone7&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j5-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j7-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-note5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-vivo-v5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-nice-number&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]'>
            <groupfilter expression='[Calculation_855683945803128832] &gt; 500' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                <groupfilter function='level-members' level='[none:room_name:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;08&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;2&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;5&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;90&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;97&quot;' />
                  <groupfilter function='member' level='[none:room_name:nk]' member='&quot;a\%20\%20uto&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:room_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:room_name:nk]' member='%null%' />
                <groupfilter function='member' level='[none:room_name:nk]' member='&quot;all&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]'>
            <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' max='30.0' min='0.20857142857142857' palette='tableau-red-green' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' />
              <text column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk] / [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Room Name (Combined)])</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</cols>
        <subtotals>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Running Total of Submit by #Impressions Before Click'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column datatype='integer' name='[Impb4Click (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[impb4click]'>
                <bin value='16'>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>32</value>
                  <value>34</value>
                  <value>35</value>
                  <value>36</value>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>43</value>
                  <value>46</value>
                  <value>47</value>
                  <value>49</value>
                  <value>50</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                  <value>61</value>
                  <value>64</value>
                  <value>65</value>
                  <value>67</value>
                  <value>68</value>
                  <value>80</value>
                  <value>83</value>
                  <value>223</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='16' value='&gt; 15' />
              </aliases>
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Impb4Click' datatype='integer' name='[impb4click]' role='measure' type='quantitative' />
            <column-instance column='[clicks]' derivation='None' name='[none:clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[impb4click]' derivation='None' name='[none:impb4click:qk]' pivot='key' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[sighted_date]' derivation='None' name='[none:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column-instance column='[submits]' derivation='Sum' name='[pcto:cum:sum:submits:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Exclusions (Impb4Click,Offer)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:impb4click:qk]' />
                <groupfilter function='level-members' level='[none:offer:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:impb4click:qk]' member='236' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-oppo-mirror5&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impb4Click (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Impb4Click (group)]' />
              <groupfilter function='member' level='[Impb4Click (group)]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:clicks:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone7&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j5-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j7-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-note5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-vivo-v5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-nice-number&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;fb&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:clicks:qk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Exclusions (Impb4Click,Offer)]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impb4Click (group)]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impb4Click (group)]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk] * [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[pcto:cum:sum:submits:qk])</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impb4Click (group)]</cols>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Sheet 18'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='CPM' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[CPSubmit (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [pt_cat]=&apos;cat1&apos; then 250/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat3&apos; then 200/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat6&apos; then 120/35&#13;&#10;ELSE 3&#13;&#10;END' />
            </column>
            <column caption='Landing Rate' datatype='real' default-format='p0.00%' name='[Calculation_407294330779045888]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([landings])/sum([clicks])' />
            </column>
            <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
            </column>
            <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([submits])/sum([landings])' />
            </column>
            <column caption='CPSubmit' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_417990356997468162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([imps])/1000)/sum([submits])*MAX([CPSubmit (copy 2)])' />
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_544935571523895296]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='index()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Dvc Commercname' datatype='string' name='[dvc_commercname]' role='dimension' type='nominal' />
            <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
            <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[pt_cat]' derivation='None' name='[none:pt_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[sighted_date]' derivation='None' name='[none:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Pt Cat' datatype='string' name='[pt_cat]' role='dimension' type='nominal' />
            <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[clicks]' derivation='Sum' name='[sum:clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[imps]' derivation='Sum' name='[sum:imps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[landings]' derivation='Sum' name='[sum:landings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_407294330779045888]' derivation='User' name='[usr:Calculation_407294330779045888:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356996841472]' derivation='User' name='[usr:Calculation_417990356996841472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997001217]' derivation='User' name='[usr:Calculation_417990356997001217:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997468162]' derivation='User' name='[usr:Calculation_417990356997468162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_544935571523895296]' derivation='User' name='[usr:Calculation_544935571523895296:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' />
            </column-instance>
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803309057]' derivation='User' name='[usr:Calculation_855683945803309057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_407294330779045888:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_407294330779045888:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]'>
            <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j5-prime&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:pt_cat:nk]' />
              <groupfilter function='member' level='[none:pt_cat:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]'>
            <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]' value='52' />
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' value='68' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='35.0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' palette='tableau-red-green' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' />
              <text column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk] / ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk] / [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]))</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</cols>
        <subtotals>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Sheet 19'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='CPM' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[CPSubmit (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [pt_cat]=&apos;cat1&apos; then 250/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat3&apos; then 200/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat6&apos; then 120/35&#13;&#10;ELSE 3&#13;&#10;END' />
            </column>
            <column caption='Landing Rate' datatype='real' default-format='p0.00%' name='[Calculation_407294330779045888]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([landings])/sum([clicks])' />
            </column>
            <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
            </column>
            <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([submits])/sum([landings])' />
            </column>
            <column caption='CPSubmit' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_417990356997468162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([imps])/1000)/sum([submits])*MAX([CPSubmit (copy 2)])' />
            </column>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Dvc Commercname' datatype='string' name='[dvc_commercname]' role='dimension' type='nominal' />
            <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
            <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[pt_cat]' derivation='None' name='[none:pt_cat:nk]' pivot='key' type='nominal' />
            <column-instance column='[sighted_date]' derivation='None' name='[none:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Pt Cat' datatype='string' name='[pt_cat]' role='dimension' type='nominal' />
            <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[clicks]' derivation='Sum' name='[sum:clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[imps]' derivation='Sum' name='[sum:imps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[landings]' derivation='Sum' name='[sum:landings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_407294330779045888]' derivation='User' name='[usr:Calculation_407294330779045888:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356996841472]' derivation='User' name='[usr:Calculation_417990356996841472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997001217]' derivation='User' name='[usr:Calculation_417990356997001217:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997468162]' derivation='User' name='[usr:Calculation_417990356997468162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803309057]' derivation='User' name='[usr:Calculation_855683945803309057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_407294330779045888:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_407294330779045888:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]'>
            <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j5-prime&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:pt_cat:nk]' />
              <groupfilter function='member' level='[none:pt_cat:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]'>
            <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]' value='52' />
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' value='68' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='35.0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' palette='tableau-red-green' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' />
              <text column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk] / ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk] / [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]))</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</cols>
        <subtotals>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Submitter Device Release Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Release Price (thb)' datatype='integer' name='[Release Price (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[release_price]*40' />
            </column>
            <column caption='Release Price (thb) (bin)' datatype='integer' name='[Release Price (thb) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='3' formula='[Release Price (copy)]' peg='0' size='2000' />
            </column>
            <column caption='Dvc Commercname' datatype='string' name='[dvc_commercname]' role='dimension' type='nominal' />
            <column-instance column='[dvc_commercname]' derivation='None' name='[none:dvc_commercname:nk]' pivot='key' type='nominal' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[sighted_date]' derivation='None' name='[none:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[submits]' derivation='None' name='[none:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Release Price' datatype='integer' datatype-customized='true' name='[release_price]' role='dimension' type='ordinal' />
            <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:dvc_commercname:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:dvc_commercname:nk]' />
              <groupfilter function='member' level='[none:dvc_commercname:nk]' member='&quot;COMPUTER&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone7&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j5-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j7-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-note5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-vivo-v5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-nice-number&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:offer:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;iphone-discount&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-device-discount-samsung&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-free-device&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;tariff&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;mnp-iphone-se&quot;</bucket>
              <bucket>&quot;mnp-free-dtac-pocket-wifi&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-j2&quot;</bucket>
              <bucket>&quot;mnp-asus-zenfone-45&quot;</bucket>
              <bucket>&quot;mnp-oppo-mirror5&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-j5&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-a5&quot;</bucket>
              <bucket>&quot;mnp-device-clearance&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;fb&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:submits:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:submits:qk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:dvc_commercname:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk] * [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk])</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Release Price (thb) (bin)]</cols>
        <show-full-range>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Release Price (thb) (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Submitter Device Release Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column datatype='string' name='[Release Year (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[release_year]'>
                <bin value='&quot;2016&quot;'>
                  <value>&quot;2016&quot;</value>
                  <value>&quot;22016&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;2016&quot;' value='2016' />
              </aliases>
            </column>
            <column caption='Hl Platform' datatype='string' name='[hl_platform]' role='dimension' type='nominal' />
            <column-instance column='[hl_platform]' derivation='None' name='[none:hl_platform:nk]' pivot='key' type='nominal' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[sighted_date]' derivation='None' name='[none:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[submits]' derivation='None' name='[none:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Release Year' datatype='string' name='[release_year]' role='dimension' type='nominal' />
            <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:hl_platform:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:hl_platform:nk]' member='&quot;ANDROID&quot;' />
              <groupfilter function='member' level='[none:hl_platform:nk]' member='&quot;IPHONE&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone7&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j5-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j7-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-note5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-vivo-v5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-nice-number&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:offer:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;iphone-discount&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-device-discount-samsung&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-free-device&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;tariff&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;mnp-iphone-se&quot;</bucket>
              <bucket>&quot;mnp-free-dtac-pocket-wifi&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-j2&quot;</bucket>
              <bucket>&quot;mnp-asus-zenfone-45&quot;</bucket>
              <bucket>&quot;mnp-oppo-mirror5&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-j5&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-a5&quot;</bucket>
              <bucket>&quot;mnp-device-clearance&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;fb&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:submits:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:submits:qk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:hl_platform:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk] * [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk])</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Release Year (group)]</cols>
        <show-full-range>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Release Price (thb) (bin)]</column>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Screensize (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Submitter Device Screen Size'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Screensize (bin)' datatype='integer' name='[Screensize (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[screensize]' peg='0' size='1' />
            </column>
            <column caption='Hl Platform' datatype='string' name='[hl_platform]' role='dimension' type='nominal' />
            <column-instance column='[hl_platform]' derivation='None' name='[none:hl_platform:nk]' pivot='key' type='nominal' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[sighted_date]' derivation='None' name='[none:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[submits]' derivation='None' name='[none:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[pcto:usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Screensize' datatype='integer' datatype-customized='true' name='[screensize]' role='dimension' type='ordinal' />
            <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:hl_platform:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:hl_platform:nk]' member='&quot;ANDROID&quot;' />
              <groupfilter function='member' level='[none:hl_platform:nk]' member='&quot;IPHONE&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone7&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j5-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j7-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-note5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-vivo-v5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-nice-number&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:offer:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;iphone-discount&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-device-discount-samsung&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-free-device&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;tariff&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;mnp-iphone-se&quot;</bucket>
              <bucket>&quot;mnp-free-dtac-pocket-wifi&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-j2&quot;</bucket>
              <bucket>&quot;mnp-asus-zenfone-45&quot;</bucket>
              <bucket>&quot;mnp-oppo-mirror5&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-j5&quot;</bucket>
              <bucket>&quot;mnp-samsung-galaxy-a5&quot;</bucket>
              <bucket>&quot;mnp-device-clearance&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;fb&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:submits:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:submits:qk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:hl_platform:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[pcto:usr:Calculation_855683945803128832:qk]' scope='rows' value='% Reach' />
            <format attr='subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[pcto:usr:Calculation_855683945803128832:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[pcto:usr:Calculation_855683945803128832:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' value='68' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk] * [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[pcto:usr:Calculation_855683945803128832:qk])</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Screensize (bin)]</cols>
        <show-full-range>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Release Price (thb) (bin)]</column>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Screensize (bin)]</column>
        </show-full-range>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Top Submit Device Full Funnel'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Funnel by Offer for Top 10 Submit Devices</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='CPM' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[CPSubmit (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [pt_cat]=&apos;cat1&apos; then 250/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat3&apos; then 200/35&#13;&#10;ELSEIF [pt_cat]=&apos;cat6&apos; then 120/35&#13;&#10;ELSE 3&#13;&#10;END' />
            </column>
            <column caption='CTR' datatype='real' default-format='p0.00%' name='[Calculation_417990356996841472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([clicks])/sum([imps]) end' />
            </column>
            <column caption='Sub2Land' datatype='real' default-format='p0.00%' name='[Calculation_417990356997001217]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([submits])/sum([landings])' />
            </column>
            <column caption='CPSubmit' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_417990356997468162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([imps])/1000)/sum([submits])*MAX([CPSubmit (copy 2)])' />
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_544935571523895296]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='index()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Reach' datatype='integer' name='[Calculation_855683945803128832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([tapad_id])' />
            </column>
            <column caption='Sub2Reach' datatype='real' default-format='p0.000%' name='[Calculation_855683945803309057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if sum([imps])&gt;0 then sum([submits])/[Calculation_855683945803128832] END' />
            </column>
            <column caption='Clicks' datatype='integer' name='[clicks]' role='measure' type='quantitative' />
            <column caption='Dvc Commercname' datatype='string' name='[dvc_commercname]' role='dimension' type='nominal' />
            <column caption='Imps' datatype='integer' name='[imps]' role='measure' type='quantitative' />
            <column caption='Landings' datatype='integer' name='[landings]' role='measure' type='quantitative' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[sighted_date]' derivation='None' name='[none:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Pt Cat' datatype='string' name='[pt_cat]' role='dimension' type='nominal' />
            <column caption='Selects' datatype='integer' name='[selects]' role='measure' type='quantitative' />
            <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[clicks]' derivation='Sum' name='[sum:clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[imps]' derivation='Sum' name='[sum:imps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[landings]' derivation='Sum' name='[sum:landings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[selects]' derivation='Sum' name='[sum:selects:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column caption='Tapad Id' datatype='string' name='[tapad_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_417990356996841472]' derivation='User' name='[usr:Calculation_417990356996841472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997001217]' derivation='User' name='[usr:Calculation_417990356997001217:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_417990356997468162]' derivation='User' name='[usr:Calculation_417990356997468162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_544935571523895296]' derivation='User' name='[usr:Calculation_544935571523895296:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' />
            </column-instance>
            <column-instance column='[Calculation_855683945803128832]' derivation='User' name='[usr:Calculation_855683945803128832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_855683945803309057]' derivation='User' name='[usr:Calculation_855683945803309057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:imps:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803128832:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:clicks:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356996841472:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:selects:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997001217:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_855683945803309057:qk]&quot;</bucket>
              <bucket>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone7&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j5-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j7-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-note5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-vivo-v5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-nice-number&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;fb&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;kd&quot;</bucket>
              <bucket>&quot;pt&quot;</bucket>
              <bucket>&quot;fb&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]' value='78' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' value='68' />
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' value='36' />
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]' value='144' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' max='30.0' palette='tableau-red-green' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' />
              <text column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk] / ([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk] / [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]))</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</cols>
        <subtotals>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
          <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Top Submit Device by Offer'>
      <table>
        <view>
          <datasources>
            <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
            <column caption='Rank' datatype='integer' name='[Calculation_544935571523895296]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='index()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Dvc Commercname' datatype='string' name='[dvc_commercname]' role='dimension' type='nominal' />
            <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
            <column-instance column='[sighted_date]' derivation='None' name='[none:sighted_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;booster&quot;' value='Booster' />
                <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
                <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
                <alias key='&quot;mgm&quot;' value='Mgm' />
                <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
                <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
                <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
                <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
                <alias key='&quot;mnp-free-device&quot;' value='OEM' />
                <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
                <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
                <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
                <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
                <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
                <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
                <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
                <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
                <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
                <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
                <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
                <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
                <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
                <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
                <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
                <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
              </aliases>
            </column>
            <column caption='Sighted Date' datatype='date' datatype-customized='true' name='[sighted_date]' role='dimension' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Submits' datatype='integer' name='[submits]' role='measure' type='quantitative' />
            <column-instance column='[submits]' derivation='Sum' name='[sum:submits:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_544935571523895296]' derivation='User' name='[usr:Calculation_544935571523895296:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' />
            </column-instance>
          </datasource-dependencies>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-asus-zenfone-55&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-mate9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-huawei-p9&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone6-6plus&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone7&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j2-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j5-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-j7-prime&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-samsung-galaxy-note5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-vivo-v5&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-nice-number&quot;' />
              <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-platinum-number&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:offer:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;lucky-number&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mgm&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone-se&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;mnp-iphone7&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-nice-number&quot;' />
                <groupfilter function='member' level='[none:offer:nk]' member='&quot;sim-platinum-number&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' direction='DESC' using='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]' />
          <filter class='categorical' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;fb&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;kd&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;pt&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>6</max>
          </filter>
          <slices>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]</column>
            <column>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]' value='156' />
            <format attr='width' field='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' value='68' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='308' />
                <format attr='maxwidth' value='308' />
                <format attr='minheight' value='680' />
                <format attr='maxheight' value='680' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk] / [hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)])</rows>
        <cols>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:submits:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='All Offer Timeline and Funnel DB'>
      <style />
      <size maxheight='800' maxwidth='1500' minheight='800' minwidth='1500' />
      <datasources />
      <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='18' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='6' param='horz' type='layout-flow' w='94600' x='0' y='0'>
              <zone h='100000' id='4' type='layout-basic' w='94600' x='0' y='0'>
                <zone h='61375' id='25' name='Funnel by Offer' show-title='true' w='57170' x='37430' y='0' />
                <zone h='100000' id='36' name='Kaidee &amp; Pantip Funnel Timeline' show-title='true' w='37430' x='0' y='0' />
                <zone h='38625' id='38' name='Landing Page Performance' show-title='true' w='57170' x='37430' y='61375' />
              </zone>
            </zone>
            <zone fixed-size='81' h='100000' id='17' is-fixed='true' param='vert' type='layout-flow' w='5400' x='94600' y='0'>
              <zone h='1500' id='26' name='Funnel by Offer' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='5400' x='94600' y='0' />
              <zone h='25875' id='37' name='Kaidee &amp; Pantip Funnel Timeline' pane-specification-id='1' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' w='5400' x='94600' y='1500' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Funnel Chart DB'>
      <style />
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' />
      <datasources>
        <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
      </datasources>
      <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
        <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
        <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='86667' x='0' y='0'>
              <zone h='100000' id='1' name='Kaidee &amp; Pantip Funnel Chart' show-title='true' w='86667' x='0' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='13333' x='86667' y='0'>
              <zone h='21375' id='6' name='Kaidee &amp; Pantip Funnel Chart' pane-specification-id='1' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' w='13333' x='86667' y='0' />
              <zone h='15375' id='7' name='Kaidee &amp; Pantip Funnel Chart' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' w='13333' x='86667' y='21375' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Optimal Impression Cap'>
      <style />
      <size maxheight='600' maxwidth='1200' minheight='600' minwidth='1200' />
      <datasources>
        <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
      </datasources>
      <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
        <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
        <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;booster&quot;' value='Booster' />
            <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
            <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
            <alias key='&quot;mgm&quot;' value='Mgm' />
            <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
            <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
            <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
            <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
            <alias key='&quot;mnp-free-device&quot;' value='OEM' />
            <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
            <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
            <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
            <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
            <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
            <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
            <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
            <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
            <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
            <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
            <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
            <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
            <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
            <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
            <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
            <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
            <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
          </aliases>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='6' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='4' type='layout-basic' w='86667' x='0' y='0'>
              <zone h='100000' id='1' name='Running Total of Submit by #Impressions Before Click' show-title='true' w='48773' x='0' y='0' />
              <zone h='100000' id='8' name='Day Difference between 1st Click &amp; 1st Impression' show-title='true' w='37894' x='48773' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='5' is-fixed='true' param='vert' type='layout-flow' w='13333' x='86667' y='0'>
              <zone h='9501' id='7' mode='checkdropdown' name='Running Total of Submit by #Impressions Before Click' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' w='13333' x='86667' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Pantip Kaidee Room Perf DB'>
      <style />
      <size maxheight='900' maxwidth='1100' minheight='900' minwidth='1100' />
      <zones>
        <zone h='100000' id='25' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='28' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='26' type='layout-basic' w='91364' x='0' y='0'>
              <zone h='100000' id='24' name='Kaidee Pantip Room Performance' show-title='true' w='91364' x='0' y='0' />
            </zone>
            <zone fixed-size='95' h='100000' id='27' is-fixed='true' param='vert' type='layout-flow' w='8636' x='91364' y='0'>
              <zone h='7665' id='31' name='Kaidee Pantip Room Performance' pane-specification-id='0' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' type='color' w='8636' x='91364' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Pantip Kaidee Room Perf by Offer DB'>
      <style />
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' />
      <datasources>
        <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
      </datasources>
      <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
        <column caption='Rank' datatype='integer' name='[Calculation_544935571523895296]' role='measure' type='ordinal'>
          <calculation class='tableau' formula='index()'>
            <table-calc ordering-type='Rows' />
          </calculation>
        </column>
        <column-instance column='[Calculation_544935571523895296]' derivation='User' name='[usr:Calculation_544935571523895296:qk:2]' pivot='key' type='quantitative'>
          <table-calc ordering-type='ColumnInPane' />
        </column-instance>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='86667' x='0' y='0'>
              <zone h='100000' id='29' name='Pantip Room Performance by Offer' show-title='true' w='86667' x='0' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='13333' x='86667' y='0'>
              <zone h='9250' id='30' name='Pantip Room Performance by Offer' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]' show-domain='false' show-null-ctrls='false' type='filter' w='13333' x='86667' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Pantip Room Perf by Offer DB'>
      <style />
      <size maxheight='900' maxwidth='1100' minheight='900' minwidth='1100' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99636' x='0' y='0'>
              <zone h='100000' id='1' name='Room Perf by Offer Pantip' show-title='true' w='99636' x='0' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Perf by Pantip Category'>
      <style />
      <size maxheight='800' maxwidth='1500' minheight='800' minwidth='1500' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='93867' x='0' y='0'>
              <zone h='100000' id='1' name='Performance by Pantip Category Timeline' show-title='true' w='36519' x='0' y='0' />
              <zone h='100000' id='13' name='Performance by Pantip Category' show-title='true' w='57348' x='36519' y='0' />
            </zone>
            <zone fixed-size='92' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='6133' x='93867' y='0'>
              <zone h='23875' id='8' name='Performance by Pantip Category Timeline' pane-specification-id='1' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' w='6133' x='93867' y='0' />
              <zone h='8125' id='16' name='Performance by Pantip Category' pane-specification-id='0' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' type='color' w='6133' x='93867' y='23875' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Submitter Device Charact DB'>
      <style />
      <size maxheight='800' maxwidth='1300' minheight='800' minwidth='1300' />
      <datasources />
      <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='89846' x='0' y='0'>
              <zone h='100000' id='7' name='Submitter Device Release Price' show-title='true' w='34993' x='0' y='0' />
              <zone h='100000' id='11' name='Submitter Device Release Year' show-title='true' w='30579' x='34993' y='0' />
              <zone h='100000' id='13' name='Submitter Device Screen Size' show-title='true' w='24274' x='65572' y='0' />
            </zone>
            <zone fixed-size='132' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='10154' x='89846' y='0'>
              <zone h='1500' id='9' name='Submitter Device Release Price' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]' type='filter' w='10154' x='89846' y='0' />
              <zone h='15875' id='12' name='Submitter Device Release Year' pane-specification-id='0' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' w='10154' x='89846' y='1500' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Top Device Performance DB'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' />
      <datasources>
        <datasource caption='meas_agreg_byday (meas_ana.meas_agreg_byday) (meas_ana)' name='hadoophive.19o4tht1fnberc1e809gq0zqtog0' />
      </datasources>
      <datasource-dependencies datasource='hadoophive.19o4tht1fnberc1e809gq0zqtog0'>
        <column caption='Rank' datatype='integer' name='[Calculation_544935571523895296]' role='measure' type='ordinal'>
          <calculation class='tableau' formula='index()'>
            <table-calc ordering-type='Rows' />
          </calculation>
        </column>
        <column-instance column='[offer]' derivation='None' name='[none:offer:nk]' pivot='key' type='nominal' />
        <column caption='Offer' datatype='string' name='[offer]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;booster&quot;' value='Booster' />
            <alias key='&quot;iphone-discount&quot;' value='IPh 6' />
            <alias key='&quot;lucky-number&quot;' value='Lucky-number' />
            <alias key='&quot;mgm&quot;' value='Mgm' />
            <alias key='&quot;mnp-asus-zenfone-45&quot;' value='Zf 45' />
            <alias key='&quot;mnp-asus-zenfone-55&quot;' value='Zf 55' />
            <alias key='&quot;mnp-device-clearance&quot;' value='Clearance' />
            <alias key='&quot;mnp-device-discount-samsung&quot;' value='S6' />
            <alias key='&quot;mnp-free-device&quot;' value='OEM' />
            <alias key='&quot;mnp-free-dtac-phone-s2&quot;' value='Dtac S2' />
            <alias key='&quot;mnp-free-dtac-pocket-wifi&quot;' value='Poc Wi' />
            <alias key='&quot;mnp-huawei-mate9&quot;' value='Mate9' />
            <alias key='&quot;mnp-huawei-p9&quot;' value='P9' />
            <alias key='&quot;mnp-iphone-se&quot;' value='IPh SE' />
            <alias key='&quot;mnp-iphone6-6plus&quot;' value='Iphone6-6plus' />
            <alias key='&quot;mnp-iphone7&quot;' value='Iphone7' />
            <alias key='&quot;mnp-oppo-mirror5&quot;' value='Oppo Mir' />
            <alias key='&quot;mnp-samsung-galaxy-a5&quot;' value='A5' />
            <alias key='&quot;mnp-samsung-galaxy-j2&quot;' value='J2' />
            <alias key='&quot;mnp-samsung-galaxy-j2-prime&quot;' value='J2-prime' />
            <alias key='&quot;mnp-samsung-galaxy-j5&quot;' value='J5' />
            <alias key='&quot;mnp-samsung-galaxy-j5-prime&quot;' value='J5-prime' />
            <alias key='&quot;mnp-samsung-galaxy-j7-prime&quot;' value='J7-prime' />
            <alias key='&quot;mnp-samsung-galaxy-note5&quot;' value='Note5' />
            <alias key='&quot;sim-nice-number&quot;' value='Nice-number' />
            <alias key='&quot;sim-platinum-number&quot;' value='Platinum-number' />
          </aliases>
        </column>
        <column-instance column='[Calculation_544935571523895296]' derivation='User' name='[usr:Calculation_544935571523895296:qk:2]' pivot='key' type='quantitative'>
          <table-calc ordering-type='ColumnInPane' />
        </column-instance>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='42' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='32' param='horz' type='layout-flow' w='94812' x='0' y='0'>
              <zone h='100000' id='5' param='horz' type='layout-flow' w='94812' x='0' y='0'>
                <zone h='100000' id='3' type='layout-basic' w='94812' x='0' y='0'>
                  <zone h='100000' id='29' name='Top Submit Device Full Funnel' show-title='true' w='59408' x='0' y='0' />
                  <zone h='100000' id='40' name='Top Submit Device by Offer' show-title='true' w='35404' x='59408' y='0' />
                </zone>
              </zone>
            </zone>
            <zone fixed-size='83' h='100000' id='41' is-fixed='true' param='vert' type='layout-flow' w='5188' x='94812' y='0'>
              <zone h='6332' id='43' mode='checkdropdown' name='Top Submit Device by Offer' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' w='5188' x='94812' y='0' />
              <zone h='7777' id='44' name='Top Submit Device by Offer' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]' show-domain='false' show-null-ctrls='false' type='filter' w='5188' x='94812' y='6332' />
              <zone h='9666' id='46' name='Top Submit Device by Offer' pane-specification-id='2' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='color' w='5188' x='94812' y='14109' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='33'>
    <window class='worksheet' name='Kaidee &amp; Pantip Funnel Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
            <card mode='checkdropdown' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Funnel by Offer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:ful_channel:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Top Submit Device Full Funnel'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='2' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:ful_channel:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Kaidee Pantip Room Performance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Room Name (Combined)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[mn:sight_date:ok]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:dvc_commercname:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[yr:sight_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Pantip Room Performance by Offer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='1' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Room Name (Combined)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[mn:sight_date:ok]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:dvc_commercname:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[yr:sight_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Room Perf by Offer Pantip'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Room Name (Combined)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Room Name (group)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[mn:sight_date:ok]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:dvc_commercname:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:room_name:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[yr:sight_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top Submit Device by Offer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_544935571523895296:qk:2]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[mn:sight_date:ok]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:dvc_commercname:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[yr:sight_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Submitter Device Release Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Release Price (thb) (bin)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Release Year (group)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:dvc_commercname:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:submits:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Submitter Device Release Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Release Price (thb) (bin)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:hl_platform:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:release_year:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:submits:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Submitter Device Screen Size'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Release Price (thb) (bin)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Screensize (bin)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:hl_platform:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:release_year:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:submits:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Running Total of Submit by #Impressions Before Click'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impb4Click (group) (copy)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impb4Click (group)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:clicks:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Day Difference between 1st Click &amp; 1st Impression'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impb4Click (group)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Impclick Daydif (group)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:clicks:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Kaidee &amp; Pantip Funnel Timeline'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:ok]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[yr:sight_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Performance by Pantip Category Timeline'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:ok]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[yr:sight_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Performance by Pantip Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:carrier:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:ok]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[yr:sight_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 18'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='1' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
            <card mode='dropdown' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:carrier:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:dvc_commercname:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:ok]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[yr:sight_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 19'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='1' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
            <card mode='dropdown' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Offer &amp; Dvc Commercname (Combined)]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:carrier:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:dvc_commercname:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:pt_cat:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:ok]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[yr:sight_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Optimization Results'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='filter' />
            <card param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sighted_date:ok]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[yr:sight_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Landing Page Performance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:sight_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[tdy:sighted_date:qk]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[yr:sight_date:ok]</field>
            <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[yr:sighted_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Funnel Chart DB'>
      <viewpoints>
        <viewpoint name='Kaidee &amp; Pantip Funnel Chart'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='All Offer Timeline and Funnel DB'>
      <viewpoints>
        <viewpoint name='Funnel by Offer'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</field>
                    </x-fields>
                    <y-fields>
                      <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
                      <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
                    <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:source:nk]</field>
                    <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[usr:Calculation_417990356997468162:qk]</field>
                    <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[:Measure Names]</field>
                    <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[Multiple Values]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;mnp-huawei-mate9&quot;</value>
                  <value>&quot;pt&quot;</value>
                  <value>648.33809523809532</value>
                  <value>&quot;[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[sum:landings:qk]&quot;</value>
                  <value>630.0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Kaidee &amp; Pantip Funnel Timeline'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Landing Page Performance'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='25' />
    </window>
    <window class='dashboard' name='Top Device Performance DB'>
      <viewpoints>
        <viewpoint name='Top Submit Device Full Funnel' />
        <viewpoint name='Top Submit Device by Offer' />
      </viewpoints>
      <active id='29' />
    </window>
    <window class='dashboard' name='Perf by Pantip Category'>
      <viewpoints>
        <viewpoint name='Performance by Pantip Category' />
        <viewpoint name='Performance by Pantip Category Timeline'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='13' />
    </window>
    <window class='dashboard' name='Pantip Kaidee Room Perf DB'>
      <viewpoints>
        <viewpoint name='Kaidee Pantip Room Performance' />
      </viewpoints>
      <active id='24' />
    </window>
    <window class='dashboard' name='Pantip Kaidee Room Perf by Offer DB'>
      <viewpoints>
        <viewpoint name='Pantip Room Performance by Offer' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Pantip Room Perf by Offer DB'>
      <viewpoints>
        <viewpoint name='Room Perf by Offer Pantip' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Optimal Impression Cap'>
      <viewpoints>
        <viewpoint name='Day Difference between 1st Click &amp; 1st Impression'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Running Total of Submit by #Impressions Before Click'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Submitter Device Charact DB'>
      <viewpoints>
        <viewpoint name='Submitter Device Release Price'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Submitter Device Release Year'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[hadoophive.19o4tht1fnberc1e809gq0zqtog0].[none:offer:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Submitter Device Screen Size'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Kaidee &amp; Pantip Funnel Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Funnel by Offer' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Submit Device Full Funnel' width='192'>
      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
      leb/AzqMRJUC7aEHAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Kaidee Pantip Room Performance' width='192'>
      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
      8j32+Dj+HyRpo87ibmnwAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Pantip Room Performance by Offer' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Room Perf by Offer Pantip' width='192'>
      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
      U4wk9iaN+H/tTus4v5aLJgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top Submit Device by Offer' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABM5AAATOQGPwlYB
      AAAgAElEQVR4nOy9V5BcWXrn97suvS3vvfeoQsGbRvd0T88Mx5AUSVHLjaVCpJaSyA2FQlJo
      qRdGKFYSH6SQ2dXuxi5DuxQpMTg0w5nhTE87NDxQAAqF8t5lVVZVZmWlqfR5jR4KAzTaoTGN
      RqIa+Xuqunnz3HNu3u+ec/7nO98nGIZhUKDAS4ggCIKY70oUKJBPCgZQ4KWmYAAFXmoKBlDg
      paZgAAVeagoGUOClpmAABV5qCgZQ4KWmYAAFXmrkn/+haRrxeDyfdTnUpNNpzGYzgiDkuyoF
      ngLh01whMoko8ZyMVcywvZekvr4G6VN+2/29IFjdOK2mz3XRZCyMZPNifmB+sUgYm8uL/Iz6
      o3QyDooVMvts7oSpqqvDqkiPnRONRrEoAv6dMFW1tZg/6eKGQTgSweP18qTHOhaLsfXNb0Eu
      97HPlt1V/NPTv/cFWlTgi3KyuZh/+VtDjx0TBEGQP+V8tuZvc8NvIb54i3g6xfHv/i6nOsrx
      zY4xueLHXtpAkzvHvbktPHYJd2Ut2ysraGYXbmEfT+MRiglxY2Kd86+9itf2yDh2N5ZIih72
      Irt4y2rZHr+CWlRDe0cvcmKL5a0YXZ0tLM5OkxUdHD/Sxv3Re1iKauhurQdDZfLeHbImLy1V
      LiamF6lv76W2zEMyusP3/+JvOPnd32Rj7BpNrbVcvTnN62d7H2vfzZERPBYJd5GHm2NJzh/t
      JB5cZ3zRj91TRqlJZTWSwoyGw7zGbjSOzWolJ9nprvcyNrlAbWsPdeWeh2Xq0egnGkBOcBJJ
      ffx4gedHPKN+4vGPvfYMwyCdTmMAiCa+9R/8OjUVZZSY0/zsrfcYH7tNWLMw+vYPGZ++z27W
      Smp3HZ9vhZGpDZZv/pRQSuOn77/HX/3pnzM9fpMfvHuHD3cz4Z0N1hbncdT1sDlzl6Qu09nZ
      zvi929ydXKS/0cP1kXtsxQ3k3VWuXr3MYjDOvRuXiGQM9jcnCQgVSOENRifGiaR0dO2ggSab
      l8HedkBFxU5Dczd6cusTG3/8zAWsgobH7SIR32dvawXNWUtiY4qJ6QnK6zrwb2yysLBAXZWH
      YMrE7tYKl9/5GYl0mg8uX6PgSXi4+aR+n3/zf/wx1+9OY3PYuPXW9wkYRZhEkfKKMkwS7AUD
      JHMGkgh1La3Y5IPhRXFlLaUeDy1tzYgISLKEyV5EfWXRJ1xaR1VVDCQUWcFkMgM6hq6RzWYR
      JQmz2YIsCyDItPcN8bVXX8FuEhBlBTWTIavmKKluobe5jJsj9wGQFROiCCBj6EnSiV000f3w
      qnvrU8xthtB1mJ+4hT/rpqexhLWlRcLxNJqqohkCiiyiKMpBmbIJxaTgdjqQJAnZ4mDoxGle
      OXnkiUOjAi82nzAEEvgH//AfsbAZo7+niSnTcUqyOrLNzUB9LdfXRiktK+P1C69QrCRRbV5E
      71lyspXWNJhzdXjKK3nzvI1a7yuMz/no7W157EGp6xpCnbqLf2WJwRPnkNIRXFYrA719OBWV
      OV+EC6eHCe+nMasVWMsqWR4fZb+4jgoBlIou2qLjZMr7aKywMXZ/hguvnHxYfnVLF6LdTvnR
      Xu7cW+bMuSFu3hrhxPFjeKqaWb07ytGTZwkujaHGd1jadNHVf4TtmassLK8wdOQkbjGJ2SZw
      ZPAIomDg9rpptolkSy2Uee3cHb1HfWf/l/8LFfhS+dRJ8KextTyD4amlqsjxhS4c9i+DtxGv
      9fm8Q1VVRZY/dcoDQGLPz77gpcJrferyY7EYuR/+CMHQP/ZZxOzgUvXAU5dZ4NlR7bHyRnfF
      Y8cEQRCe2gAKfDKxWAyHw4EoFpZWDgufqQK9KGi5NJpgwfQL1DSXzSIpJkQBNDVHKp3FYrUi
      Sx9+SA2y2Rwm05MlXF1T0RFRs2kQZcxm02NDu7Xf+i1QtU/9fko28YcvsRw6UOvhj77Tne9q
      PEZeDCAVDXJveoX+oT62FpeJ5QysYhZ3VQtKKsD8xh49Xe3415ZZmRzB0fcdznVXsONbYzO4
      i8ftIq4qdNR6uXd/koqGNshlKHebiOgOKrw2dDXN9//k33Dht/+ASivcvvwuOdmCbqvk/NEO
      ggE/W75NKprbuXHpMoND/dRWlrCxEycb9ZNSiuhuqX2s3lsLd9nOOVhf8yMZGV594xs4zI/W
      F9ITk58og/6chGxhrC7ypd3XFx2n5cV73+alv75/4zqiRSEUCXJ7dBk9tEjWWsK90VFiyQxS
      fJ1rtyeY24rR2VpHRWU5ABN3b+IpdjI6s8X26gzB4B5FxQ7ee/86+75J/t0PLuF0WgBYmZvC
      4S17eM2IKnLm5FFSkRAAC2MjWCsbuHnlEjpw9+5dyEW5O3KHG+PLqIk4n/Qomzy1fO9br2I3
      SRQWfQ8/eTGAtsFjuIQ498fnsTnsOFwuvC4XsgQTY2OIsgkwsFisCIKAoR9MU2TFgs1hp6K0
      CJPZxPL8BNGUjiwKmMwKBhISAuTizCxusBfaYjtw8MDLuk4yncaQHryFJBN2q4Wfj4ZEQyeV
      SpOT7Jw51sfy1G12E48mtFNTk+RyOUQjy/UP3qd54BQ20+OrywUOH3npk4xcilDMYGhwgFgg
      RokLFLuZ5sYGsl4z8axAY1EpislMmaOC+ZAfSmpoaG3HYXVSW61gqDYsosbS5h6dHfWoFiu/
      +UYTu9EUNcUOfum732VzcRZXlRufz09vZxO3R2fp73ugxmg5Ju/fo2foFKnILiUOiXuLAbpb
      a4mGtqlqP4IpNM1SspXmUjNORccXttFdkWI1raMvzeOU6jAkK6lkErfTlo9bWeAL8tKqQMuz
      05Q2teH8jNm1mk6im2yYPkc/GYvFSP7zfwH6x2XQn5OVZP6k+5d+kep+JWgptfMPTzbkuxoP
      Kcigz5CCDHr4OBQy6GFi6w//EDSdmMnGv+79br6r86Xyamc53+mvync1vjB5MQA9l2ZtYwe7
      y4XTLODf2aO0tJhrt8c4M9hFIJygorwYVZcxsgl0ScbrsJLICTisJsYnxiGxx85+Cmd5Byf6
      Gh8r/8oHH1DsNuHbTWD1VHF2uBs9lyYY3EWTrJQ4TOzsxYiFd6mqqSUR38dqs5HMGtSUedjY
      2MRTWoXLbn6qdsX+/ieQyxGweviBNvwsb9kLR7nLUjCAX5R7N65gqWrg4t+/w/njneyFAkwu
      bSJoOTY3fAT9K/hCHeytTSLZSjGRore1nqyrFofVxPLyMm987XVa0gFuzCU+Vn4ul6OmbZim
      1iSXbi8BkN7b5OLIPLW2HOtmE1FrC2yv4F+bx1PXztz1UcqcCmt2iazkYndsjl//3psFZ7ev
      OHkZsEZSGs2NjbhsMutrK+TUg5Va0FlbWUEzwJDMWPQktqJymkpsjCwGqSh2PSoku8/1MR8n
      jnY+PKQmQviC++gGCHqa6zcnOHHyCGM3r7K8GaKiuo7KYjuxeJqyikoUUUCSFaqqG6mpKafE
      7WA7GMLlLqK/p/PjFS/wlSMvPcBQXytXL10jI5go8XoIJ3OUl5VgUUCLiaRzBooWobj/VXKR
      AI29HcxeXMUmH7yPZUlk7PYIhsnNqs+PkYrS09ODpJhYGLuBu7KRxfu3yRhmVlf8DJw4Q3Jn
      iZGf3UJqaWegq4ykXcZcXQOigc0sU15aihWV8oY65ufXoLS68PZ/CciLAYRDYQRRY2DgKN3N
      FR/5tPcj/9exNnOPwRMHrsfZRAizs4xT5088PCMSdQIgmJy8+vobD462PlaKZLZxZPgkg50f
      mi8UP9oiV9T+6PyamqZfqF3206dB0/CaHZxvK/2FyjgsNJV+MW/gF4WCDPqMKMigh4+CDPqM
      +efvL/Lpy2DPnz94tRVJLAzkPov8uELoGslUGllWkCVIpbOYZIGb96Y4OdRPJqtisZgwDBFD
      V0EQUGQJzRCQJZGl5SWEzD5r6z72TZV858LRx8q/MzJCicfE/PouRZVNDHU3ga6RyWQwBBmT
      LJDJqgS3/ZRV12JoKpIkoekGVrOJVCqFYragyE/n6/N/vr9ITn9xOtT/4kLLgW9UgU8lLwYw
      c/syAc3CwoKPc4PNBEO77OMml4ozM36XYMCPqbSVwMYqIhKKSeB4dzMhuYyOmiImJib43ne/
      R2DLT8eRno+VH4tGqW0Y4JWGZt79YBS6m0gGV/n+u3cpdyiUlzhYTnqwJjZQJkcRXKVs+HZw
      WU00N5YRy0jEUxrffO10Hu5OgedJXgasm5EsZ0+doNSlEI7skkymSSSTgE4ktEsqlUKVXThy
      Idx1HdR5zNxeClBT9igECVqcQMJEhdvy6FB6n739g4gWbo+NW1ducPTk8EMZtLmrn856N1uh
      fZrau7DIIpKi0NkzRENjLQ0VXmbm5kimshR5vYWIDy8BeTGA3pZK3nnnItGsBJqBYjLjtNvx
      uN1ohoHF6kSPb+FsPo4U3aS1r539ONgfeKWJooi6H6K4oRVBgPn5eQAEI8u1D95DdpUyfuUd
      ginY2thh4MQZmqqLmb0/wkJIpqe1GptJxOXx4vJ4MckiLocDu8PF0NBR0LLohlEYPLwE5GdH
      WCqLokBXVzfDvc1PONtgbeYug8P9CBzIoMgOZE89px90CB7vwR+itZhvf/tbD743wLEPlSJI
      Cp39xzhzpP3RwYpzD/8sG+h7+Hfbh055GuqLbS/UHKBgwE+mIIM+Iwoy6OGjIIM+Y2I/+QnX
      K3rISkq+qwLAdwaqEAv7Nj+TF6YH0HMZxqYXGOz/uKrzUXw+H7l4CN9WgKylnNdP9WPoKkvL
      62jJXTZ3k3QfGWJt+i7RpMHJC6+gBpdZ3TfTWiJwd2IJW1ElZQ6RstpGLB8OjKvGmZwPouR2
      2dzdp+fYGcqcnxQxQsPn26a2tho46AE2T5/hP3rtnxK2uD7h/OfPwj/7BopU6JE+jbz1ACvj
      N5nZSRDcjTPcWYbPH0Tx1BCP7kEyiH87QElDJ3uBXYxsGsmscLy7kR2j6EAGnZzgm9/4JrHQ
      O7hbDtwWwmvj7AsNeJwC/e4E41MTCJKHgZo4s2sBUguTxF2NRJdWKW3tobS4FDm+wcTiJsMd
      H4r+oGXY2g7Q0lTNiVILN+a3eG2ons3pG1ycDeG0OShT9sk4KtjfjT40gAKHk7y8Hha3onz9
      9VdxW3Q0TUMAwpEIYKCrGuhZUjiRIstYq9ooNhmMLe9QWXLwZs1ms6Cn8YU16koP/IDWV7Yo
      qyyiuryYiaUgXS1VSJKMyWImo0oMHulBFiCVy2K1WLh76yaOomKCWzsP65VJJVENAwSF6jIn
      N6cDDLe6uHb1CjuRHP3Dp3Dn4gSzAv1HutHVbB7uXoFnSV4MoKXSxc/euUg4LRDYCSBJIoIg
      oigyO8EgimIiEVpHKO8ivb1IZ28zGzsZXA/iygiCgBr1Yy5tepizwOOxsR9P8jd//u+IZXWS
      OYXo1jyXRtdpqfEiiBKKLNPb2c7ayjImhwc1lcJqM7Hq8wMQWJ7iJ+/dxFlk56//vz8noUE4
      CafPnKXUBnduXSVp8+JVDgJimUwmfD4f+yE/0dSnB8Qq8OKSn0mwqGBWUjQ2N/PKsY96f34U
      g7Xp2xwZ7Hsog6ZyErK3iTceOYRS2zXIzfsL/Mbv/JOH8Xoaa3/l0Qn2Bl554KBZ/cDxc/be
      CD2d3WT39w/K6B6m9kHgshP9H9VCZXqHTnK08ZGX5ze+8bVHtYzFKOTXOXzkZRL84Us+OaWQ
      wc9PFwTh4Xc/9j3DeLByK3zugFUHZX2+8z/1ug/4uQz6oqVIetHq8yKRt0nw0/0ojz+gn/pd
      QXjqhZ+nqcfnOTc9OYnwkddJQrGw4Sz75C98CZQ5zVR5nj669cvKCyODfhoR/zxZVxtlT7v/
      wjBYmp6grK0PpwLBjUVmlrdo6RqgqsT5oRNVlhc3cdt0ppY26egbosz9SQ+Qjs+39amqz89l
      0I/GBh0tbeW/P/2Pn7Lyvzj/+SvN/Ldvdjy36x1m8tYDLN0fYTmwR313LzNXRhAUDZvbg9Vb
      jTWzzU4oQlVTN6vzM0iJLVwDLsq6Kxh5/y0imk4yIyFICoOt5SysbZKTPdj0JMVuE5a6fppK
      7CSjO1x89wO+1XRgAGOTC5w6NcSV0RmqXvmwk4TK0tIqVVXFHB+o572RWb752hGSuyv86OIE
      Lo+b+mIJf1zC0DRWZ0fJabCPFUWQ6W0tY351G9Hk5qN72wq8+ORFBRIlgf1EBlnIgdlDa20R
      LT1HiUdDWMxm9GwC/3YQc1ElPR2NVFQePFrJVIa+wX68RRW4LQaSbEIQwb+xTVetlR/d3qKh
      2AaGyvTcGu0t9Q+vqYkiNqsVcp8kXYp09XQzfX+Ojo4qRm5cxbcdorq5lxpThtnNCK29XSRj
      EUJJjQvHuzB56ylRcly5fgdBkdH3Q8/p7hV4luTFAATZRE2Vl6Ul38H/gnCwZG9ozC+tYjOb
      yKkqIGAymdje2n7s+5IkgQBLi7MoFjualmZ0dovBOjO+cBo0FUHQWFpdYTsQYGcniFtSuXrz
      LjZvETuBIAawuzLBj9+6gmE2c/Fv/5TFmIQoiAyfOE1VsZX5qfus7+uU2pTH5hcCIEoHm2Xq
      aqsQRAv2opLncu8KPFvyMgfQ1RzJdAarzYamagcRmkUJTdMwNBXNAFmSQBBRREirOlaz6SDh
      hSyj6ToYBqIA6UwOSZYQBAFFEtAMCeWBa4OazSIqCmouhyRAKpPFYrWwurJOc0sTGDqp5MHu
      Ly2bJqfpyCYzVrOJ/a0Zri3keOV4J7IIgiShqQ8yUcoSWf0gorQoiaSSKdI5lcC5c4U5wCGi
      EBv0M9DVLGkVbJbPl/w7Foth3tvjo1pURlbYtbg/5VvPHo9VwWv/fHV+2SkYwDOk4A59+Mib
      ChTe8aF4a3GYwO/boLy2hg9vP58avc5eQqO8vg1zaof1QJz+Y8P4Z++Ts5XS01r/2Hs2Ed0l
      J7sIrkyi2ytoa6z6xDWBVHSXuGCn1FXQyQsckBcD2A/tEPFHCaRTuEWIRrbxB/fpGz5NqdNE
      15GTTN58H0OAuaUNatt7ULen2aUY0+oEgZpayq2P3rR7m4sEdSeGVEZsYZSKijLcVoGRyxdJ
      5ASa+/tYun0PT4kHk9vF6A0/GCpmk0hdRz/RjXkiSYPjZ04/jD5X4OUgL/11eGeDrc1FqpoH
      2d3yEwgG0AUJ8UFUHSMTZTUq01LppaG1FWdmi5G5HTxuN0VFNvbjH8/eZfHW0dfgICe60BIh
      llc32I5lOHf+KOO3bhBJiVTaDXaCO+jWMhQhQ19nM5P3b3F/2kcu5mdpa/9534oCeSavA9af
      j5dLq+sosWSYXtwCILS5RGltM4aWYXs7SDyZo7SsGL9vhY2dBA6TSkY9MJbL77/NViiKlA3x
      F3/1UxrbWlFMZuw2K5lYmLXVNRzFZYii+HCCKokSismELEmYLA6Kykppbu+muriQ5uhlIy+T
      4GRsj6wmYHZ4yOxHkGWdnVCCurpaFEkgk9hHla3YzRLR3R2iWZHaymK2fOsYZhf2zBZhRzuN
      RQrxSJBQXKeiyML6ZgBEhfqGOkySzg/++gcMDB2juq6KeCSJwyqSVHVAQTQy2KxWElkdPRkh
      nIaG2spfeCN5YRJ8+PiKq0AGOztBysufjyNawQAOH4IgCF/hX0t4bg9/gcNLXgwgGQuTOVhU
      JRIOfyygbDa5z/LKKumcRji4xapvC83Q2d5YY3Nn72MR2zKpOKmMSsC/zvZu9FMjuuVScfZT
      hW2MBR6RFxl0d2OJpFjMXiKCoqqUlTpY34rSP3QUl0Xi6uXL1Le14fdvMDs9S4VNIxiqIBIH
      KXIf6+vfpsj8aLQeWJkkqDuIxlQy0XFOX/gGTovAzPgoe9EMHUd6Wb0/iWRSMBcVEd0JYkgS
      qBkaO/vZ31pkNylwdKgfpRBN+aUibzLo2uJ9HJVd7G75mZ6eBklCVTUgw/ZWgM11H/F4FLu7
      nPbmGpaWfFTWNFBX5SAc+/hb3OKt5/yxDkTRjKhniScSzC2uMzjUyo2rV1nx71Nh09na3iCY
      shDdWaOprpw7d65x+eYUwcW7TPgKMujLRl7nACbTgc9Ka+8gJXKMsWkfoFBZV8/R/nY2t/ZI
      pfbZC4WpqCgmEosR3ktitz8KPDVy6wapTAZBS/DOzy5y5ORZMrEgK6ub5FQVNZdFMllQFOXh
      ri6z2Yzd6cRqNiMKImV1LVx4/U0aSwsy6MtGXlSg8I6PVA7spTUkAhuYFJ2FtRADQwNYZZF4
      eJupBT89A33srs6ynRA42tfG7P176I5yquRd9hy9tJaZ2N1cZi2Uo6PWzejkAkgWhoYHsSkG
      f/OX36e2oZ2+oR4C/j1KXDLRrIZhWJD0BF6Pm1BCRYv62YzB0f6OXziSWkEFOnwcWhlU11QQ
      ZT57uK6zvLxGU1PjZ530zCgYwOHj0BrAi0jBAA4fh2IdQMulyaof+l/NoWpfPBNXNpt9GOpE
      zWWIxxPoH3kXGIZBLpdDU3MkEkn0Fyj0eYFnQ37yA0SDjE2v0DfUx9biMrGcgVXM4qlqQU4F
      WdjYo7urja21ZZYnR3D0fYdz3RWAztUf/wXWnjdptMRYD8aobWynzGPBv76KfytEUYmTnOSm
      ocTMvfEZalq70ZMxilxm0pKLEpcV1AT/9t/+P/yj3/lPsZs0Lr/zNlaHglDUy4meD0V9MHQu
      Xr6CVU+CYsZU2srx7gaSkR2W1newF1fRVF3YCnmYyUsPcP/GdQSLQigS5PboMnpokay1hNHR
      UWLJNGJ8jWu3J5jditHZWkdFZTkAu+sLaBY3hpZiZHwJlxpgZn0PMLh+bYTaIoPxLR3f5D12
      whGKily89/4VAitT/NVbV7FaTGDojI+OU1lTeVAZNU1OKeLE2VPENtc+sb5nvvYtWmpKkR4M
      byIbMwQ1N2v3rxNOv0h5IQs8LXkxgLbBY7iEOPfH57E57DhcLrwuF7IEE2NjiLIJMLBYrAfR
      4B4MPaZnZomFd9na2jkIfGs2P2yAYrPjslkoKirGoijMTU+SyBlIkoCiyCBISKKAmo2xur7N
      9voqgXACRBlDTZNLxTBk+8M6hv1LbOzF0XXYXJ5iMSTQ2+jh5pWr7IRT2Ow2TCaJwgzqcJOX
      SXBoc5nppQ2ae7qJBWKUuEBxVxIM7JCNbBHPCjiLSlFMZqocOvMhgYG2GgBiAR/7kpe91fv4
      1lapGHiTwSYvs7MLNFd58GfsCNEdREVlzR/B6nBikURKXSY0ewUV3gOtf2lhjurqakLxLGp4
      g9XtCD1Hj7E2P8vgkQGyiTC3745T09bP9twtUlipbuygta4M/+QHXFrW6Otso8ojItnd+NeD
      tLXVFybBh4hDqwIZhs79kWvEdQuDQ4PYTE+Xz/ezSCaT2GyfvSAW9S8QMVVTX/LovIIKdPg4
      tAbwIlIwgMPHoZBBDUPjGaieBQp8InmRQbOpfXxbu9TU1RANBklroAgqNk8ZYnafQDhBVVUF
      0VCQ9ambyG1vMNjgBgxuv/O3SM3naPUa7O2nKSopx2lTiO0F2EsaVBU72N2LIFlclHms+NbX
      8ZTXYhWzbGyFqKypQY3vsTQ9StjazKm+JjLpBE7HQcDciH+Gt+8G+fVvn0NX4/z4795GlxTO
      v/EmHovIbnCHZE7EK0YYCyicG3hSmtcCLzJ5MYCxq5fIuUsR7TLX3rpFVYmGuaqTyKyP5jIr
      Qf8KyxvVhMNhWuwgygfOb7GddfYSKh41w5Vr9yixZliNHOd8TykXL16horoeY19jzAfOXBDF
      YkK3eti7P49TTmH3FDG95INMjBJTgp3tGaacJtJ7u5w8PoihZZhf9iEJB2FTjMgm1vpB2kw7
      bIcTuIpFfvreZQbqvfhEJzmlsAZw2MnLEKhjcAhSEZaW1nB6i6mqLKO2th5Z1FhbWUEzQM1p
      uLwlFHldB0FtgZFbN4kn4/j9G8gWF7XVlQcpkgQTw0N97G7MsxlKUV3XQLFDYsUXxO310Nvb
      xV44SlFpJe2NZQiKnYbaaupaO1i6ex1H0cE6w/rUXTb2kmz5faRVQFYgl0VVVcQHjkclZVU0
      1JQRjhTywXwVyEsPEA0FyRkK9XUNxEwxXMVgtihUlpeRlrOkcwYlxR7MZitFLhezOxtQXMvX
      vvMb7G3ME5bLSW5MMjq5QGlfKxg6gZ0g1qJqyt1mrt8foa25ie99s4u74ysY5dWcPD7E0uYW
      1Y3t1BWHGF8JUNffTc5lpbLmIPp0fd8p6rvi3J3cJBP2k3VUY01+wErGwZleJ2hxttfnuSt3
      cHKwk52Yhs8fQNIyWN3PL/xhgWfHoVSBDF3j2gdvkzFsHD19Crfl0f6AiH8Of66ErvriJ5aT
      SYQZX9ji6EDX54oGoWeTjEwscGKo/2OfFVSgw0dBBn2GFAzg8HEoZNACBb5M8jIHMHSNZCqN
      LCvIEqTSWUyywM17U5wc6ieTVbFYTBiGiKGrIAgosoRmCMiSiKbmyOR0rBYT2XQKQ1SQRciq
      KiZFIpNRsdqsiIJALpsll8thslrRsxmy6X32khJlXhs6AoKhIZutCPpBmTar5fGEeJldRqbC
      GPtrRNMavcfPU+mx5OO2FfgSyIsBzNy+QkAzs7Dg49xgM8HdXfYFN7lUnJnxuwQDfkylrQQ2
      VhGRUEwCx7ubCclldNR4uHHpPVTFTW9bGdfvrSLmErjNEHM1YYuvYbZYkEvbGO6o5Z0f/gWu
      qkbShpm95Vm6eprwJ+DdiTUczizFVXWoigs5FcSqCDibjtNbX/SosnqOaCxOf89R9N15fMFY
      wQC+QuRlCLQZyXD21AlKXQrhyC7JVJpEMgnoREK7pFIpVNmFIxfCXddBncfM7aUANWUe0HPE
      0hKvnDtJIrBNfdcgrVV29hJp2jtaWZpfQcWEx2YGQHGVcvLEKVLhDcyuYpprDoJlFVfW0dpc
      R39fP7nkLisrm2iyA5fl0S0JB3dRAQQFkxZjakent0LkypUrhJOFzPBfBfJiAFs2hzUAACAA
      SURBVL0tlbzzzkWiWQk0A8Vkxmm343G70QwDi9WJHt/C2XwcKbpJa187+3Gwm0QQTTRU2vnZ
      2xdxNbSzM3ebtZiJlrpyzJKJIwOdZHM5hAc5vNKRAJcuvk99xxBerwdBtuB2OvF6ndgcLmRZ
      pqS0hq62etRsFrQUi2sHOcniwVXevnSf2jo3P/npe2DkCGXMnD17FjEeJJaM4/MH8nELCzwj
      8qICrUzeYXk3hqu4nuHeJ7kSGKzN3CXrbqW16um19vfff5fzr7yG9HkDXqkpAjGVsiLnk8/9
      EAUV6PDxmAyqaRrxeGF18xclnU5jNpufKvt8gfzi8XgK6wDPilgsxsWlGMYvHGD9+eG1KZxv
      LwQO/pQcYQbX3/pr7sz7Kapu5Y2THfzoR2/RffobHO9peCY/r5bZ5/adMVJZlY6B4wgxH7Or
      28gmB8eOd3Djg3FOnj9BKrDMYlggF1giK1kQFQd1xRL2mj6K9R1uzu1ixLfZjqRpau0gub1E
      TrZitRdTYk2wuJ1GUFP0HDtPhftgUpxLh3jv7RFsbgslta1oez7imkLvwBEc5i+2sea//v44
      uUMQOaKvxl0wgAd84oB1dXaFjuHj7CyOcvn9i4jeat7/6Q9RtWfz407evE5F1zDnTg2Rjuxw
      d9rPmbNn6a1VuD46z8LEBNt7+8zMz7C9tUMyK3L6zBmEmI8N/xbJHJCNs71vcPJoP7biKvrb
      6wmF41RUVFBeWUoyukf30TOc7Cjl3tzmw2trWgpbUQNnTh1jZewqaxGRjmoLY1Prz6RtBQ4X
      nzJjU1lfXmbw3Ld49bUL2LQEqmF8atjxpyWd0rDbTUgmOy6LgSGZkUQRu9eDmkhRUl3F9uIU
      htmDBOyH/Fy9ehVHbQ9ei4Ch6xiGgfCRCackm3A4HNgsZvRshtvXL/Lvf3SXk311HzrLYHVu
      nGs3R+k/+yYdFSZmFn3kCrtuXko+cSHMZPFy/pd/lWqbieDyKDMzM3Sf+uYzCx3efbSbS+++
      g0XWKK7vpd6r8f7FS2iZNINnh7h9aRayEcoaO0muBrFV1HP67FkkILqlc+XGu8yTpWfwFRAy
      KPJBM7RMnMXFRRSLHbvJwfHBC+RqrNybXKSx1E5DfS0CEq3dRzh5og2MHDem90jlRLoebLov
      8HLx0kyCNzY2qKn58h7yWCzG0P989dDMAX74+2fyXY28U/AGfYb8fB3gsMigh6WeXyZ5yxT/
      VWV8Iwpf8MGqcFmocBd8jZ4XeTGA8I4PxVuL4yA/Bmvzs5Q1d2B9JuF9DPyri5hL6lD31phb
      3aa19yiVDwJiqdkoVz+4g2Q1Ud/WA7FNtqIaff29WJUvtor7a//qxhceAv1Xr7fxT15r/UJl
      FPj85ClH2DKhhXV2EmncziJyW5NMrKxRWduOGF0hGMvS2NLKxP17SJKd82f7uDM6g2R2cfbM
      MEJun4vvX0VT7LTVephb2aa6uYvelhr2dze5+N4lhr/1K6xMLvPqa8O8e2mMyjdOAaDm9hFt
      VZw+Uc9PfvJTBKWU88dquHd/mVNHW/JxOwrkkbxliYxG4vSdvIAQ2yAjujh24iRbvhn84Qyv
      nehmem4BW0kt1ZYMV6/dJSGIZBJ7JLMG0bUprA1HaXSIbMfTpBIJeLC3x1lSw0B3E6AjiGYU
      sxtB/7CLx4EMevXaLVr6TlNfqnBvco5YIpmPW1Egz+TRcyvN2MhtUpIL28MtvSbMRorrdycp
      LSmGB+vOVQ3VSLqMt7gMiyLgKK8jMD/Kwk4Er91GRUUZvrWPLmQpWMQ4t65fwVZSx85O8MFx
      gYb2Ps6dv0BHQymqbiAj09hS/3yaXeCFIi8qkJrLMn/jJ+QaX6ez0oKga0iygqqqSIJBOqdh
      tZhQNQPR0BEVhUwyiSCbsJgVDMMgm0mhCzJmRSSZTGO22FBk8UH5OQRJxtBypDJZbDYbK8vL
      tLS0YBgaqgqKcjDhyGXSZDUe7AT7xdv0rGTQwhzg+ZFXGTSbioPJjkn6ashxsViMUEb8wiqQ
      16bgsZmeUa0KfBZ5lUFNVke+Lv2l4bEpT62vm2QRm6mgRueLF+bOG5rK5k6QmqrKJ57r2/CR
      299jczeGu6yWvvaGB5+ojN26yX5OoKmjFyf7TK+GODrUi/wcFn6O/bP3nnoI9NunGvij73R/
      STUq8CTyYgCRrSXuzPgwJBuNJTJrWyHKappYWVkhsrXC1m6M+pZWEmkDLR5CMFvoaaxgO2Oh
      vszNzs4OQ4NDSFO3CBgfbkKOYEzna6+d5Ic/+hGy7OTrr/Vy/cYs50515qOpBV5w8qIC3R1f
      4Mz5M0SDG5htNkyCytzyQX4um90OmT02owL+8YvsGU72dzaZXlrHaj1YId3Y2EAQdKZXgvS3
      Vj9W9s7aAleuXKWoqoWqIjO3R6cJ7u0+9zYWOBzkxQA8VonllVXiGZ2xsfs4HDZ0TcdAY2x8
      CofdRjq+h2orIx3epretktHFMEUO88My9P1NVHstJkl4bCtneX0r585f4OxwD05vCVVFTirr
      n0+y7AKHj7wMgSqqqvHHohSXlvHK0Q7CiRx1bQ5EAYxMnKQq0mKWMVt70dNxFDlOV4sbWQBd
      yyFKCphLOHvsYFfT4tISA/39gJljxwYeXEWksrKMnWiWE7VPnlcUeDnJiwya3t9jbmmDlq5u
      7E/M72Wws+HDXVGDRRbJpWJsBJM01lU8l7p+XmKxGKP+1FPvCa7xWmktf7oIFAWeDQV36GdI
      ISzK4eOFcoc2dI1ILI7X8+TYP+HwHlo6QTiexuoqoqa8GAyDeCKBqGfZCSepra0itrtNLCNS
      V1MOWpZ4Wsdpk/Gt+XCWVmJCw2Z3PFy7UjMJ1nx+EBWqa2vJRIPEcjI1FcWfS98//j++R+4p
      9k3/3e+fpr7Y/uQTC3xp5MUAkpFt7k4uY3V6qPZIzK9uU9fYwsTUDH1NpaxuR2lpaSKVk9AT
      IXSTmZaqEoIZmaoiJ0vLy7Q1NZJcmWEtrFNTXkxmf5vJpX1ykTWKXFbuhMLsBXcolZOolgv4
      bvyY/aIemuUAWmkb8U0/Fi2CWNJGQ9nBECTun2U5ZKW9KMUHV69BTqWxxMqybKW59MkPaiSZ
      e6p1gEOweewrT17669sj9+gfGmBhZhoNCauQ5s7EHACCZIL4JvPbKWZuvsVyKMfm0gKLyyvw
      oMPa2NjA5S1iey/N6cEDv5nVqQnKG5s5+8rXEHUdq9nAVVRFZ0s1W7sJBgaHsEoGa1sBYtvr
      ROMpaqsrmFtYeaxu2xurLK358RaVIqoJ/Fvr+LYjz/cGFXhu5MUAJMEgk8uSUw3u3LmD0+NB
      MAwMNG7fuYfb7UJXsxiyBS2boqe+iOuzQUrd1keFpLbJmiuxPnCAy2ZyyLLE+Mgl0q56uuor
      SSRi7AbDeNwuTA+c30qKy+k9eoLY9jqGJGNojwe57egf5sLX3mS4p4WO/iHqKsqpKC2kP/qq
      kpchUFt7KzMT0ziLvZzqaWAjlGb4SB2SAHp8l0hWoslmxt76bdT9EEXlZlojERQRDMNAURRU
      w8rQYMfDMpu62hhfWcaKTDywzqarm7YKG4G0m6OVVvRMGT0tKuWeVu6NjtB/8jyh7UXqa0q4
      eXucE8N92EobaTIOdo4JogzJMElHAz3lhXH6V5W8qECx4Abjc2t09A9R4nzS/lcD3+I87tpm
      XGaZbGKPmbUw/V2PB9U1DJ2dnSDl5eWf2yEzuL2Nt6wMDANZ+mL7MWOxGH87GXqqcf2vDtbg
      sipPPrHAl0JBBn2GFGTQw8cLI4PqqoouiMjSxx8ew9DIqQboOVRdxGoxkU4lkRQzJuVR9TPp
      JNmchqyYsZhlUskUitmCIj+Tnfafi1//1zdQP2eAud8508gv9Vd9uRUq8ETyExVie5P1nR0c
      Ti/ReJpSItzYSDLY20u1S2BsaoGGjj4qixzo+z7evraKmklgVXQqayrxhzJYzDJnTh5DfhCt
      7r23fkRlfRs+3wYNNaWEkgKiJHP+5NBza9d9X/Rzy6DBeOZLrk2Bz0Ne+uu1qVvIxY3cuH4L
      KbHDRjhOUUUdE3dusBeJUeISee/SyKMvmLx897vfxGs3IQqAIOBfXiL+Ca/bg8SXBggCa/Pz
      pJ9bqwocRvLSAwiiiN3hpbzci81iJp7RcLrsJESYn5yguKYKSc9x7/YNHE4FDIGxG5ex1/fR
      VuGgpDLLWCqC9UOxSmWrg5aWFjq6uhGySfazGolIiMLmwgKfRV4MoLyhA4sFmpqa8djMmL05
      RJcTd3sHTkVjPRSns72JgZ5W9EwEVdtidT2AQ1thz9nC6vwcTd2DhJbnECrrqXTaaG5px+k8
      WNFNZWIszMzSfeRYPsNeFDgEHGoVKJtJI8qmT5w8P29isRj/2yUfn9cV6Bs9FZxoKv5yK1Xg
      MynIoM+Qggx6+HhhZNCvCv/NX42jfYYKZDVJ/E+/0vcca1TgSeTHGzQWIRSJ4iquYPHeFeKa
      ifKGNjrqDza5ZPfW+f57d6kpdaGbS5DiG2Cy09A9RF3Ji7t55Idj/s+UQZ0WuWAALxh56a/n
      b3/AWiTL1Q8uEdrP0FBbytTU3MPPDUPHVVxJS2Md6UScRE6nrsTCxNxaPqpb4CtMXgxAlEzU
      NTShkGVoeJhcJofNZn3snGw6RUqVOHf2GMeHBklnNOy2Qtz8As+WvBiAriW5c+Mala19RLZ9
      bARjDPZ1MDk1C4BkttPZ2UlLcxM2k8zG+gqBhMhgZyGAbYFnS17mAK7Sak43n+TAy7iOZgBD
      xywd+MbIjlK6HkROFASBvuHDkc/qXFvJZ/oC2Z4YAKDA8+ahDKpp2mPxdQo8Hel0GrPZXMi9
      dYjweDyFdYBnRSwWI/1nf4agP+oC/INn6T/Vn8daFfgsPnkdwDB46y//hJFZH47ydk53uvGr
      Zfzya8Msj33A//vjawy9+l2c4XEu3V/lW7/5eww0Fj3VhTPxXa7fGkfXcjT0HkcIL7Gysw+6
      yIlzA7z7d9f4+vfeJLY+wcyejB5YQHIWkclBfamCu+kE5doG704EsKu7LO/E6entY3d5CsVV
      hNVejEsIsrInIqbDtAy/RlPZwa4uNR1l5PY4O5sr1PYcY31hgQtvfB1HdpOf3FylvrGBMinC
      5Eac5rZOmqtLPne7Qv/yX0Eu9/D/8d91FwzgBefjk2BB4Ou/+g8osyucPj3MlQ8uEtiLAbA4
      NUUGhbJiB5Pjs0g2NyW/QEbDiRsjdJw6z2uvvYLTiDK9nuTVC69w5kglN0ZmCW9v4t+NsLTu
      IxmNYsgOTp85jTkXJhSOktUALUNcNXFyeJCS6kb62xuIxQ7qKVvMqJk0fcfOcLK7mvn14MNr
      yxY3xwY7ycrFNLo0oqqEzWxic3EZw6QgCgKry+tIkohAoXP8qvMxAzAMg3f+6v/G3fd1jvW0
      0N7azMnjRwFwVrfx27/+da5cvEzD4Dm+e6yOK7dnnvqiD8fJgkA6lfrwBwiAt6qGnbkxBHsR
      ArAf8nP16jWquk5QZBHRNA1d15E+so3RWVzDmTNnGOhsQs9muH39In/yd7c5O/BIPdK1DD/9
      6UXe/KVvUFxUTFV1LWYZ3PW9fPPV00RW56juO8mFU4PMTz992wocLj5hCJRmbnGTiBDmf50b
      pb2+7KF64TBpfP9v3+a1b/8akbnL/HAiwm/+x6899UV7Thzl8pX3mRZ06jqP0lWX4OLFSxi6
      wPFzA4xeX8BhS+CtrcfwhVAcHRw5PowEJO1dXLl9kUVB5+jwORDTuB22A+PJxbh69SqKxY7X
      Vcapo8c521nO3fvzVLhk2lqbCS5PEjXMjN++Rk1lBW7nwfqDkQlz+dIc3uomcrvrXFlI0djW
      9oVuboEXn5dmEhwIBCgrK/vSyo/FYgT+w98EVX14bPI3/jO+959870u7ZoEvRsEb9BlS8AY9
      fBS8QZ8xv/und9AMKLab+F9+feDJXyiQd/JiAGomzuzsIsU1TVj1ffx7GZrry9hPAWoSm0Vh
      eW2LhqZ61hfnyegmzERY2d7HkJ2UiFESmo5gq2Ggtw2rkCGLwubaOlPz8/zKr3wPCUDXmLp/
      h/WVeTbVUkx7M3S88msc66jhrb/7S+xlTXQ1lnFtZJzKhlaG+9q/ULsuz++S0w2qPNYnn1zg
      hSA/OcKCASSziZ+99S4llizlje0EtxLMbpvQo/OYRQPRWYkrlqGmqoy3Lt+j0itz5pU3uHHp
      J8RUG2+8eZa3fvi33LiZoESKEc4YtA4cIZ16NAZHlOjs7mFuaZPf+ParfPC+ypGWStDjZLMK
      5nSC0N4eomIlFouik9fM4QXyQH6iQiwtEsuoiILO4LFj7G+vsLYVRtc0stkcbT1DWLUYk/PL
      jN4Z49U33sAii2RzWXRdwEBFVVMY5nIcuU1WkhYshkZRcTFO+6Nt8IahcfW9dxi68HWcVhMm
      k/kgTlBOpf3oKZrLbAQTcPz0aYRkBPUz6lzgq0leeoDq2lrm/GGam5uJRULIznLau7qZG7uH
      XFSFmoqR0BRaql0szOwwc+8OjQ2tTN65Tm1LPx7CXL1yh64jw1jiK7j1UlqL4e6Nm3jLa1id
      vU9pYz92MUkiK7I+Pcqup5za2tqDCpgcpIPTRBUX/W1VTEzcobypsxBB4iXkK6kCJeP7mO1O
      nmcS+lgsxh/9dAnNAK/NVMj9ewgoyKDPkIIMevgoyKDPmMAf/zFoOpLbTekf/H6+q1Pgc5CX
      HiCTTBBPJrE6PaBmMFsspOL73Lo/w/GBLpJZjeKiIkQMRt77MemSNrqrvUgWB5uT15Cqj9BQ
      4cVqPrBfXc1y/95ttjfWyHra0bYnGHj1l2koMvPuOz/DUdpAW6WTO9NLVNW30tfe8MzbFIvF
      2Dx9BnI55MpKWi++/8yvUeDZIggHgTSfOzM33uHeop+L71/m6vvvEQ4HuTxyj0QiwY9+8Nf4
      FiYYmfEBBoFwggoXLK9v8vc/+DHh/Sj+rU3eu3j1YSx+UTbR199PSrVwfqiVjGGi3GNHTe8S
      jhnomkow4EdFRv2Qu3KBAvnZFC9b6Oztw6QnD7YQGjo/74e8ZTX0d7cS2g0hiBJubwmKmiGS
      SKDlckhmJz39vUi5+KNkFIbG1XffYejVr+NxuSgpLcZuljGwcuEbX8erJUg7K/nahfMENpfy
      0eQCLyh5mQNouTg3Ln1AY30XTi3I/fvTuIsqkI0cS+M3uXhbZmjwJABFJSVYrWZQVTwlRdhs
      DsauX6K0qYu1hRlqWzvRYlts7+uI06PEyuspKTnYxCKbFGav3UBxFdNsE7h5/SrVDZ35aHKB
      F5S8zAEW7l7C3naeqo/GuDIMrly+yqnzZ/k828fDoRDuomLEF2AbbiwWI/SPfw80FbmklNr/
      61/ku0oFnkBBBn2GFGTQw0feJsFfVf7s5hrJbMGh4jCR93WAxYnbrOxEaOoYILB0n2hSZ+jE
      EJOjo+iyi8H2Ym6Or+EsKuf00R4+PNq5+sG79A0d597IDVJZkbOvfw37gxYF1heZW/Ozthbg
      3MlO1vbg1HA3C/dHCMQytHQPsjlzi7RgZ+DIIM5nkK3xf/jxDG/2VGIz5f22Fvic5OWX2lmZ
      YnI1QDCS5cyxHk5VlXPl/iRmxc2JTol7SwH6h88yc+M9bt6Jcupbr3Pv7beZvp9kcyuAaqvi
      eJOd6WU/tbU+lOIm2hQ/i9sJ+msOoj+U1bWQie+SMXWzMn4PvWkYCZ21tXWcJVXIQpb1tW2q
      WtoRXoRJRIG8kJchUDKVwUAgldynpMjJnfuLDPZ1gCAgiRKKzU1yZx6pvBW3Agdb5Q0S6TSi
      ILIf2+PW3RncFoPIfhIEAVGSUNVHWd/jIR93V1NcONZBZWU9TQ3VYBgMHD/PyZNdjN0Y58wb
      36K13Mzs0k4+bkOBF4D8GMD+PogCVquNd3/0fSJpnXBMRY1tcmVsjVIpxN9/MEouuUd1fRkf
      /Ow9crZi1EQcUZawWGwMnzhOkddLcXkN4fUpbs/tUetI4gseRLcbufIBsgzXr94kK5kfZpP0
      LU5x7eo9mnramB69xdTqHg21nz/2T4GvFl8pFUhP7RHM2Cn3mJ/7tWOxGK/+77f46X95jlLn
      879+gaenIIM+Qwoy6OGjIIM+Y64s7JL50DykwIvPC6PX6WqGqflVeruevDHd5/ORi4fY2N7F
      cFRyfrgbQ9dYW9/ESO+xHojTM3AE3+wY4SScOHMKNbyBLy7TWCwxen8eZ1ktxVYoqa7F/CDL
      ZCoaYHR8jlgsSseRY2zOTzFw6gLC/hZ3JucormqiRE4ytxGkoaWH+krvY/X6nX9/h2v/3auU
      uQph0A8LeTEA3+xdJn0RIrEsA80efFshrMV1hEMBclE/24EQ5Y2dhMNRjFQC0WJiuKOObc1N
      W3URs3OzvP6110nG3sdUdZBTILo5TShXjlOw0l0nMT4+jiFY6SzZZ8YXJDZ9m6Snhb35NSq6
      h3FZLIjxTaaXtznSelCG1V3G0QGBn7x/G/Z9zPpinDDB6sYKydz/396ZfLd11XH88zTPluUp
      tiM7tqXYjqLEGZw0FEIDtD1wmEsPHHbs+FNYsYMdKzbdASc9HGgKKRnaZrDlMbEsW7IkD5Ks
      wXrW+PT0HgunGWhLG2pXcXmfpY7003333Pvuvd977/cnMOR0sLwwj8HeidOhOT98FWjJFGgp
      nuW1V7+FVVdD0OkQVIVMNguo6HU6FLmG2LQhpxbRdQ1hb1aZi6XoancBUC6XQZVYS9cY6dt7
      C8cjCXr6uhkZGuBhNMPxoW6MRjN2h41KXcfk+dMYdbBbqyKVd5menqatq4vUxtbjcqmKzI33
      bnHpm1fo7evjuG8IA9DZ7+OVyy+zND/F6MlzXLp4muk7d1pQcxr7TUs6wGCnlb9fu06+qhKL
      raHTgSwrqKjEYnEMOh3FdIyG20cpuUTg1BCRZIk225MBSy4kENqPPb7363CaqdbqvPWH37Nd
      Vag3TWSTD7h+b5Xhfvfj35047iOTSSMYLTTrNYwmHcnNvX2AyN1rrO4oRObvs5l/kixke2OV
      27dvY3Z4iD6c4/33P6T9yMCXU1kaB0pLVKD4wxlSpTrlhokrlz7bQS0VnWVb6eWUv4dGtcif
      /3aLn/34e8ATp2m5WuDOXJKvXQh+7nJE5u7jGhyjLu4yONDHJ1WFIAif+PnT/w17KtC539x6
      tAbQkvkdBlomgypyg0qtjtVmR/+ZxxBUpHodg8mMThBQmjL1hoLV8h8mJqqKLDfRGwx83ixF
      ckN+ru//N0RRpKk302YzodPSJB0KtH2AfUQURXKSDq/HhkHbCzgUtMwVopBOYmz34jDBZjJJ
      j9f7zAWYQirOUiJLIDBKeDZEqSbhP3WO/NoSsqWDiYD/8SWYZGSRtVQOGStBfzfrOwqnx4ZI
      LM+TyIicmJhka/k+xYaZc2fPYDEeXON87bc3tCnQIaMlr6pCep3wzDR/u3mHtbUkC9Pvc+3a
      O2wVawBMTy0w0GNhKZrj/KWXkSsl5FyUkrkPJb1MpvokEZ3XH2B8oINKQ+XmO++A2YKAwvJy
      BIujHbddJhJex+3pxnyAjV/jcNKSFrGbS5PNJDg2foFibptypYysGviofZotEI5sYDAJVNJL
      0DmOSZFxOR243VZK5SfODtLuNjdCCb7zyiS93hGGvN2gNjkevEjAa+LDezHOfOMKlvIGsW0t
      DazGs7wQr0RneycdNpnl6J4cqaCnp6udWq1GZDHKaNBHW0cH8ZUHRDdKOAxVKpICKFx7+216
      vEdJxhJPzG2bEiuRZdYSGRwWhaVwhO3dGjbzF7/0ovHVokXGWCVkFYwWO41qGb1OpViq0dHZ
      iUEnINXKFMQqHZ0dNCplTA4HelUhn8uC0YqxvMmOdRhvu4H8doa6rCAIBpwuOxarFb0gUC2L
      7NaadHna2d3J0dSZcbc5OCh9RpNBDx+aCrSPiKLI6k6Tk/1tGPUvxMCq8RloHWAf0Y5DHz5e
      qOPQqiKT3s4+129qu3lmQyFm5hYerQk+FpVMJv2pO7kf0ayXmAuFCIVCpPNFVsJhSjUZVamx
      EAoRjq5TLeWZCYVIpPKfGke8+vZzlV+j9bRkH2B3O8H9B3EMFieDHgOryQx9gyOElyOMHXWz
      niky5PNRqUOznAOThbGBbjJ1E0c7nawshljPVjh7YZKhwV7efe8eY4EAqE0WQ/fYkYwEx48x
      P7fAXCTJz7/7deZX4ujNHnw9JpbjKXwnz9Pn2btArzNaGPYNc/2vV9FT50ZojV8N+ammIqzm
      JSaPOtiIzCM2XAw6bK2oMo0DoiUjwP3QAy5cusBWfBWd0YRFJzEf3vPsNJktqJUMsWyD6PS7
      bFUMZNfXCK/GMRhNgEJ8LYFOrwfBQG49im/iIha9QCMf41+hGLn1Fd599590jEzQ67EzP/+Q
      M2dPshlf5fo/b6M0JaZCc4/LIwh6NpdDdAYuE/QP4h8/id2kQ8LG8aF+VhZnUaweBo64mZ1Z
      aEWVaRwQLekANiNkczmqksLUdAiHy4mqqKg0mQrN0ea0I9dKKKY2pPIOweFu7i5n6XRZQIWh
      0QCORprFRJ619RzHvF17D2Oy0HOkn8mLLzHi7UIs5BFLFYx6gVyuQL0JTreHk6cnCI4OI0kS
      ALuZKKH1BiePeZAaT4ytSoU8BpsDQW0iFkQsdiuqot34+irRkkXwZnSJjZ0KG+kCl88eJ1OU
      aHO3oRNAre6w29BjtRixOjw0K0Xcbrg7V+LrF/0A7GTWSWxXODHuJ7+dobOn53FPzqzHyFXB
      P+wlvrJM0+TCqoikCwU2szpee3mUcHSdkfFxHs7OMjl5nlI+RSS+dy+gp7cfo9lKV7sTVWkQ
      fvCQjqM+2swyyysJjvnHcFg+PnMURRHl+nu4f/TDL6saNb4gLVOBKjsZZhZXOXluEtcnNKZn
      UUlGV+jwjmD7H48ylAop5sMJAqfP4HrKAU5V1WeONH8RRFHEXCxi/igR/DMlKgAAAwNJREFU
      n8YLjyaD7iOaDHr4eKFk0E9DVVVK5TKf1EtVRSa7vU298fS8XCGXSbO1tUWhWKJUzFOqSoBC
      IZshlc7SVBqktrbI7Yj7WtY//e6tfY2ncfC0RAatl3JMza/i8nTg1EsUJB3mxi75uoHgSDeR
      2Cbmth58vXZm5sLEUll+/tMfkN9KgK2dQjaHb+QYqwv3yVZVinUzr18++yi6SqVUYuXBFBVL
      L6uzH/LdX/4an67MB3dnGRgaxiZtcG+1QcDnpcPt2rfn2s0X9y2WxpdDS0aAux/cZSw4zszU
      NA8WFvF6+zFaHMSnbrG8FkU0dJGYn+JfN2/jC55AeJQLyWE3cfWtP1Js7jmv+U69RLddQFae
      3gTT0+E2U1A9vH7lJU6cmsTX60SqN7A5rOQ3Y6wXVNodehLRGLI2Afy/psVTIAGD3ogkbjEX
      2aLNaUVRwWazY9QJqIDKR+a4oDSbGIxGlEcNfnVpns6RMwjV3OOIqlzlHzfu8+1XX8Hw1PpW
      liV6B/z0OHXkSk3Gg6fQN0paB/g/pyVToLExH/OhOawuF2MBH56uXo51Z9H1TdDZcwSD3Y6k
      D+I50s7C7EMCpwIIwG6lwfff/CXbmW0Ajnq9zM6GmJi8xMy9+5yYPA+1Kq42F3P3PsDV1c/x
      UR8ANvcRlOQsTfcIlwY9TE3fYSg4ifmFXwVpHCQtUYFyG1EWo5v4AhP0eRz7ErNer2M2t86U
      VhRFVqfDnHllsmVl0Hg+NBl0H9Fk0MPHoZBBNTQOkpasARIPplDahqlXc5TyOwz5jrKZEhkd
      82PUCczcukauaWEsECR89yZGZwej/j5ufTCP2pB5/Y2f4HhkI5GMLLKytsZUOEvwiEKpI8hP
      r5zn5rWrCFYPJybO8uE7f8Hd7z9wVwiNw0eLXCGShEM3yavtpDc2uH3zJtXqLoVSHYBSTcKI
      wk6hQF1RaEoVkvEk/omXOTXsIrMjPY51dGQUGg3e/MUb2JxHuHwxiKDWqddBUOoUCynqih2p
      Wqba0A6yaTzLvwGfLf3X09j61wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Submitter Device Release Price' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Submitter Device Release Year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Submitter Device Screen Size' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Running Total of Submit by #Impressions Before Click' width='192'>
      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
      1/1v3PKnAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Day Difference between 1st Click &amp; 1st Impression' width='192'>
      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
      fR7a/w9Zky6vE83qFwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Kaidee &amp; Pantip Funnel Timeline' width='192'>
      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
      KjNIMQB/MEFDdTGyvD939bLYGSwuLm5pALAyDRoYGNhXi+FUctwFD3ZZp6q2fpfUyWKvwTRN
      IpFIWuzRZWVlaJrGhQsXmJyc3JHNvEwjpau3K4LZmAGLC9SWFxH2ztMzNMGB5qOosWX6x2co
      Kixk2eOlqLAAj9dHrsuJrNrIy82lonzrXiKL/YVIJILNZksrslKSJM6dO0cwGKS3t5euri5a
      W1v3JBfTKlJ3gg0Dh/3hVrfdVUh5wTJxzWBuepHmpko++103H7zSzIXOUd48WsXgYgwjNEcg
      r5g8txs9vnPs0JnAboVCCCG29U72SijE4uIihYWFG4YorCfT4XBw6tQp4vE4V69eJTc3Ny0W
      u10PhXDm5FDVUENn521gJRbo7tAMZ0+X4nLZ6ekbp6m+lN6xWQ5UFDI4tUzbydMsTo0xPDxC
      /FALrh1kh84EniQUIhwO43Q6N23Aj+q4ymaxsLDA/Pw8Xq+XvLw8vve9723LCPZCKMTCwgL1
      9fWbXrfRsVUa+Lt37/L2229vea9dD4Worizh6nddSOqKF6igop6PKuoBKCkupr55fSF5TYdo
      bDoEPH+hEGNjY9y8eZO2tjZaW1u3bMC6rvPNN98Qi8UoLS2lqakJt9vNtWvXmJ+fX7fw3l6G
      1+vdtPLlVigqKiKRSBAKhdJaRzxrpLJDLywjTA2JF4dDZ2Zmhs8//xy/37/m2MTEBP39/fzg
      Bz9genp6yxq/sViMixcvUlpayjvvvEN7ezslJSVYLBaOHz+erLK4X6Bp2lMnS0mSxOHDh+np
      6cmgZplDKjt0eSWuHAe+dRrD84hIJMKtW7c4evQoX3/9dUo8y/z8PN3d3Zw7dw6r1cpbb73F
      wMDAGnrtVfj9fi5cuEBbWxvNzc1rRopVaveNrt+L8Hg8uFyup17PVVdXs7CwsCdnB49NhAWy
      BG732lL3zxtM0+T69eucOnWKqqoq3n//fSYmJrh58yYLCwvcvHmTt956Kxniq6oqb731Fnfu
      3GFpaYnVPGqPx8Pg4CBXrlzh9ddf35TFrr29nbt37+5596CmaYyPj9PZ2UlNzdqCKNuFLMs0
      NzfT39+fAe0yixRalO67t/F4g8j2HL539vQTCVylMNnrOcE9PT1omsaJEyeSPZwQgv7+foaG
      hjh37ty6lR8jkQgXLlxIPl9eXh55eXk0NTWlxWjQ0dFBfn4+TU1Nm573C/gPCAAACGlJREFU
      rHOChRDMz88zMDCA3++npqaG+vr6LWnb09VT13V+85vf8Pu///sbOiAikci69Y6fBE+UE2y3
      WrHm5GHdo6FAsViM3t5eWltbn4o+Y3FxkZmZGd59992Uj7tai3ejInywUqTuo48+QgiRfMHb
      aaxHjx7lwoULNDQ0bKuBb+VGjUQiSW9TTk5O2l4u0zQZHx+nt7cXt9tNS0sLxcXFO5IwtBo2
      vZf2BdYSYwmB4MlpQ3ZqBIjFYly6dIna2lqGh4c5fvx4CuOzEIKpqSm6u7spKiri+PHj65YP
      DYfDXLx4kbfffjtjXont9tbd3d3ouk57e/uGDW2V3Glubo7x8XHC4TCKotDW1kZVVVXy+8Tj
      ce7du8fs7CyVlZUEAgEikQiyLJOTk0Nubi4u1//f3tk1p5FcYfhhmGGGYRhGfMiWZClrS/6Q
      baW8tms3uze5yd6sq/Kb/K9SlbIrrqTK61hxJNuS/AWSZUsCBEjAwDDADJMLZwjGbAyGdVTx
      nqvuAg5vn+lzunu6+z0auq4jiiKe52HbNrZtd9OkzszMcOnSpU/KnDNK2xuNBnfv3uXWrVsD
      +9f/YgQYihluFPklHMB1Xe7cucO1a9eYm5vDtm0ePHiAoijcvHmT4+Nj1tfXiUQirKyskM/n
      2dzcZHl5maWlJQKBAMVikefPn1OtVrl+/foHCTXGkVEdwHEcVldXKRQKJBIJ5ufnmZ6exrIs
      SqUSxWKRo6MjRFFkdnaW+fl5dF3HNE02NzepVCqcP3+edrtNJpPh4sWLLC4udp3JT3tar9cx
      TZNarYZpmt1dXUVRUBQFVVWZmZkZOin4uG33PI90Os25c+cG7iyfOAeoH+d4+mKX35y/gtw6
      4uWbLFOGwXG5zJRhUC5XiGgqQTGErseYmzk1cQewLIt79+6xsrLyQcR/+fIlW1tbxGIxbty4
      ga7r3cjSarV48uQJuVwOURRRFIXLly8Tj8cRBOFE8AK5rku5XGZnZ4dSqUQkEiGRSJBMJtE0
      DUVRBkZKfyooiiLLy8tD2/okcg31yolzgNcb/0SdXyK3l0No1pg7O82f7m7w4/cX+PPaO1aI
      dLGJWysRihhcvXqVTtumVqsRCoW6EVySpG52ckmScBwHz/MIhUK02208z0OWZZrNJsB75YcP
      H3L69GkWFhbe4wmVJKnL++jzjfod23EcgsEggUCgm009HA7jui6CIOB5Hp7nDYWrn6dzEEZB
      ELpHLHxcgiAQDAZ/FpdfBrrTvF579bbzU3H126vRaCBJ0li4+u3lOA7hcHgsXL69FEXpTt/G
      weW6Lq1WC1VVu7hyuRx7e3vdaaGqqu94Wv+bA5jFtzx+scfMmQUkp87bfImIGsFq1FHVCJZV
      47fXblA4eMP29mu+/v73qMFOFwi8v3jzPO+9Duh3nN5O1F/ujQq9Hc0/z9Ore5hyLzXiOLh6
      y51OB0EQxsLVX/YfeD+uT8Ho4/LJgcfB1W8vx3GQJGksXH7ZJ8Ad13bwHwJdH1cgEOiuf2q1
      GpZlvaPx9LlBezPnjSP+7qEoih/wM/bXe40wqD7oNejHdA5T7z8LNK7OXqbnQZ/3do5J6ey3
      Vf93Bv3nx3SO+rwmobO37nODfg77+fUuN+ik5l69Q9swjfcj56C675i92MbtrP5wO0mn6p+7
      Duo4wEgP8GM6B9mq0+m85wC99WF1juoA4+rsr6uq+tnsFwwGT/5bIJgsk/MvpXPSOci+RJ2T
      XAQPiyt4+/bt2xP5x3+LP8UYhzI7k0lTq5YRJYlsLkdY0xGFABurPxGenkceUXW7XmavUOa4
      WEAMieTyh0SjOtndDDtvDjDiCcTg8G+FCrsZ7KBMLptHDHQoHFXRoxrlwj5b2zmm4yqra5uc
      mR3+5OduOgNBKB6buM06FauFFgmT333Bm1KT7O5LzKZL3IgNrTOdydBp21itDuVSHkSFoNfk
      0aM1mh2Rev41FS9MTB3+sFs6k6FpmbhegMN8HlnVaFeLrD19SrVaZz+7j6jEUJXRA2D/tGVU
      yWTS4LYwbQerUqLZEQgrIcziW17tmUwn9A9+cyIv/1aK+1htj63Ha0QXFimU2lxZNDjIlZj9
      hPGq47TIZ/eoH+V4siEwOxunHdSRHBezcEDhzDnm48NHHrtmUmq4vHm6RiA+Q1IROTV7inBE
      p9XIs7O9Q7vVHAljzTQxm3VevXhNLBFDkUJMp77D0CPsvG0Qcly2t7dZ+mr4szlmtYJ5XGAv
      f4QeiyLvHfLttzdZXJghZ9YoZXNo6s+fXRqos1yk2HIpHT4kNneObL7GNzeXmUsUKVkueDaZ
      7X2SXy+NpHcSYpom9coRO9ljDE0mFJL57nffsHewT80ZfCHnhGWg6/Dw/l9RFA0vqGJMGaRS
      SbSwhNsBWZFoWqMt1tt2ldXHz5AlEVnVMQyDVDKBLApoUQ05liQVHZ7T8vhgh3SpQaDdwJgy
      iE/Fu1FZlhWi0QhiMIjdHP7k4+6rZ1Qdj7ZtEzN0EokkRuxdtJLDGlE1jKZFRiKg3Xz8CEFS
      sJttYnqMVDJFNKrh2FXuP9okGpYRpBDuCI66tvoTIVnB6QQwjDjJVBItolA7yvI4nSWV0PEc
      ga/Ozg2tc1LyfGMdTwhhN5vEYjqJZApd16Hj4CHS6Qy+aXai1wC/ypclk1wDDCsnbAT4/5Rh
      7x/37lP8Kp9HTuQa4KTI+up9BEWjg4TMu13n2aVLuHYLLeSy9eot7WoBZX6ZUC2L1QkSlUUa
      yDRrZSrlClOnZqge5Tm/uEi13saIiPxj/Rm3/vgjD/5yFy2qEdIT2LUKTsMinJqj06hz4fJl
      Nv7+N2QjReHwkLAqY1ktrlw4y+b2ARfnE6w+TRMNS/zhhx++oDt8k5V/Af/v84LqwYPvAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Performance by Pantip Category Timeline' width='192'>
      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
      0CJJUk3Ed6Wyr9bSr1/j0s/pdLpWA+u6Tk9PTy24sXQLrPVcw1IB5mQyWZfHpcesNBGypg2a
      z+c3drdXoVwu1wpm6Vtmpc+vhzSXXshqNqvZL7VdenPWe67ttH/d0ZZe43rsVztmrXxV35TV
      79ZTdvBqN/utlP3r0ojrsV/PtS+93jdd+5vyvtp92DFt0M3chFwuh8Ph2FAhVlWJl9pWN9Lb
      yE1Yav96vjZjXy3s15WT12O/lgOsdl25XA6r1Vp7GHaz7PP5PFardUPltZ5rX3q9a92T9eR9
      1x1gM+K4W5HW2A59/7fdXtf1TYvjbrXsgbfy3km/+tWvfrXplFeg6qnrmsVYzjE2ESadiCLJ
      CqFQGIfLRXZxnvtPntHkb8OmrHaePGOjYVKJCKKoEAqHcXk86GqOqz/dxSqUePRslLbOTqQV
      yiYdnSGa1YkuhBElgehiHJfbRTYR4eHzFxRSi4zPLtDRvnw4H2BhbpJ8uTKBUKTMYiKNy9XE
      yLNHTMwskIqFmQ4vEmxbeTfEF6NjCIJGLFWglEuSKWo4HTYe3r3FYirH/OQYqbxKs7/S+S2n
      F7h8bxBJlsmlYqAXuP/oBS2tLRRTEe4/eopgdeGwyuubGKYVGJuYJ5uMIUgKC6EQtiYXhUSE
      e4+eYve04LCudp4CY6PzpJOLiJJcmePv9mCoBa5ev4NN1nj0ZIhAZyfyCg9mPj7HfFojGg4h
      ySKRSAy320U2vsDYXIzw1CjRVIFA88pTckbHxlBEg2giSymXIlfScdoUHty7x2Iqw9zkC5L5
      Mi3+5YEDgLHRMcrFLEVDaLA4rqERDc+jFRM8ePSIjo4eYgWRdkuWYi5LOl/E61gtLFYmOjdD
      2Uhz+6ebHDh2lJTRxNGOJiQRWjv7mJ6cJFssY7Evv8xyMcdMOEFsdpic0URfmwNncxCH3YlW
      zJNUNdIFHc1gRQfK57IkFtO8GB3B6nDT4rHhD7QxcPAQ9+4/Zd+RQ/x08z66UZlf9TrpVJpc
      LsnI+Dx+rxPFYiVw4QKHDx/k6dgcmWSKIq8WGBnlApm8ipCPcuPZDK0uEdHRzsOHT/jo7Ak6
      WhbZUF1uaCxGQpQLKR48fkRraxeRrE6PS6OQy5HOFWh2rVaTaCzOz1XK/uYt+g8eIl62cbzH
      iyRBS7CH2YlxMvkyNufy+6cVc8zMxsiEhrnz0MnBTif25g7skkIuHaGQSiOWVn+jp9Jp1HyK
      J6OztPpcKIqFwIWPOXRwgKHJMAP9vTwemYOBlZf2plMJ4tESkfTjBorjlgv8dPM+drsFwerA
      5/EQCLRgt8oodgdutwtlpScHQC9w/cpd7E4Lot2F3+8jEGjBpojIFgtej4v56XEUuwtxhTdQ
      Nj7Po9Ewiqjh8fjw+f00N/sQBbBabbhcTbjcbpqcTlZ6pmKhSSZDSQxNxef14PU34/N6EYDb
      169gcbp4MTqKx7vKG2zwCSVEioUibo+b5uYAHrcb0Ll06TI+nweX243T6ajZCLKVI0ePEuzs
      ps3voaunm3wmTnMgQDo6y+OxEPb1TmHRSty8dQ+7zQKKDe/LyJTDZkG22vG43avP7NWL3Lh6
      F1uTBSxN+P3eyn2zSMiKBa/HTXhmAtHWhLRC2RdSYe4MzmKVdNweHz6/r1L2gNVmp8lhf3nt
      Kw92jg09RdUFCoUiPrcbf0sLHo8bjDKXr1zH7XIy+mIan3flsaJH924jW60UVB2327O3+gAm
      W0PTtE33Ad5X3mp59O2iGmJbx5HbthTPpEKl8/7msjcMA30HxAz2vgDQGiyOP+JxREDRi3QG
      3GRKGn6PH4tFotnv4enjJ9isEk8nUnz1QQ8/PZsjGPCBrlIuFtGKaUJ5hS6PgGZvQyxlaQ+2
      8vzBPXrPfEZu8ikluwNdE3BIOqIAM/ESQa+V5mAvUmaOoVABqZwmrwnIRpnmrn6Gnz7ls0/O
      cuXyVZrdfg5c+JR25+4IBuwW8ZnnPJguYKFMV5uXVEHF7/Vjtci0NPt4+vgRdrvC/cEo/+Gz
      A1y6P0lnewuiXqRcUjHUNJNJgYEWCzmlBUs5S0dHO9eu3eKv/u5vuHP5Ik0uF5LdjZpLQ7lI
      2dGCouUZOHSUFw9uoDv9JBcXQLFilAr0HzjIs6EXnDzYxY07T3A77HzxzdesNbni/weI9ICN
      sJKBMAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Performance by Pantip Category' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABM5AAATOQGPwlYB
      AAAgAElEQVR4nOy9aZBk13WY+b018+W+1r713tUb0FgbAAECpGSSIiWKkkzKsmVLshxj2TMx
      P8bj8K8JxvyamQiPImaGsuSQZMsSKYubRYIAsTe6G73ve9e+V1blvr3Mt7/5UQ0QJLFUFbJI
      k6wvoqOrqzPfvedm3vfOOfcsgu/7Ptts8wuK+NOewDbb/DTZ3gDb/EKzvQG2+YVmewNs8wvN
      9gbY5meShYV5vA/x3+iVIsVymeWV0vu+Rtj2Am3zs8h//LM/4ff++b9ExuTbf/tVSO1hT8rn
      8t0JDj3+y9hLV7l0bYxDz3wS2fIoL09S1F1+4wuf4XvfeZ5IepDP/9ovbz8BtvnZxvc8Bnfv
      Y+7GDWZnZ3josYe5cecql++W+NhD+7DNJgsLSywWTXalHE6++RZdo8coLczgsa0CbfMzimLX
      +NP/8BWOv3WWN948ixRSUdUI8ViUcChBNqRz/NI9AqqKpgWJJxJE43EGRkY4/+p3KeoWsK0C
      bfMLhl6Y5it/+Q1SQwf5g3/0ue0NsM3PIY7JzMIygijR09dPUJEA8BwL0xXRAvI7L5Xf7xo/
      60xeOk45NExXUCAYjdJu6Az0Z1hYXkXVYmRjKnOLeYZ37iQgb0QTbPDvv/zHKKkYQ6NP8MlH
      dlBpQ382xszMHJm+YSS7QanpYCxfZ8Hr5ejoLjKJyIbm367m+OuvfpOG5fPZzzzL7akKvckQ
      Dx7Zw3K+TpIiZxbhwZ29RINQ1j1GhvoQBWFjC/UuPNfi+a//DdO5Ko8896u0Zs9x4uJd9ozu
      Yn5ymXgixKOf+AJPPbDzx967OnWFaysBPvXUQYxmlbnlIkPDAxRzOVwxwGBfmtn5FS5dOse+
      oQG6d+7F0BvEUj0EaVNptNCiSYxqHjGUpDeb3LQcNJf4j3/zbR7emcBNHaBfKZO3wiiVO+S1
      UfZFmljRYZ574oGf3w1gm21WS/d448Y07WaB7kSQh554hpdOXSOpOAx3x7i70uJ3/vHvMtwV
      28CVfRrNNr29GWyjwV/86f9HqSXxpd/9R1w9/n3qsb3I+dske4dJay5j+RXu3RrjX/+LL27I
      4Lp75S0O/dKXOJB0aekFms0GNxdnmL57HiWcZrg3xfHnX0f70u8ze/LbuF37+Sdf+jxhdfMf
      abs8R1Ua5H/8o39IoWnTd/R3mcx9hd/+lWf48v/512SzCo7jvud7XdtEb69tvvzSLM9/41sc
      fPrTXDl1CiWo8PC+AeabEoV8HWrXWViaY6nSBi2DWp0kEgkj9Y1y87Xvc/SXPs+v/vITH8lA
      1atFLl4r8rv/6rOYeY+7x89w7EA/w3GZ//qtE4RDGkcePPLzbwTvGn2Yvp4sh/cOY1oOgiQj
      iTAy+iBJ6ly6Obnha2aH9nNkKIWsRbAsm1gixeyt87TQcGwL2/EIBQM4rseRx58kKm183l3d
      fdw4e4KXXvgO80X9nd9btkM4rGHbDj0Dg5TzeR5+4hj5sSvMl1obH+hdKKEk9eV7HH/9FS7c
      nPqh/9t95DF6YypaJMT76cyL0/c4e+EaJ46fIJZMYtkOfSP72TvUg21ZBIKBd71a5vGnnkSR
      wXV9AgEFUdQ49sRRrpw9Rcv5KJII7HvkWf7pb3yc61ev8fprr2HbHqFojLGZHLv7Uhx6+Eni
      gZ9jI7hRWkV3wfMULKNGVFMwqit86+wcv/Lck/SnVO5NLLL34EHCgY3cNW1mZlYYHu5lYmKW
      TCLIStViZ3+S2VyJkKoR12CpYjGQDuKoUfRqjcGhfjamnPgszoxTdwLsGUyzUtJxbZtsUmNi
      vsi+kS7KbbDbTUKKx2rV5sD+3Uji5lUggHpphanFIqMHRgkqEjMzMwz1Z1kqtOhNa8znauzc
      MfBjshiNMrfHpvHFAIO9cZotG1UL43s+iuCSTCWZnJonFA0RwENSVLRojFpd58Irf8dCqc3B
      Z36T3XETP5Rh12DPR5JjvbyzASzLwjTNn8igPy1co0m+6dCbSfy0p7LNu2hWCsytVNi7by/K
      T1gnWdcTwPccTNsnoAjUmwbx2IcbdO1WC1kWKVUaZLsySO9hnOm6TigU5iPYbT+EbbfIt5r0
      xDKUm3lkJUYyGMLzLHL1EulommI9jy/K9Ea7cZ0WyBoBcXOr3jbr1GyX7kgSAZ9yM4+kxAkI
      Nnm9Tibahd4uEQykiKpqZ4QEdFMnpIYoNlcIBFLIvkHd9ugOJze8lo5jsNIsk431EBBFWmaN
      hu3TFYqQa+SJhzJYVo1AIAGeg6ZqG3ySvT++76LbNhE1iGk1QI7QbpdADpMIaOucf5vVVoOe
      aJaaXkBSosQDGr7nkGvkSYUzlPUCjieQDsfQbZd0MIiNQlASf3wDOEaDV195lcGDx/BLE0wV
      bNJSmeurQQ5m6twpxfjX//TXPnRip0+dIhIJIvsm7ehuHtnTw9itK1R1h5GRQaZnlhFlgVhA
      pNpooaoKmb4R2qVFDDHMkQN7NuzRODt9Ck2wKfohdMvFtev86qHPMLF0EVtSWWoaHEgmeW36
      Kv/k4d/g78/9KQ888IeMRta32D+E7/D87ZcZjKWIJg7SJ5Z5dWmFgGATEQx0IcLeeISxho3s
      tfn4rqeQO/DNWSre4evj1/jS7r3caWv0BFVK9Ry21WDfzucY1EIbut6ZiVcJh5Pk2kE+vWuU
      529+n4AsEwuEsZUEpUYB28gR1LrJRnp4fPBQhzaAx9Wpl7llxPndA4/zt6f/PYcP/xErq1cp
      G01+68ivrMtAfevey8ihED4JVpp5JHw+e+CXmF2+TNmXKbQMjmS6eGnsNP3xDLm2ycOZXkb6
      HiYuSz8+xsSVk9jxEexmFV+Umb5zEcNTyPb18+TTzxKU1m/RHTj6CJ7j0xURuXtvnJmlAvt2
      dHP54jl8LUWjVGR6fom+qIeW6uP21TNcuTPL/OQELcfbyGoC8MTOj2E4Lt2KQFd6NylFxPDg
      wMCjhPw2A8kdCE6VB0Y+Tq54l3h0o3r5uxHJamGWqwustBqoagLF15kqTBOLD7InHmOu0cK3
      akyV5nA6ZGl1p/YyEokyX17BcGosNas8vesYvqiSUAIffoEfoeX67O95EMdcBd9DEjxatkWu
      rTPatQ8Zm9GuvSg4VPRV7pVXOyMIAof7HiAkS0yv3iQZH0KWojzevwff9zDX9fH7SLJERdfx
      fBPXMbB9H9/32dX3EGnJpTc+QMDT2TPwJI8PHGR3IslMrcjF+eu4vEcoRLqnnzvnXuf6+AzH
      X/0+huUSDEdZmJxAVNQP/cL4jsWrL71I3fS4+OrfM543UGSFgYE+bL3CrbtTZDJppPsbSZJk
      ZFkmEAgQCMWIRYJ09/cTlDaulrx07a+ZaPuEtQSzS+fJW9BsrXJt+iW+v7BISIaJUp59mW4c
      z6PUXGWl8f6Rgh+MQFAJIshRejWJmu0RlBR6kkPUakvM1/LEtDgBSaI/MYTaIb1BFtcM9h3Z
      nSiIGFaDvzn35+hCENfb+E0jroicmHgdLdzLSqOEKCoEJIlsMMRb02/hSRH2de0mHuqmqeeY
      rax0RhCEd2RxfCg2VlmqjPPmzA00WWW9rhkfkZASwLTbBOQggu+Tq+e5N3+C70yPEZYlJspL
      7MsMkooOEhRUuoIq85V5LN7LBvB9HNdBFCV8z8NHQBQFPM9DkqR3/v6gKbnu/b3le3i+jyhJ
      SKLIK6++zCee+ySSJOL7Atx3qAkAgoDv+/j+2piSKG1cn3VtPEASJHzfRRAkVutLpKK9iPiI
      gogAiKKEAHi+BwibPjzyPBcX8KwqZS9INqAiCBKiAI7nIYsSrucgiPJ72kCbxfVcREG8f20J
      z3PxWdscG5XF9z1sz0UWZXzfR8DH9X1kUcLxHCRR5u1P6u01/SiHbT8yOK7vI4kinr/2nfHv
      /y2t0y7zfQ/n/vxdz0UQxLdni+uvfeYiIAhr3yfP9xDgHRk76gZ1XZefU6/qNj+ndPQk2Lbt
      Tl5um222HOnLX/7ylzt1Mcf5wfHdzes3MFsl7ozPosXShAIyerNOrdZAVWQq5Qq51VVUWaJa
      a2AZLZBVzGYV3fIIBj7c3vhRWu0yf3LyeR7q6+Nbl19nqlJhT/cArt3mP7/2NYZ2P4jYLvAX
      504Qoc6J8auYcoLeSHgT0vq8fv0VLsyN0ZPZQdBr8l/OvMjV3AJ7k3H+7PSLPDbQz9fOv0Ld
      ERhMpjvmPgQol8b59q3L1C2HqYVrXJwdpyszRFje2LHzzckzvDl+kYoXZTge440bL3M7n0ew
      qrw+cZOG7XHqxgvkDFit5hlIdXdUDoCbU+c5M3mFJio3pi7zzasneGjnUdQP1YJ8Ltw7xaWF
      SXzgpevHuZlb4kD/TvL52zx/5yp12+Hq+FkuLs7Saub47t2bZCWDtpIiqryHF6hT6M0m1WoN
      SfBo6G0Azpx8g9XlGc6de4vLd+aYmpzk5PHjzN69wO2pec6ePc2rr5/k1ZdfoWW/d8zJB45p
      GtiuRS53kyUDkuE4AKbVwnEcbN/jwvQ1mqbBuclrKGqIZHATLlAA36dQL9NoVWm7HrXKLNm+
      h4j5bUq2jeUYNFs12o5LpVnB67BmWK4uEwx3ce7ucS4uzhDWoptyHIyXivzao59lfukm+A6F
      Rh3LbDJZXCIWSXNm/DyCILCQu0vdcakanT8srTRLtG2duhPgod4uRnc8Rnid+3ixWiIbUvnu
      lRfp632EqNjGcDxOjl0lEgySDMV5fM+DFCsrax4iz+JabhldLwNbkBDjuzYTUzO4nkcoluGB
      QyMsTExy+cp1HFmjtyuNaRqks10oooiihRnoydA/MIxr6QRiGR556AHUTRzpZxN9xFUZNRDm
      4OBhlnO3aXkQDqfpDUcwjTx383kWS4uowRTP7NvPibvXNisorhLj2eFhZqtVAmqQZlun7dj0
      JnqJqQoeAk+OPo3VLnTMDfo2/b2H2J+KkQgn6U0NsTNkcbNQ2/B1JDxaRhVX0MD3Ge4d5WAq
      TCg+wo5kmkQoxhef+iL98SRLK7d44fblzgoCFAyHX334OZZXpjg/M86Tu0bX+U6Bx3YdJRYM
      0h3rQjebGLaFKApEtRiP7j7K+bGzzNfbPNKdpX/oUT7e30NZb/LKjZPU2QoVSBBpllaIZAfo
      SWqMzRR48KEjDPb3Mj1+G0GJc+jgKJFIhFQiSiabIZnKoIUjpNJdpDQwUMmmEwib8DZEAiGG
      e/ZRK0/Q1X2Apdxt0slBYlqIbHKQJ3YcYEe6j8dG9nBuapxnDz5OaINqwxoiSRVmWgKjUZcZ
      O0HIXCST3cdQPEkkEKI31cfU0k2G+o/QHQ53VHUQ8bg+d48nD3ycnbEAMy2BJ4ZHNuxt6olG
      OTN1j2cOPEqpUScsmizbQR7t6+HmwjhPH3iGICax+BAx2WfPwCjJYLCDksBgPMHp6Uk+efAJ
      goEQQ4nUutfKMmuMV3Q+88DHqVUmyWT3g6PzwPAolyav8dj+p5DMIkagi8PZbmxB4cHefjw1
      zt5UtrNeIMMwPvD/V1dX6e7u7tRw68L3/U1tpI2OAWz5ONt0np/baNBttlkPW2YELy8tMTd1
      j7On32Jqsfier8mvrq77xG9d+D5mpbL2o2th1hprP9smem4Ju2VgllYxKjVcQ0fP5XDfJ8Fj
      PWMZhRzNhTls0wbfwyisYNSbOK06+soqnuPQzucwG/r7xtBvFt9zaa0uYzZ0rGoRPbeC5278
      JNhtN9GXF3FM5x25zEoZH/CMJpZuYBRyWC0DW292XA4Az2yh55ZwTIt2fpl2qbLucdxWA331
      B2tt1Bprx2COef+aNr5rY9YbOK06rUIJz2zh2GtrtWUZYTPT0zz29NMUlt8gFo8C8NbrL+KK
      QbLdWWYWKkRCEndvXMWyLUQtSiLTg1UrYPgKH3vyGIq0MZXCblaoLy6TTSQwC8u02xKBeBR9
      eRE5kQbfwag1EIQWbltEEASMeotwKrpxAQWBQKYbe3YWSZbxXQtfVDHzK8iKgKjIGNUyjuFA
      u4ga3Yyr9f2xCot4UgxZAKNcQo6k2ExYbbtYQOvpQc/liQ314bRqNBYWSSUStJZn8UL9+I0K
      NJqoiS6UzooBgJ5bRk2m8cwGjqMgGBW8RJIPDzvz0VfzhHu61q6RyGAWcwRiUZxWC0mVaZer
      KGKLdlNADXhYbRvcMFp3H7AVXiDPo9Fsgg++WaPihomLLS5eukqTII8+uI+ZqTEy/SPYLZ2W
      K3BgR5bhPYdYmbvLzHIZCXD8jd/NlGgKNRzENeqYuo1vm/j+2t1SAFr5HIIcRBB9PMdH0jT8
      j5AD4bWqCKE4oiSAIKGENARRwBdERFXF1XVENcDaYmx6mPce23IQJQGjWCCY7UNRXczmZmQR
      ECQVfOf+U6WAKIJRyOH5Mp5tERkcQVZVrMoKeqHcWUEA33UBD6NYRJBkRElYp2YgEMpmMMpl
      EFUEu4kcS4MAYkBD1jR8xyKY6UaUBUK9/YRSUexmi9rMltUF8rh5+QJoMexmjf6REdRwkkcf
      OYpdXeHKrWn2jx4kFgmQTKVIp1IEQnFCQZX+4b0MdceR1ADKJmP0ZU1DVMOEe7pQImHseoVg
      OoutN1FjKSTRQ1CCqJEwtt5GjmwsfPjduJaNGo/jmTp228AoFZC0CEpIwzFt1EQSHBMpsPkx
      3o9AVzdeq4kUiuA0a5i6ixraeM6BEtbQF+dQEimctkm4bwA1FkNNZNHSKWQtgCiLSJEEkiIj
      bCAaeL0EMxkcvYWa6sVvl3E9dR13/zVc08T3BdSwQnO1iO/aOM0mvtXCqNRRolEQRORAEEFS
      8JEJJqMI0lqM00/UCL5y9QoPHX3oJzUcAK5pIKrBjiXdvBe+Y+MhIm3KnbrNT5OObgDLsjp1
      qW22+YnQUSPY8zzAx7JsFEXF9xw8ROT7R/SGaRIM/CBpwzTa+IJMMKB0chrAWpis4Thoiorv
      u1RbTaLamtHYti0CkkjNMIiHIpsO77XsNi3HIx5cS+vUjQaCFCQg+tRNk7gWQcB/Zx6dlc+n
      3qoTDEbAtWg5LgktvOGzCNe1qRktYloM+f7pu2EZBNQgrmOBqGBaOrKiIfguirzxGK31YNgm
      QVlFN3UQVcLrTCF1XZu6aRDXIvfXP0BYDYDnUm03CAejuI6B5QuEZZmW4xJRFVxEFFHcCi+Q
      y4vf+jpPffYfsnj1ZZyuo4SsIp4aZfLOFZ5+9pMszs3R19/D9VuTRIIqDz15jECHV3Vu/hz/
      dbrGv3vuM9y4c5xJX0Cmi6d6Vf74zEWe7Y8jhZIIci/P7d618QF8l+9deQXTMnj4yOfYFWzz
      rSvnqVsWgxqIgkjvyMdItu/wrZkW//bZT3VUvpXcNU6s1DBsE8moIArwyAOfY198YwW43rzx
      MpakoAt9/Nbhw5jtEv/7d/8L//bX/4A/+87/w2c+9W84ffaviCZ30xVN88sHHumoHACV6jz/
      7oW/4ytf/B/46pkXkNQw/+xjv7aOL6fPC5dfIBrJ4PoeM6UqrmfxB8/8JnfvHWfclrFMk1ar
      Cr5HKBBgtt7mH+wYZnjkGF0BcWvOAcLxBIWlaZqmj+Ca2J7A1WvXyPb2M3/rAsVmi+t3xgnK
      UF6ao9Zhzcm2aoyXG6SCa08WVxJp6y183+Ty8iID0SjJcIym0eD28vTmBhEkvvDoZwkHNBIB
      FSmQ4XMHjmA7NpIANdvEapWYrrVIqJ1/wvX2HeWTQ30ktBBiMMszO4fI1TZeF6hqeTx36JMY
      jTl83+PCzB0G091Icogndx4AQeTQ4H5Ep0lVL3GnUOi4LOFIDw/1D+F7Dq7v4Xoe6z3SSIdj
      VFsVzk9fY+fAg/SGVUzXY76m86kjT2A1VognhnkkkyXbNcJoV5p7+TwXp94nJbITSGqYRn6B
      ZFcPRnWFuXwNAR9sEyEYIRZLsGvXbtLJBOFsL4nOage02zXqhs5kfpFcvUTN9hhO9aE3l2i2
      W4yvzhHUUsQVhT19m7j7s5Yd9Zev/hm6nAKnTqE8z2tTk8QDASxBZiCeZKW8TL3dYLKwhNth
      V8PKyg3++NRxdnUN4xoFzs4t0h3deGRrXBE4dfckgXAv+VqJptliZnWGiuWiiGsZdMf2PEwm
      3kOttsj1xU3eMD4AVVYRBXDdNuFQBk1cb06wQDqaJhbUeHjHUaaXbrDasqjpFQZjQV69dREl
      2k2tMsf1cokHBg6RUTUSAZmxpQnadNgIXosF8jFNa61AkyDg+QJmS0dU1LWaL5KM0WoRDEdw
      zRa+FCAU7PAOAPA9dNtmsTDLcPcu6q0aiUgSVRTQTZOAJFBut8hEEpuyAXzfp9wsYXsQ8A1K
      ROlSPJBDaKJPxWiTjiSQ8NBtZ00v7SCm1aLS1lFkDU3y0R2PdDi2YVkcx6SkN0hGkziOQ0gN
      0DLbBAMajt1GkIJIONi+iGk2UdQwmtx5zVk324TVIPV2DV8MEl9nwJ1tG1QNg3QkTk2vIMoa
      igBBRabQqBEPJ7GtJpYvkQpFMB0TWfCpWw6pUGTbC7TNLzbbwXDb/ELT0XyANVzeeuM46f4R
      cmOXWDE0QrKD5frgObQNA8e28UVp3Zn/68Wym/zlWy/w0PA+bk2eYKypMJyIMbdwle/dOU/R
      cLk6cY7ZWoPBZJKvnXmevf37UDZZT/P07Te4urxAX6qPACbfOP99xsoVdiZj/NXZlxjNpvjG
      hVeZqtbZ1/1RahC9N7mVa5xYqJJbvsKJ6TF29+xE3WBW2N3p87x65xxNMcVgNMQb11/h9MwE
      EcnllbtXMHyJ0zdeJG9J5Csr9G9BSuT47CW+f+sMYjDOxXvn+M71t3hw54PrSImEO1PneWPi
      GpIa4fTtk9zO59nXM0R+9SbfuHaOiiUwPnOee6UK9eocz9+7Tbds0ZSTxLYmJdKnXCqwtLTM
      7PQUhfkxTl24yde/+d94/aXvceX0G5y6dInT5293fORiNU+uUcH3HFYbKxTra1WVzy3O8VuP
      fJbJ+VNULZXVlRuM5VdZqBY3b5z6HjOFZXzHQLddfLfFXLXCYjlHqV5iuVZCEIN85ugnqVSX
      2Hhk04cM75qcnL5KqVpld/8ojeoC9U1Ett5aWeYLxz7HxOwVYC3hpVxZ4NbSFL1dw5y4fYpG
      u8nY7GUarohudb7wQSI1Qo/UYqkl8PhgP0N9R9adErlcWqZp1rgxeYHphklPYm2DXpyc5PNP
      forFlVvMlktYVotyu0mtVeXS0gKivfbd2BIvUDCaojx3h2Ayi9Gskh3aQyoWQtSi7Nk5zMje
      vchO5xeyL7uTrBZAlFQO9e96506l4tNyDGSlm0eH+/EEhb7MEEOxTUSBvoPP6MhDHO2OM14s
      06ivsHPkGAnBJpvdQUYLIEsyJ28c5+kjn6DTQRJTs+dZaftMlZbI6y2e272LmUpjw9cR8TEs
      HRcFfI+C3ubZHTuJpncTxiMcDPP7n/x9hpNpxmfP8O0bFzssyVqy/VNHP8Xy0j3OTtzi6f1H
      1vlOnxXL5wtHnmKlkmPPwEHmFq/Sdj2CEjQME9uFx/Y/RZ9sMbL7aX511zAr1TJfPfsCDbZE
      BQJJUsh2Z+nq6SOe6qKwMEGlaXLk0CjJVIqgFiGiBYlt8NBmPSiSTE8iiyCIBAMxJhevc2hw
      PyfHL/PY3icplGbo7T3MnnQKWZLpimc3WbRKoNlcYarhcyghMOckUdsLpDJ7GEmmUSSZkGBx
      I7+K48FIuoePWLn8h0ilhnl4cITeeA8aDeYMhSeGd75zmrteMprKyfGbPHXwcarNBqJTY9kK
      8FBPlttL03zswDOERZNgpJ+I6LKrf5RsqLPBfbJncHJqnE8cfhJRUtmd7lqnmiXQHQpyfn6e
      Tz/8aazaDLHULgSvzWjfICfuXOXRfcdw9GWaSoYHe/qo2z5He/uw5Sij2d6tN4I9x+DGtZuk
      B3Yx2JPayqHeE9uxkSVlS4PhvLdDPjps02yz9fxEc4K32ea/N7bECF6YncP1fVZzK+8Yf57b
      Jl+ovvMqS69y+fIlljdRyuNDZ+A5nB8/y91CHgDbrPHKzVPkW1VeufYG371+ilxliReuvcFM
      tb75cXyXyfzCu/7tcC83S7m6wCt3LlJqrPLitTd48fbFjp8E/2BQh7P3TvOdK6+yrG/8BtRs
      rvL9GycoGhb4PnMr9zgxeRvX9zFaBWaqNa5PX2S+XmexvLIlKZHgM7k6B77HxfEzvDF+kw80
      532fG9OXuLw0j+/7zKzO4QC+Z3BvZREA26rzys2TrLbajC/c4OLCLJXaEqemxzBaJYrGmg26
      JRvg2vnjXL49w73bd5gcu8FbJ08wNjHGuUu3uXbpHGfOXWR6aoqWLRAJd7bEBkBLX0WODHLu
      7kkc4Oqdtwil4rx5b4rnRo9SataZWLiB7isktM2Pf3vmHP/p3Jvv/PvW1EW+fuMMY/lVdkcc
      LhdMnh7ZQdmwti75WpA5tu9xmnptUw3yXr11hkd37uHF6+fBd1hoGNCYYare5JWL3+DUwhIX
      Zm7wypUXmaxUtyQSdLU4zf/12tdxnRYXZsdIhOMfuF6uVaEpJrk6eY5cfpz/9/i3sfG5MX2a
      b12/BMD08hQHhvbywqXvcTZXxCqP87Vrp7kwfZW3pm4RvR+BvCWfS3pgN355hny9zdxyiSef
      OEBuuUpKExmfXsRzLJRYlkcfPsLNa1c6Pn440kfcKTDQexAZMGQVp2kgiiY3py5weM9TDPXs
      59cOHeDl65v3ahza+Qgj97vlGHqOq0Ud1W3z0Mh+rubKPDLQx8mxa3ziwKNbaoOUi2Noqf3E
      lY1vAE+QCGsZRLcBosIDvX2sOEGcyh0sOUXbMvjU4WfJhiNML13l1cmxjs+/O7OLRweG8AX4
      1NHPUlq5TukDggqkQIqdYZdUcgd93fs42tOH3ljmVrmJ7Fl4vs/eocNMzd3g2IFn2R1VuLY4
      y1MHnuJjg31MFVb4qzPfx2SLNkAoHOHhxx5F8n36MjHOnL3FyL49uEB/TxpZ1ZKGotwAACAA
      SURBVMBqcv3aNbr7Rjo+frUyyX+6dBbBs7mXmyAZSVPV62SjKYqGwGg2QbW2zEs3L7F3cPdH
      GEkkFYmj6znmWyKPDA4TDUb45ltfo+qJ1NstXDlM91bEOr2LlVqNQwMjm3rvzmSCv7/wPQb7
      9jNbWODPj38NBAktOsDOVIaIKtMTS9CT2UVI8DfVg2A9pMIJ8FwuTZxFl1PEPyCA1mqv8pWT
      LyLj4QDJSIJAIM7R/h1EtRCzxSWu3HuVsysVDKNBw9DJdO9if6oXRwjxaH8vruvg8wtgBOdr
      eVKxro60J3o/TKNO01dJfwR1apufDh3dAO+uDr3NNj8LbME5gP8+JS2ELdWDf2gG75rA2ymC
      b//OX3vw3e964iMgbL6koX//aj8yxtvjCO8yGbeibOIPj8d9WTZ+jXevg/+2TPy4DAAIP/ab
      jrDWneYH1WPWu17vnu/b/Kgc74cgCFuREunz0ne/Tbp3gGrbQm7rKIEgh596lkSnGmV9CHp9
      jr+6dB6kIH/07OcxWwX+t699hf/59/4Nt6+/xQt3b/DpA4eomy57dzzGQz2bq1c6uXCJP79y
      m//j138PcHn93F8zKR9mj7hMzpY5tmMXL964TDiU4Pef+kxHDS7fbfOV5/+Yw4/8cxan3qDa
      tvjc019kOLyxpJgT177HUqtFMH6Y3zw0yjfe+hq+1sdTPUn+7t44H9//OKevfJNU9wOkQxE+
      c/hYB6VYo1Zb4H/5+6/yJ7/9L/iT17+LLwX4l//gd9DW8XV54+J3WLRNBrP7GV+4gyNq/Kvn
      fp3pmTO8trBEd3KYammKiuWxMxHh0mqVL+zdRc/wMfo1ZWuMYN/38T2fYDCMosjYjRyLxZ+c
      fRCJj/AHT3yC2P16PJIc5fGR3UhyhP3ZJJ967DdYXJ1FUaSPpLb1de9hOPp2OIfAE7sexBcE
      AsEomaDEVH5lreeW53W8MBaCxLFdR0CQ+Z1nvkh/PLahDp5vk2/b/MYTv0mzMgm+SyycQXHq
      TDZNdmf7mFmdYX//Xtx2kabRYLJc6bAgENAyHO0fxNJXGBp+kkOpIJV11fjy8QTwXA8lmOG3
      jh7Dckw8z2f3zic51pOm7Up86dinEB2boa5hRrsy3MnnuT13d6sKY0E03cPjx57gmccfon9o
      iFCsm97UT85AbDWX+b9f+SYP7DhIo11HVoLI9x+pV+ZmeHTHTnZ272RPTy+T9w9ONkPofjNn
      226hWx7h+xUv2rZLdzRGuV5ioGcPsm92vD+AIKqEFAl8l6+98VcQHSS6ibpEERluzFxG0rLU
      Wk1sJFJakHpLJxPP4nkOnzzyLN2JLqrVBc5O3emsIEBQ1RAFULQ0xcIYiw2TyDrTqBuuwNGB
      3SzmrnN+qUBGUynqDe5MnMPQ+vGMVV6/d5OdySTp7lGGwiFUUeD2/G2abJENoOstwuG1IpKN
      agnDV8gkYj8xG8AyG0wUVlDUMC09z76hB7HbVbRIgmazSjySwHMMpgs5hruGCWyis8oaHuVm
      A8WpsuDEOJAMUbY8QoLNfK3Orq4+losLBEMZsuHOF9U0zAauEGC1vEDb8RnuHiGywbMA02wy
      XVxluHsIwzSQfJOy6TGcTDKTX6A7PYQmOBieRKOZRwtniQc679YtN6ukwnEWi/OgxhiIJ9f1
      PstqMlMusaNrkGJlCSmQRMEhEQoztbpAf2YIo1Wi6ckMJtM02k0Cok9ONxjpdH8Ab4t8xNts
      s1V01Ajezgne5meNLegS6TEzdoe7d25S1F2m747TNdDP8vQ9JmYWCYc1rl29QtMWyCRjnRr6
      h3CdFi9ff4O7xRJ7ugcQgLHpt1i0w1y+d5w7hRJBv8GLt88Riw+S2ExlOt/nwvhbnJmdYLhr
      B6ro88Kl77Gg27itHG+OX0FUIpwfP8tYqcSebH9HVEDXafGda6fZ1zPMzclTVMQ0d6dO8db0
      PQa7RtA2aAj7vsu3L7/G/t6dCL7L6XunefnmKZLpXYyNn8CLDXHq2ncpuwGKtVW645mOu0Hn
      lm/z5thlhGCCc3dOsdyyGE5m17Ve0ws3OD55nUAwyhs33mCsVGZf9yDF0gQv3b2OpEYIejVe
      m5zCay3z/YkxehWbmhjbqi6RIsO7dqO3bHrjsFBqoQgCi0tLCIJHvVKk2jDwXLezzTHexfLS
      VSabLsOZtS+/a9V4885ZlvQmR3c9ha3nsJUkGaHJZGWz0ag+2eQA1fIsVcvGM/PcKzawHYtX
      710kHk5hVu4x3/IYuT+PTjC7Ost4fh7PbXB19g6FVpV53eep3jh3NhFZW6wscGVpZu2zEGWO
      7X4QSY3TIxtcm7tD1XLJVVa5PnmWpqfibKIJx4fKVJjDMKuML49RI0Fu6TL5dSoTs6uz1I0K
      N+euEc8cQbCKtFyP69N3OLhrlDdun2UyN8ZUcZXVWoHF8jIXlheJS2tydL4/gO9z4+IZ9hx9
      kp5shsH+PiRRYGjXfvbv7GJhqcajx47RWF3ouGfkbQRBZFffAe5NnUX34MTN49iiQq5WY375
      KgODjyA6LT72wLMsLk9tehzD9Xluz36mSiUcT+Hzj32aZnUe1CgPdCd4fWKM3f0HuDF5BrND
      su7qP0A2GECQYzw2vBMQ8T0X23U39YTJpkbYlfyBwTm3dJPhwQcJhdI82DeEIAj84S/9ISPJ
      DNfHX+MbNy91RpB3UWjbfO7h56g0HQ4kVRqOgLKuB5nPquXx+UNPsFJZxnZtXHetF8RThz9G
      YWUWRQ3y4MgRgpLIM0c+xZdG97BYWuFP3vw2TbZABfJdm+nZeax2E8uXiUdjJOJhWrUCc7kG
      owd2MTcxRqp/J6l4Zzsnvk04kmV15Q6x1E4a1XmO7n+Og9kM8VCEq/PjqJJEdyTCxdkpntj3
      MLFNejUK5Tlmmj4HkwoLhszK6m2S6d081tvLleUVfvnBT1IrjpNK72JHMt0xL5jrufQle8D3
      0EJdRLwy4w2PJ3fuQ91EVprrufTGkyxUyiB4DGaGCcsSnucRi2YJeg0krQsNm6GePXRHOpvK
      mgoonJmd5LHdDzC/OsVg/2H2pNbTKVIgqYpcXJzn4weeZmX1NuH4EAHBQfIM7hQKfGzfYyQC
      AVxfoj+RZrVlcKSrC1MMc7C7/+c/GK5tGQSVre0P4DgWriAR2ILmEdtsLR3dAPX65rOrttnm
      p8GWHITNT41RrLUIhBOM7tuJCHiORdNwiN1vSVQr5vCCKZKRztXMLBdWaLYt4qksTquGEk4Q
      CwfxbIOlXJ5oMgNWE08OEdNkVgsVunt7NlZJwffIr64QSXbhGXXK9TY9vb2oski1lMcRNTLJ
      CM2mTiQcorC6ghyOk+xQk7xWo0qxUqerdwDZM3EEFaddo1xv09vXi7LBQz3HarOSL5Ht6SMg
      ixh6nXLDpKcrRWFlhXAyi61XCUSS4NlooVAH1Vafer2Jpork8iWSmW6cVhUhECURXV/lCcdq
      s1qs0dPTTbW4+s5nDmC2m4hqBLNZxvAU4ppIRbdJx4LYKAQVaWvKohRXF3n+75+ne3gXN8+8
      xsW7y6zceZMXLs7TmLvO6Ztz+JUpCmIvg5nOnZAGNI3K6jJSUKFUNalXi2QzGcorC5QNj1Qi
      TL1hUivkMByPeFhivtAmk1j/HIxGibavsLSwSKtZRQ5GSMQj2HqZxbJNOCjitJtcuTVOV1Sh
      YspUC8ukMtmOlEVZmJ3CU8KkYirXL19CjnVTys2haBHisciGo05np6ZIZ5PML5RIJ0NMTM2T
      ScbJ5xZRYhl8xyK3vEC1WsUTFGLRztltzUqB62OzqNgYjkA8LJArW7h6GS2eRl7HXp6dmCAU
      UVjO5bHRaNULRBNJPLPJpUuXiHcNUqtWqRZzVOtNKtUqnm0TS6wVRd4CN6jArtHD9HV3M5iE
      mtxPjz+PE+7n0KGDdA3spLRwD93cZH/eD0DERXcV4gEZx27jI+D6EIgk2L1jiKXFFTIJDSEY
      ZaCvj0q5Tm/X+o7c30aNJAnJPoIkku0ZIBn0WCnpWEaLdltncWmFSKqLdDyMYzsEQhqKLHbM
      5Zvq6qM/LjJfstgx3Af4ZHsHiSk2+erGbTAPgWAoBm4b33Vpt3Vyy0uUajr1conVYpm+3l4C
      qkKzVmQ535lgOM+xWC3rRIIS4XiaHcM9LC5XCPhtSpUqzrq8rT6SIlOvtQmGIgh2g1K5iueD
      HIwy1JsFQaI7mwBPoLu/j2wyTLXeZGJyZuv6A4BAOBwh3jVIe/kGt1YlDuzq4e71S5w+eRJf
      0pDVIIH1bPENYDXKhFM9CKKEJApIkkKjVkFvNliYn0fTVC5fuYEsi0yP3aKoOzj2xk6vzUaZ
      5XyVYDBIpbjKallHkx08JUZYFVCUtUM1RVHQojFKy3PYvsIGWx6/L7VygcXVGsloEFGSkUSo
      FFfJ1wyi2sYP9KKawtTEGKF4mmbbJptKIIgSPT09CL6HqqjEYlFCkTi4FqbZodN+QSAcCmBZ
      Ds16hfn5RaKJJK7nEUlk0dYZo6Deb6UkSxKe55JIZ2nrDXzfR5IVRBzm5xYQ1QBBLQLIpOMa
      pml2PiXyv0f0ZgMtHO1oVbYfxbUMTF8itAW9zrbZWt7ZAJZlYX6EptGwHQy3zc8eP/fnANts
      80H8uKblu4zfvUN6YDdeM89q3UZtL3NjVcBevM5cS+N//Z/+4EMLyl46fwFFdqjVdXr2Psre
      /gTF/DKlis7QYB+Li8u0TJO+rhTFShNNEUj0DGFWljHECEN92U15G8bmT9Hf/zSSlWO6rnOw
      ezfNdoFCbR5TTCJ7DTwhQDIYQLdMopEB0toGTjZ9h8nlc0RTj9BuTGB7Pr3pUcKixVh+Cl+Q
      SKgKlueTjA4ju2VmG20OdG+uF9mP0moXGC8uMprtZ65eIRJIEJU9ZqpFjvQf3vD1CpVJmraB
      EuhlIJZktnAH0/XoimQoG01CgQSN5gyBYA+KKNGb6FRck0+pOkHBVkkpLm27TUDrpdFYRJA0
      dnXt/cBxCpW7VJwII/EYt3N3Odh/iPnSHKoSZSA5hGEUWa0v0iZMSpVYqi6RjmZpWBYD0SQB
      rY+Q/B7BcFNX3+TktQkuXLzC0twkf/fV/8zdqXnKDYtf/+1/TDYsf3DZuvs4jsPo0WPs6E0B
      Po7jcO3KZSIBj9NnTrHS8CmtrnDhwmWk1jJlU+Ti2Td5463LnD7+Ok1r416ihr6EJwbxfJuy
      XnunFEpEy+KhsDu7g6HUDmzXpNQsIIoS4kY/Th8SWgrfFxjOHiQsKwgIWFadSGSIkChQaJUQ
      BRF8h0q7tsnq0++NosQIyRLlxgqipCAIAoFAfNNJPS3HZig7imkWAYHB9B7wbArNVURBRBQE
      NDWKbdexPZuW/dHU5HcT1dKI+GvdIT13rTuk7+J6zod6zeKhNOAhikEiaoi2UcL01uLAwCcU
      TCMgsSu7m1QoRiq+k2QwhqaoVNtNGu0KPu/hBZIkCds0Mcw2b544RSwSIpnK4Bo1/vIv/pp6
      MUf1A9bAdy2uXb+B6brM37vGfFOlP+pz+84YpifgOA6KLKFpGgICalAjEg6RvO+X7eof5pmP
      fwxtEx6iutHEtpvUmqsYrk3DqGN7Dr5v4QkBRN+k1GoSU1QUJU46kqKilzY2iCijShLgs1S6
      C2qaoASipGKYdUzPJRZMkdAi5GvzmK5Dw6jhdUjRVOQAggCaGiUeytJsl1DlwKbvyqLgoxtl
      EIO4nk2+kScdjoMYIBnpptEuMpDag6aEsK06K7WVzgiCgCqteXBMz6c7MUhLXyYQ6CIoetgf
      sl6qvHaAKsuBtXRKOUQilMG2a9iei4+LjURAFCg3i6QjXcQjfcSVAL7vU9VXsHkvG8B3mZue
      JtrVj1XL46AQjUWplOvEIzINS2Kw971jtd/uElnILeIH4vitMpWmQbZ3kHQ8zCsvv8DefYfp
      7clguSKu1cYHQgEJT9KwLBNbr2L4Qfp7MpuK3zGtJpISQcalZVu0jDKJSDeW4xBSAjSNMp4Y
      JKIolPUKiXB2w2XNHaeFJwTQ23lszyekKNhCGNFtIEgRwrJIxWiSDGeQ8GjZFiF14y1M34+W
      1URTwtT0VQKBFJqi0LJahNSNHyo6TptKq0oiksVxbARs2o5HQotS0QuEghlU0cPxRSyriqzE
      Ccod8nb5Di3bISBBuVUjFemi1S6BFCIa+JCT4PvvDalB2laToBqm2Vp7ryx4BBUNw7bQVA3D
      aqIoESQBTLuNJEDDtkhq8c4awR/mRao36sSiW5MEs802m+Hn/hxgm20+iC0ojLXG9OQUkZDI
      5FyevQePkIn9uAqQX10l29XdsVBlU2+gt02iiTh6tYqoasRiEWyjRbNloIVDmE0dy3ZIdXWh
      16pEEptrlI3vozdqOC5E4nFEPOrVKqIaRPIdjHYbJRTFMVqISoBYPNbR3AfftalWaqihMIJj
      Yjo+8eTGZbFaTZp6Cy2WRFNlmvUqtuMTi4Wp1RoEQxHsdgNZiyD6PsFw54LhXNukZThEoyFq
      5SqxZJx6pYKoBIl8SMyRaxu0DI9oVEOvVVFCUdr1KoIaJBqN4NkGtWoDLRLDNnRMw0KLhLAs
      l1gkgCcFUWVx6zZALreMjIGvJni7QN0rz38DJRQnFo8xm9MJqz6+cRp8ByGUIhxP4uhVLE/k
      2Wc/vuFQCV+UEZwqhhFCiyVolMv4sQiNeoNYKkW5WCGdjlGptvCsNvV6g3A88cH1895/NFpt
      k4imoLdMwrKNKwawGjXSPb20Wy0k38YPRnFaNXy/s2VhPNvAtBw82oQ0FatRxY3FETdYBVjX
      deLpNJViFS2bQlY1fKdBo97AcX3Ax2i3EEybUHw9SSrrxafdqNFyJIKKQK3eIBJRcXwFoVXD
      CYU/MCus1ajRslXCmkS1XCahhpBVlUazubYBXB9FEWkbJslYFNOq4loG7ZaNKPjEk2s2RudT
      Ij2HfKGE7/sM7D7EsaM7uHbuEhcvXcULpXjs6AFWcksM7NiDjIcQCHNk3xB7Dj5IvTDHUr5G
      LBLb5JcSYqkUlmljNWtosQQCkEgl0RtNBAFa9RrheBwlGEILfhRjTiAWDdNumyAIiIEIAcHB
      cX1818SXgkiisGk5PgzLMIimM3iujSDJxCIaprWZKnfC2h9/7WfBd3AElVAkQjqbptWs09U/
      SCCgoFfylMqd6ugjEInFEAQBJRgiGFAQlRBBxcN2/A9dt2h87YZSKRYRRAHbslECIRQRPG+t
      LmgoGse1TFqNGqFYnFgqSyYVwWwb5JaWcdkSFUhgaeYeoVQPkq1z6WqZh558lFQkwPPf/luu
      j4U5+tAjmEKEmNCP60M4oaFqQfaMPkijuIIlSZvznXsOjZZFKBigXmujSSZ600QSRFzXJZpI
      4Rg6AXXt1hLQQh/prmxbFoISRJM9DMPEsm3CsTi4HqFIBFUR0MtlJFXreEZaIBKjVquihaO4
      loH9/7P3njGWpeed3++ke++5Od/KuXP3dE+OnCFFiZRIUWuTshe72oUNGAt/s/fTwvvJhgAb
      huG8lnchQNDKUGJYksM0mtwTOvd0qO6unNPNOZxzT/SHag5JcdRdVXNrJHL7D1x0dXed97nP
      +573nPdJ/8cWCYX2v6H9fpV6qYw/EqGrd2nUG8geH67r0KhW8YciuI6Nx7/bUlby9q5+A0FC
      9e2Op/r94DoYhokaijw8FVqQUX1eQuEYequB6PGhteooagDL6CIJ0KjVCYbDuJaOx7sbM7GR
      iUZDtHQLkc/YCJ6bn+P4seOflTgAbMtClORDLYl0HRsXAfFRl8hfOXymbtBHeIR/aOjpEejn
      91Kz2aTbaVBrasRSfSQ+oSl2vV4nHI707OlsWR3ynQb9oTSVVhbFEyfiVXEdi2xjh1hwgI5W
      QHdFArJIo9sh6EsS308uEGBZbSxBxTHr1AyDvlD6vvfFpaE38UkChU6DpD9CoVVClHwMhHrb
      KNt1HQqNbUKBPkRHo6JrP/c99qOLRq5VJBUawiuJtPUKTcslE4hSaOwQ8KcxjSpebwIcA9XT
      u4ow17VpmwY+0SXXKpMOD9LRiiCHiO4hENYyTYIelXa3heoJUG1lkT0xIl6Vtl6hrDXwKcHd
      9XIFEoEobdMi4fPvlkRKPS6J/Hmq8ZvXP6J/ZITNuWnE2CDxoI+Z21dZXttCFGH67gK1RoNq
      foul5WVy+Ty6I5FdW2CzUKMvndx3ed9KcQ6jm6dkOrRNi43KEoPRYRaz1/GoSbpGi4XCXVRf
      krgaJl+Zx1QSxL37iNLaHd5beBXUCdaLd1DcNm0hTMTjpVRb5lJ2jnanSFCGrOaS8LjMlbOM
      RXvDDPdTaK0lltsWxcYa2WaemC+AKAf2TYsyu3OdgC/AUqXEQCjCUnmFdnuHbDOP4Ilh2xpL
      hWkK7RKGI5IIxHq0ARyWsxeZqbfodDYJ+fzMlzbRTZ2NyipDsZEHypnfOc9iwySumLyx+D6D
      4SDrzQ6Nzg7xQB+SINBsb1AwZAaCYe7m7tLUa2zWs2DrhANp5MMpifwZVJ9M0w0yHHS5cXOa
      7XKL00eHmL79EUo4TatSZqdYYSShEMmMsnT3GjMrO5RzO2h7q4n7BUxlzgAuouhnOKAS8O3S
      +NW7DSrNbQrtKpPpM5haFhOZuiUxHtpfSSSiysnU1K4cyUc6EKNjaDhWi4IhEJFFHEEhFezD
      sjWKjRynBh7ruQ1iumCYdRzXpq7X2Kqt0TLNA4wjkAyN4Ng1EGSOp4/SdSUcW6PezpNrlRmN
      jeMVRRpanvV6sUcaCEwkT+KVJExXJBkcRnAMJmIZwMV8yPIfSZ9GFgRC/n6GQ0m8njiC3WCn
      kcN2XRTJS67T4Ux6FLNbIpM4xcn0UQZCEfLtGnezM4dTEunaBm+9/hOaFujlHUKZYRR/hHNn
      T2M1S9y6u0Bfpg9ZEhElEVlWkGQZj6LgjyQI+xXC8cSBshtnd67RRcbq5vjJwgd4JYVKu8hA
      eBjXBcftslZaomWDYJbx+Pv2HwQTBERBRBAkRLvFveImIcWlomu4dotCu4ZXtLidvUfEn6Jh
      2cQ8PfScfAwRWZQQJZXBYOp+O6P9I6TI3N68hF/NUG4XeXPmu1iCl1R4AFHYPdJmwn0EfAlM
      o0ZV6xX1ze48SoJASJa4vXUFnzfCrezcnpL7REFEEkUEQdxdDwTAIREc2M33ck0EUUUWBPLt
      CgOhNKovgYBMSvVR0yrYfMYFMe9/8D4vf+7lXonbE2rtIkF/6lC7RFpmk7arEPE86hL5q4ae
      bgDzAK/gR3iEv098pnEAx3Ee+cof4R8UDoEYy+JvXn2V1OhR1m6dZ7sbwG0WaOoOly+8R2Zg
      iOzWJh6vxIUPLrCTrzIw1N8TY6TRzPI/v/5tPjc+xf/34fepWRJj8RSLq9d4Y/E2dd3kwsx7
      zBZy1KqrnJ+/QtkJMR6LHkjemzd+zN18joH4AF5J4NqdH/J+3uR0OsG/f+Pfkux/gis3/5ol
      I8pULNIDDX9O18oCf3r5PFttjaOJGP/na/+eM5NP4tnnRF6ffYd3F66RM/xMRoN8++L3uLh8
      D9du8ebsdVZrLS5N/4jNjkW2mmc0OdDz7I67S5c4vzyLP5BCNrL80Yfv8/zEsQdec3vhTd5Y
      LSM0ljm/voRfUfj+9TeYLeQ5OTjOztY1vjV9i4rW5tLMB1xanada2+S7d26SFDt0fSnCh9Mf
      ACzbIru9Qa5QotuqU6jUee31NxAkmaUbH3BrZo43336PTtehtrFIqUfxMxuFkFemazaxHIlC
      LY/pwoXlaVRZge4O8+UOfo+fjWqd33/xK2xtLx5MmOvQ1HVMvU6x0wVcBkMxaobB+vYdSrqF
      6TjEQ1H0Qzga+sMjvDI+Qr5e5fbyTXQHDsLJsVKt8/Xn/hNyubsgSHz16d9lwC8TT53g6489
      RUtrE1KDFIpL1LtdCm2t57rUtBaK5LBdyXNp6S6i8HBNUuEobb1LWW8juyY71TwNvUOt0wQX
      9G4bzdRpGA5ff+73CMsufq+foFfkdnabfHkbOCRiLE8gSnl9lmAig1bZYqtqoEgCHq8Xx3E5
      9fgzPPH44zx2+iSheJwDpLB8ImKhJKos4dgWjx15HtmsY7qQCKV4+eTz3Fqf4/ToSYTOFtWu
      Qa1ZwpH3xkH5y3CJxYZ5sj9FrtUGJAZiScDl9tYyHa3MTrPFQLhXfvNfRLk4D5HjKEaRmfwW
      peomxc7+WTlkbJqdIpawm+tz6d47JAaeIO6W+dbtu/z+U5/jG89/g/5InFJlmdfuXuu1Koie
      MF8+9TRLa1dZqTZYKayjPaQkfCC629tZ9sb44tHTzG3dZWr0OaKSQdd2WS7W+Pqzv0mttsVb
      t17n1JGXeOHESzydStDUDa7MX6XOodgADvl8Cb9XQpRkDFdke2UJXzRF1OuCL0R2bYXBIydp
      5VYhkGakP9Ez6SuFTcZTA3y0dI1I/Cj5/D3OTT7J5fnrPH70OSrFOepChGNRH+8vzfHiyReJ
      eg4QEHdd8uVV5mo6p6MiK2aCp5M+Vlo2E7Eo+comwfAwolmhZnnp7xE57s/E21yYucDYyBMM
      hYJsFjfpSw6j7HO3tVp53luc5fmTz1Kvl9nIL1IzBSZSKVaKWdKJcZ7qT1GzFAr5WaLJYwz2
      WBe9U+bdpQW+cPo5fILNSqnARGrgwRfZHVZqHTI+hwtrq7x8/CnmVj9CCY/gF0yGYwnenbnO
      mfHHuLNynY7j5YtnnqfZqhCSHG6XGrwwfrS3G+BRcdkj/Kqhp7lAj5LhHuFXDYfSJXJhZpZQ
      PEmjsE61KxPy976x8idhPTvLe0t3SUbTXJn7kLIpMRCOUK9v8vrMVRRfgpnVKyzXWoRlk3dn
      ryKpCeK+gwSwXBY273B1a42hxAAKJm/dOc9yvY3PqnN+eYZ0JM5793a7Ho7Eet9dsdXa5k6x
      SbO2wtWtTUaTA/uuo8iXlnlr9hqeQB8xnwfL6nB1bZG4B96cvYbsi3B3pPkI0gAAIABJREFU
      6RItVGrNEvFgtOd6FEorvDV/E68a4dbiRZZqLcaTmQfK0ToFpvNl+kMhri7dJBNLcmX+EguV
      OmPxDO12lp/cuYLsi7C+fYeZUhnJbPDB+ip9Hoe6qxJUpMMoiHGYu3sTTzTD1u0ryH2nmLlV
      olRvMhiVMU0Hx+snHBvmmbNTPZXctEWeS6ucX1lk2B/l8vJNnhoaodDW+I3jZ/j2zQ95buJx
      7q1c4vs7BkcGTxJUDmqBu1xbm0EURQraOeLdJZqeYfTiPYrqcYT2Jh/MGwSjR9nZ+Qhj7Dje
      HrocXNfh7XtvUhNOcC4dYCd3m8rEWfrU/T1sLizf4TfPvcKrN68y8dxvMLNxg3cWspiNAFNj
      L/DO9NuYWh6hmOP0xAsc7Z0KH+Pm+h0cKYKt7VB2kqi1ZarmYyQesDTXF99jut1Pv0fn1elL
      ZEIi96oaz46OAFBqNHnp+GO8dvca3U4VQVKoVT3MVZt4nDZfPD0EHJIXKBBLU92cQwrEaeY3
      GDj+JPGgl66rcHJyhJHjJ7CazZ7LnYwneXOjwm+NjzGUHCMmWrQdmMwM8/rty3zliS8hGVki
      6ZN4XIfhqJ+3Zm4fTJhjg+znWCJJttnAcRwUWUERBIKBGGdGj7FV2EKRFWRR7Bkx1k+xtnaB
      5Tbs1IokwinO9adZr7cOMJKIIqsIzi7t+WMTT5DyeXn2+Ausbc3QsW3+2ct/wHA4xvTi23zv
      3gHn6wE4MnSW3z3zNOfvfoAse/BI4kP7A3zu+HN4BIGB9FFOJJKYZpdwMMn06jV022EkM8qF
      e5d5aeoMaiDNkOrl3MnP8/vHp1jO7/Bv3vkOHQ7lCOTSbusEAx5SmX6CiUFKa7PkKk3GR4dI
      xKKIvgCiDcnUPjMxH4JXL38XSY0S9AW5s3abWGwUSy8xu3aTHUtBFbq8MXOTZCjKmcEJZnbW
      ODZyikzgIF4NgU67yFbb4kgsQM2NsLH5EahJorSZr9R4/tjTzKxdxxfs3+1I2MOzQzg8wMl0
      EkkK02ltkO1KPDlyBFXeX6M+yW7x3vwNjo0/gdnViPpVKu0OCS/MFrOcG3+Kfr+EKUdwjTqJ
      2Cgj0d6uW7GyxpW1BZ489gV2sjfQlSRPDo0+uH7CNanoMJlMUmvXOTH6GPnCIh41hSrB2uZ1
      FloO8WAMxarTxM8TQ1PsNOocj0epWCKPDY4ffjKc1aly5eYskdQAp4+O9UrUnlFr1wn7I4fa
      H8AwOhiCTFD5bGydR+gderoBbLv3bY8e4REOEz09AomiiCgKLMzMEE1l2NlYJxyPI4kirqOR
      zTWJRoOIoki3WeHG9F0kb5hIyH//2t58BCzevnOerY7JRDLNZn6e9xc+Yr3ZYGVrjmubiySD
      AT6cv4o3mCGu+g4kB9fkxsYSQ/E0AjYfzl2gYkmI3TLvr8zRnxxCtpvc2MkxHEv0VMeffQQW
      NqeZzhcYSfahSNK+ri9XN3hr9hqB8AAx1YvrdLm5tUom6OWdmUu08bG6eQNNDNJoV0iEYoei
      w7XVOwzFUlyY/ZDNjsVoIvXAawyjykyxgteu8dbCHfrifdxYvETREBiMxjG6VV6/e4lAKMP6
      zjRzlTpep8WFzQ0GfAJ1/IQ88mF4gVwWZ65T1EXM8hb1epFqpUEoHmZtQ2NrDTRbJO6X0S0R
      r6f3bYW0TpHpnW1ePjOFC4z2n2Arv4SanORkwOAvbtzi/J13mRg+i+dTnI1m1q/z6p1lnh4/
      QbM8x46bxFi8zJzsEvP6mC1VMfPvc6kS5JnRid4p+PNwND5YW+f5vgAf5ao8P7C/qPp78x/x
      m4+/wvdvXOa/fPGL3Fm7wo/msrTKftzgbsf4Cxv3ELJbnJ54nt767XaRLy7zp5fe5ImhYcKx
      SaYXLvLUxFEeVKh66d7rTHeG+MJwlKBV5OrmChFvhAtzV3hieIxitUAi6OODhduMRwPcXb5O
      MRJhodpENOp88exupPlQvEDRvgn8epbNUoudUpOXPneWcqFJIiCxvL6DR1YIpgd54dmnuDf9
      Uc/li6KXb7zwn7K1eYuWDWBzp9zmiVSMmwtXePLECximSdjn8M7snQPLOT3xFIP3+x6HEsfo
      p8RqrYotKAzEkywvX+BWqUG9VcY+rCC5qPLS6Ag3t9boHqBFlYuI1xNEcHaT3M5NPUNG9dE2
      uoTVIO/NXeGfvvSPGQpHubv0Ht+/N91rDcikpjjb34/iieE1cqQHTvOwyMwXTr2ERxBIR/uY
      7J+i0igxkhgk7IGu5eAPJJlIj6DrdUYSA4wGQ5w78Qr/6OgkS/lt/s3b30HjkDZALB7n3DPP
      kYoGmRxKcuHCXU48fgbJ62FqbAAkCdnW+eij64xOnuy5fEEUuDr7IYH4OBvb99DNOiPpEwDo
      Qphj8RCvHH+ahe0tTgyNfwpJIiOJPtrNTeaLBfLNOk9OPcnpVB/L5TpPHnuBf/LkFzg3NHGI
      xdcuuXoJb3iMJzPxfV99qq+f7176EUfHz7JWygMSI4kMzx9/llxxhfHMFAFFZKj/JH3BEGHf
      QZMHH4yRxADdTpZv3rqObbYxHraXRR8jsRjF8io3cnnO9I9wefEaqfgY2co2hl7kvcU5Tg4f
      4c7qTUw1zmAwgkaAL0xOEVaDSPxHwA5daVaIBOM9a1P6Seh2W3RRCPeSNe0RPhP0dAMYRo96
      yD7CI3xG6KkRvNsm1aXTatI1bfzBENgGhi0Q9PeeH/NBcF2bjmES8PpwHYtiq048GEfXGzii
      F9Hp0jS6+H1hIgfKBQJcl47ZxX+/GL7ZqWEJHsKKRKnTJhGMIQkOHcMicAhvB8vqYgsK2Dot
      0ybuD+17jm27S7HVJB6K4xFF9G6btuUSV1WKzQpBfwzLaKF4gwiujVc5eDumB6FjaPgVH/VO
      DUf0ElP3ctRyaXTqtA2DgBoBW8MRvERUFRyLYrNGLBTH6LbouhIhj0TDsIh5PZjIeKVDoUd3
      uXzxAqMTU9y4M41k2ESCXkbOPk9C/ezqgVfXL/Gt1Sb/3Rd+h3srV1lv1+iQxtGylDs6Xzv7
      DB9Ov0V45Df46uTB7ICFjWv82fQ8/+PX/jl6a4vvTN9lKJ6mVd8gFe2jkzmFVb3B99Z1/tXn
      v9xT/Vyrzb/98f/Duaf/K+rbV8m2avzec79PZp+5QO/efgPBF6BiJfjPzpzi9enzFFs1jqYH
      Kdky9VYLvblKMDJGJpLmt0482VM9ACq1df71j7/F//2N/4JvXruA4Jr801f+cwJ7uF2a7Spv
      T79BJHOGWqvJSDzNy0ce5/rdt2moKcyNOVqdBnW9SdjjZbnR5oujo0yOP4dXEg+pJNLQqVYr
      hKMpgn6FenmLfP2zOx4Z3RpLNY34ffrz01MvMOhTQZT4yqmncFybWKQfTYzy5YmxA8sZHTzJ
      aGiXVrFUXafSNdmpFlgtb1NqlijUtllrdYkegqsXycvLR88CIl8+93l8gkXL3D89et10efH4
      y3RbmyDI/M7ZV1Bch4VKlReOPI2CztnhE8iORrVV5G4h33NVQsF+nhwcwdTKpDOnmIh42Nvt
      ItAfH8BS0jwWgrKmsVMr47guqUiSWrPMTKHA1594hYAnyDPjpziVTjJXKHBx8ebhEGMBBGMZ
      nnr6WZ5+7ATBcAhRTTEU/+wMRF1v0tSbLBW22K4VuDZ/gbLrx+0W+Mm9m8RVH636Bp7wKPKn
      OJd5ZQUB0Lt1RF+GwVAIvdvmaP8UQY+H7UqOptZkqbjdczeoIMh4JBGweO32eSKBMF1r/5H4
      qEfg7Ttv4wsOkKsV+Mnt94gGwqT9Ku/OXsSSgjw9eZZEuI96bZM72+u9VQRQZA+CAB5/ip2d
      GyzXDSJ7fJFprXXU8DjJ6BDD4Qh6t8l2rUDAHyKoeJlKpvlffvj/4g+m6UtNEJF9JFWFhZ0l
      NA6FGMvFNC2U+2nGZlfHQsTn8XymNgCug27ZbJXWGEpPoOttgmoI0+zgCAqqLGI64JU/zSnQ
      RTdNnG6FnO2nzyfiCh58kkCz2yWsBhBx0S0b34HTrv9u2LaBI8i4toFuO4S8++93YNsmDb1D
      SA1h2RYiDrrtEvR4aGgtVF8QjwCWK2CaGrLiu98mtrfQzS4+2UNLb4HkIbhHNj3XsTBcAa8k
      0tHbIHoQBRePJNHQOwR9AVpaCweBiD+EbVtIgkvHtAn51EdeoEf4jxu/9nGAR3iEB+EQiLEc
      lmfvcuujq2RrOjev3mR0apLVuWmWVrcI+L1cvXqNji2SiveWLKrbbfAnF37EU2MnadRW+O7s
      HGf6hynl7/G9udt4PWFalXne3y6CtsX52evYvhQZ/8GaWLuOyV++/10mx06hWC2+feU15ioV
      tMY6F5fvgCTx7r3LFHWD0Vi6J0fAdqfIn199l6mowl9ce5/NRoPN7F3u5rbpiw/i2+fxZGbl
      Mu/MXaEhxBgOqlyY+5DvXf8bgqqfv5m9jiv5+GD6R+QNkUItz2DswaWKe4fLVvYOb65tI2lb
      vDFzGbwRbixc4fu3P+Dc+LkHknyt73zE+Y0SWm2B8ws3kdUw791+h0LXZiSeplSa40d3r1Pr
      GkyvXGWhXKJaW+fH83dJS11aSuywiLFExiYm6NoKx0cjWHIAjyRQLpcQsKiUSmhdG72j9bxK
      qtaqUtVauI7JlaVblDq7VWdrpRyKKFLr1KhpGtVWmVK9QKfboNA5KNGTy9LmNEuVMrtlQBJP
      jJ1gtbBBtpqjrdVYL26AN870yjX0g7BWfZKO7Tb1dpX5tds89/jXaNTX2Gq08Fs5buSr+x5v
      tpjj9575Kisbt0CUeWbiDOHwMD67ieOK1DsNumaXlc3bNC1o9eyY69LRGuTbDZLJKfpkjZwm
      8tRgPxPDjxN4yD7WunVy9TrD/ad4YbiflewGRV2nqTVxXJd3Z67hV1USqoeCbtMpLTPbqKF1
      W9zIbeN0d1mue0+P7jpcvXSBs89/jngkTCoRRxQEkv2jnJzqYydb57Enn0av5nvuGckkRon7
      PFQqSyzWmmyWtjAdUEMZvnrmRVaySxztn0ASoNTp8rVnPs929mBeDdexubh6D61ToNjqYJkt
      OkKYfp9I0Zb5nVOP03ECHI9H8Xn8PUvFGEyNEfbI+D0eGp02livz0tQZbFcm7Nt/QY6Ii260
      cITda1e3ppkYeRzFE+UrZ19hu7jCH7z8zxmKJljZusard6/3RhFEjvZNIAuwU9nm+bNfIpud
      58ryDC9OnX7o1ccHphAFgW47y9WSxefGx3jl5Oex9SJd2yXgDfD05ONcXpnhhbGjuLKHL576
      Tb40OkSxUeO719+kySHYAI5tcv3KRVzJR6qvH68nwGB/gnJuk418nePHJlmenyXSN8ZQppd9
      Z3dxd2ue00PHwNK4WyzSbu4w2TfBtbVZnph6hoTisFSpkvEJXFlf5okjz5BWD05rvrC1QNQv
      sG2EMepLSIFBhn0ON3JZnps4w43lGwz2neRYKt0zXe9tLXAs08ff3LnM6OBpZD1HzlD43ORp
      5H2md5cqa1xcW+SJo89idzVkp4U/PIrfbfH+4m2OjjzOgM8lr7tk8/eIJk9wJL7/pLtPhNXm
      bqnKkCpyaX2JZ44+R660xsmhow+fK7vJ3UKTdm2erO5wcvg05dISaniEqEegPxjk/cXbTA2f
      oVKcx1CSPDs6xXppi5Bkc7PY4IvHHvv1N4It20ISD7dLpHO/S6T0iPn6Vw49TYWoVCq9HO4R
      HuHQcSiBsIU7N9gpN/GHUzz1xClEwNLb1DWHRGyXhLWcXcP2Z0hHDuaB+XlYhoZmCpidGs22
      Riiexu7UUQJRoiE/tqmzkyuSzPSj1UvYkkoyFqZRrxMKRxD3eWxwLJ16xyEWUqlVq4TicSR2
      7Z9qrUE8FqFZq+INRqgWsniCMaLh3nRXbNcrlOotMn0DVIs5QvEUGG0amk1fJrnvlk+G1iJX
      rJDqG0D1SLTqVZpdl75UHK3VQFJDNMs5vKEEgmMSCAZ7c5RzXerVEh1TQJUd6q0O/nAC0WyB
      J0giGnrg5Y5t0Gyb+GSHQqVBpq+PaiGLI/noyyRxTJ3tbIFYMo2tNTDwEPaJVNsmqYiKJXrx
      HRY9ejgW4+6Nj1ADHr7/V3/Gn/3V93nrh3/Fn33vdd78wTf5kz//Dkv3brCaPwiPzd+CY7Gx
      vEC+2iKe6gPLQBIcHEFmZ3uXAruS3UHye9jZylGsNqgVC3TadWbmFw9giLvkNlfIFmoYWpO5
      uSV+moBQKWRZ38pimzrzs7M0Wx2UYIxidotePWUKhQKi5MHRd7ujb23vsJMrYLbrdIz9p0Ls
      7GRJZxJsbWbBdWlrBu1Knnanw/zMPVqGQ6lUYnt9hWbH6JkdYxltsqUmPo9MOJZCcU0kWcR0
      RHI72w+dr+zGElv5Ko1mh1hIZns7S7HaRPF4wIX85ibRTJqd9VUKdR2nXWV5c4disUC+UEa5
      Tx9zCBtAoG9ohHg0SlTpYoYmGPVVITTEqRPHCcT6aJc30Q6wWJ8IUWZwcGDXy2LraI6HkF8l
      GPQjCy6WC6YgIlnguB1EZATRRfZFSMUe/JT5JLSrRTRXwjS6bGzt4PcpWJaN1W1SahhgG2xu
      bKIGVATFh9htEIz3zgCOp/voC4lkmw5B1YvgWIiihCCCYe5/Tl0EZMUHjgkIRKIRfB4Fw5UZ
      yOy2qh0eGUP1eWhUcmzlyj3Rw7FNbNuhXMzTtQwaukAs4CMc2nWbP+z2GBwaQhIEEok4pXKL
      VCrO6Ng47VoRy3GxHAGvR0aUPURUiUq1Qd/gEP2JEI1mm4XF5cNLhgOBRDJFrG8MsbbESivE
      2ePDrC/NsDg3gz+Swh+OEvD1xgQRJAWPR8bsNAkn0ri2QS5XwOsP0qpV8Kl+NE0jGIyiyC6i
      7EUSwetT931jegMRktEIqs9LX/8Aql/F7rZpGxL96TiqqpLq6yfg92O2qyxvFnBti169AjrN
      GtvlFjFVIFsoEwiFUX0KliPiU/afoxMO+lhfWSYUT9BstSkVcpjIqB4ZxetDFsHnU/CHYiii
      QK+8CYovRNgvI8heJEvDH03gujb5XB7FF0B+2J0pSPi8Cpsr82i2gNntUsxtIyh+tE6LeDzE
      2tIaaiiMYRj4IjGigQAOMul4EO6v/GfaJfLvA7rWwePzHyoxlm0aWIh4lUMor3iEQ8XHG8Aw
      jE9Nb/6IGOsRftWwpzeA67q7zS9cF9sFWZIe+iZ0HAcBsGwbWZYRPuEC27Z3z6+f9unsuliu
      gwiYjo1H8gAutusgixKu62DYFoqk4DgW3G/QbNgWHkn5xO/2y/pYWI6LIskYtoEoSCiihO06
      SOLu0cO0DBwEFFHEdBw8koxpmyCIKJJ8IDvAdV0M20SRFERBwHHs+zoqmLaBKCoIOFiOi0f6
      5Hl+8Pg/m5ufjb/73V3XAUHEcSwEUQbX2V2vA+jxU9iO/fF8WbaJi4gsCh9/BwE+Xre9wHHs
      n62tayEI0sfXuq6z2zfNdXbvW0HAcl0UUcRFQBSEX44DOFaXj65eITN5Bre+xWbVJGjmuJUT
      kSqLZNte/tt/+S94WGXopQsXUL0CnXaL8PhTPDaWZHNtkXJNY3xsmNW1LbqWSX8iRKnawueR
      SAyMo1e20IQgxyaG9ryY2fI035zb5ExUQDM1UgOvMOSs8h82avw3z36JueX3mTG6+KUEjcY6
      bVtiPOzFklRCgXGeGxp9iASb127/mIah8cTYad5anOf5qaeJuSX+em6ef/2FfwKuxp9f+hZj
      Q09it9ZpmhpD6VPcWr/F6ZGneG74yJ50+duYX7/ITKOF4k3ztWPneOPOj3CkAEMhPzdKLWTR
      xWvWMRyH509/jYng/oh+L869QdWyEHyTfGVyildv/QifN8ZTY4/xzff/mN/43L/k8o0/JRI7
      TlwN8/mpg5dE5svz/NH19/nDL/8LHKvN9269QcNyGI+EsRAZTJ+lTyjyJ3dn+Fcvf2NPY95c
      fJflLjzZP8rV9XkM1+UPnvoaEi4f3PxLGrEnaZdnCfpTSHade9UmvzU8RmbgKTJe5ZeN4KUb
      51ksGawuL1OtlnnvjR+wXWoi2DrLOxWCQT975V8688yLZGIRAgoUi2XuzcwzmPJz6eIHtFyV
      ZrnE7elZImID0xPmxpXzfHDtHrevX6Fl7k2IbbWZq5aJeTx88fRX6POHCcg2C9UaUe9uEYot
      CtimiSipfPXki9iOgSKr2I7BvezSHqRIfOXc75LyhwGZY5kRNkqr9CenGLrPLO2aOn3JSYq1
      bT5/+isMBCJ4ZA9jiRFy1Q2sA1pax8de4JlMPyFfEDBZKedwHYOVwhYvnfotfHYdwZfiC2Pj
      ZJudfY9fNSx+89Rvo7XWcCyNjXoJ0+pi4eHJoWOAwNH0EVyjRlNvsFI7eLAzEh7lSGyXWVqU
      A3zl5Es4tsVCcX23gKnb5HZ+Z1/ZuYo3zFAgQE6Hr59+gaA3gAjUG2t0UNH1GrlWA8PUGU2O
      MxVPsFApMbs9h8MneIH8oTCFzRWyxTLn330HWVYIRWPU212GMknaxS1aD+j66VoGFy58SMd0
      mLnyLitViKki7XYbw9DJFXY3kXKfSVnxevF5vQQDQWSPj0QyxWNnH0N9qBtgF22tSlNvs1zZ
      5q3b32Wx6yXs1Kl3O6yVtyl36lQMi2OpSZqtNS6sL5Lx+wkFM/SpAUaTYw8X4tr88Npf0ZIT
      yLaOrAQAB5/iQwBMs0NNb+EKMpIA707/B1YMLzHJAsmHKBzcz7CydYXvLS5yJJGk1tGZTI/R
      ryoYosL02k26QgC7W+FOPkfCv/+cpoAkML15HdmbpmmaTCbHCMs2VcNGESVA4LnJZ0iE0jSb
      W9za3ssD45Px0/mynS7VVpEP1+fIBIJkosMMRtOs5WaodzuslDbR92ROujQNjaDHS7uT599d
      +A4T6SnqWp1co0KrW6OsdZhIjuB1NEKxSfq8KqokspBboMMn2QCuQ7lUxBeKYWtNbCR8qpd2
      Wyfgk+gYEI+GHnA8cWnWqriyimu26egmoUicoN/La6/9iKeffp5oJIjliDiWgQt4FRFH9GBZ
      Jk63g+EqxCL7ofiwaeg6htGgZVrEg2nCHpmG0SVbWWMkNUWpUSQd6aejlbFFlYgikms3GYik
      H95WyHXI1XPotk0q3EejXSQUSBFUZBp6G8mqk7WDxEQdUQlhGXXapkU8lELXanh9USLegyXc
      NTsVylqbgC9MtpblWGqYQqfNYCTOTjVHOJBCsNvUTZuB8P4jwabZYadZpS+SwTANJExqhkVf
      KIFhtBCUAIpr0nVFNK2K1xcl8CnKOxt6E1V0WKq1GAh4MfAS93nYaZTpi/SjCC6NrkbYt7ej
      nGlp5FoNUoEQ+UYZQfIS8aqEfUEcu4vuSjhWi7YlkAlG0cwOigBl3aAvFP1s6dG73S7eR+xp
      j/APCL/2cYBHeIQH4RBaJO1iYW4eQ6tyb24FXziB3ytj2xaWbSMIApZlUSgUUFUVy7J3WeUE
      Ede22P1R3JO7zXG6LBVmaRgGtlljvbRA23Ypt7ZZr26RDvWj6zmWyys4oo9sZYGy1iTmj5Mr
      38NW4vikh9kbLjuVBbbqOVTFw0ppAd0W8MsCS6VVEoEErmuyWpyn0KmDVWe9to0iKezU1lmr
      bZIJ9R/I3eu6DpulO0jeDB4RCrUVturbeGSZtfIqNhIBxctS4S6RQGbfAb9qc4ON6iq2GCCo
      eNmpLFBo1/BgsVxepmM5lGqLaI6E1m0Q8IZ6ktbhOiZrpTnqXZ2wL0y2fAdHyaDQZqm8QSKw
      x5oD12WrPIMr+tmqLNK2bMLeEN1ukaXyOo6g4JclFgrz4HRYqeYIiDaGoOIRD4UZbheVcplW
      3UQQ/Zj3CZvefu1VgpE4oqyQrzl4RR1Hb+GVwfEnUTwetHoFwxH58m9/Cd8eDGHXdYn7E6zV
      84wNniPXKDAUHUJrr4O8S4rrin4iHqh26gxFj7BVmUMza2zVthgJ7cU96RLyDyC6mzQNi4Q/
      xk67REDqUtd3yy477W2qpsVAOI1XkZFaObp4Sfq8CJ7EgSPRttWi3C4Riu7+va5V0C2DYt1G
      9Y+yXV3E62YotCqMpmC/d2exXWUyfYqF/AIZ9QSVTgXVGyfbzDGUOMFm6R622aJtrRIPj2M7
      DnIP6h5sW6Nji0hGnppPZau2wWjoDM36KvW9WcAAGGaVrfo2Q0oIRwxRba6TCfWhd6volkmj
      2wSzQkWr4ZehY7TJtWHIEwMOIRvUtS02t7M4rktyYJwnzowxP32Xj27cxlWjnD4+SaNRZXB0
      HK8kofjDnJgaYurYKYxWCc2SGB8Z3vMN47gmkhLBL7lYVgVXju+W2TVKDEbSu5Nk6aQixzCN
      KrXWGuHQGPnKCg4uTX0v3SoFbKtOiwARRUBV+xAdjViwH+/9t4cgCIT9fdQa63SsLsPxMZqd
      KtlmhYFQ8oCzCbISJqH+LGnPQmYq1ofrySDbdURBYKO2jW210KwHuOf+Ts1cbHc3IAUumegk
      cY9Io6tjuzauC6eHXyTiDVKuLbBY7g0xliQHyQTCmK7LVmUVQYBac51cu05brzy0S+QuXNZK
      y7uBQPxEFAGH3UBdXdeYyhxF0/JsN/Lo3Qap2DGORFO09CbTO7cxOIwjkADZ9WV88T7iqsjC
      ap7Tj59lbHiApZlbdF0fJ04cQ/UHCQW8RGNR4rE4Hn+IUDhGzAem6KUvvTePhohIqbGJX83g
      FwW8vgSqLGG7EPWFydfXUZUAO40d0qEMhVYZURAYSZ4k7gsSVBN4HvZEcx22qusguPh9McqN
      DeLhYQKKDxcBBZ2WG0SyqyjeOEFZoNBpMRgdQhBEwr7wpz42eD0BCo1t4mqQom4wEIpRaVfo
      i00ylpjE7wkQUaP7ftN4JYHt6g59sTEMq4tjNWnZMuPxQbK1DeKhYVQJJDmCgk3Yn8av9MKR
      4VBt5fGraaZSx4h4A4SDI4zFBvApAcK+4B7GEEiEBgl7AwR9EepVDgPzAAAgAElEQVSdItHg
      EDhdYv442do2megE44lJ/B6ViC+CZlmk/WFswUvC32Mv0MOM4PX1dUZHHxZ17S0s20QSlcMv
      iRQEJOEwSyLd3bQS6VHCXS/R0w3wa15e/Ai/hujpI0sQhI8/lXKZjZV5rl27xlah9gv/99NP
      sVAAfvnf9/3BwWp3cA0NvVAEwCjnsXRjN2DnWuj5HK4DZq2E2ergWl30fAFc9iTD0dt0K1Vg
      dzxL6+JoTbrl6n0ddmUazTZut/Px98C1sTrap9LP0Tu4zk9/bqGXK4BLN7+DbVg4ncbH322/
      Y7umjpbbwbHd3fE7TbrVOrg2ej6LYzuY1RK2YWHrGnzatbr/wbHRc1to2SyuaaDnsjiOi1kr
      YXX0vY9jdX9uzQtYWvf++CbazhZms4We20bb2cHW2nRrdbAMHMvZHeOwWCEufPABz7z0EjOX
      3yNx7BmG4n4+uvgObVNmaHiAlbU8obAP9BYdTUfy+Un0DaNXsuh4ee7px5H2dKB1MYqbtMsm
      isfBG1bpdmwEXxj0GurwOFYlDxLo1Q6i5EMSu5i6SWCkH73QJjCUeagMPZ/D1lp4+sewCsuY
      dgTBbiH7ZOT4MBJNOlULV6siB0PIiovpBpHMElpLIjp1sKOf021TuztN6PTzKF5oLi/iT4bR
      ajqeRIpuIQuug+SRUdLDKN79HZHaa0v4+jJ08g1CI/1o+QJ2p44gKiiZQYzCDq7RAUFGjiTx
      pRK9cYO6LjgmzbVNRMHG1z+IY9nYHR2zUSN0ZA/UKIBeyCI4JqbpIighMOqoQ2M41W06LQj0
      9yHK0FpdRZRELMPCEwzg7R9EFITDIMZyMYz73girTaGjkPZ2uXb9JkXN5anHJpm9d4tQephm
      uUylpXNkMEz/2DHW5m+wsFFAazXR7b0lwzndNmbXQRRcBEnE7JqIvgCC0cRstsAFOZoAV0CU
      ZUTJxGg08ESjdItF7D3WQHjicQRRwCwXcEUvrm0hiOCYNq5j41oWoseLKEp4kymMpo7icbHM
      3TfUQR8zojeAmvqZT9wTCaJXKuCLgF5DicYRBHAsC3ePc/YLEAQEjx/BMQABbzyKIAhIoQhm
      uYildfGl+xEVBatZRi/XDqbIL4kVMMt5PMl+XNPArFUwmxqe0C7DtbvHXCBPPAmCgKj4EKzW
      x2sueEMEBjNouR2sagE51oc6MIA3HMBsd2ivb+ByGCWRjsmH771FV/DSrRZJDo/hCcR4+qnH
      MWt5rk8vMDY2gc8jo/pV/H4/iteH16MQTw+TiqiowdDH7sWHQRAVZNWL64Lo8eA6LqIs4to2
      SiyJ3a5jVkuYbR3J68O1LaRQDFF0cS0Xbzq1Jzl6PovjikiBIKIiAS6iIu+6D20dR/BhVXPY
      rkhneQbbEXBdAcnn4cB3/091lD0gOBiNBq5t4+JBFtq0smVwXURFAUFE3OOc/Txkn4fOxipS
      KIbZaaPndnBFBVHcpR73JlLIfhUpEEa4v9F7BduwUYIq3kQSx7YRZQEtn0fw+NirP8Eo5bAM
      G9Gj7K55NIGttXC6Glo2ixQIYXVNPKEAokcFQcIbUnEtC5fPmB364qWLvPD8C5+VOACsThtJ
      DRyqF8g1uziuhOQ5TA+Ni9XpIPv3l+//CA9GTzeAae4/EPMIj/D3iZ4+sh6WDWrbNtIhdBd5
      hEc4KA4hGc7ih9/+Nqmx4yxff4MtPUinuEalbXHx/JtkBodZXphHVT188P5FdnJl+ocHD8ye
      bBY3WPqL1ynfWSF+9iiz//3/hDw2wvq3Xqcys0H87BFqF95j+/3LdOoetOn32b5Txs3Os/3W
      BSy1j2Dq4VHH1uwd7v7JT4hPJcm+/g5LP7hOd3WW+uI6cnoIj18i+52/ILfkEFBb3Pzf/pqB
      Z8ZZ+NMfYrsygcHkgbwnTrvKnT/8X1HPvYJXhfW//GsKH1xGSI2y8cd/hJ08QSDkcPsP/4jE
      S8+z3+dL/vXXKFy5QavqITKWwNGb3P4f/h2eKGy/c53aapn8T75Ps6jT2coTmhjqHTlWOcut
      /+tbiHqF0s17mLrJ1g/epbVZJHRsfE9Rbde1Wfzf/w+ID7L16pu0cjXCkyPULpxn64ObtAsa
      lQ/P0yq0ad27xeqPr+KhhRvpQ/EeEjOcV/VR2Fmj2tR2/daOyMULHxLP9LM+fZGtYpl3P7wM
      QH17hcqnIKNQUiMc+We/jeQRad66CsEkcnqMI3/wJSRlV73Yi68Q6w9j6jqRs2eRBZPUF3+L
      UFLB6uxNuHd4gkDci7dvGMGyOPpf//4uSUA9T2151w+dfPwUjusgxfsJD0WxNAMl7Ke1uoF7
      0P4Aopf4mYmPeYUs18vUP3qO2tIOiXMncR2X0pUbKInYgYbXqjqj//gbGJtzuK5L6fJNlESU
      0BPPMfIbZxAlmeDYMHYpu+s9yTcOqMgvwnUsCtcX8EVVavcWED0y4IALrblpuu09jUL73h0c
      TwhtZRHDEO8XarnEXnqFoeeOAhaCx4+xk0VOpQkMRqgt5WnMLh6SFwiQfWFq28uEkxm02g4r
      2TqyLIFt4UpexiaP8cS5c0xNTRFN9xH5FKkldqPE3B9/m+SLz9DaKmGWdmjOzTL3x98n+dJT
      2B2N8sXLKJNncGt55MBuvWnpw4sEzp7F2MrtSY4SDHycadlp2gSjXqLnzhIc6ENN+bENFyXo
      +4XfdQ0ddXwKUTAPTIwlqn4keXdRrY4OZpfK7Dq+TAZZlcA26OQqaGur6PX912NIMjQWZkBN
      YDUbaPkKnbU1ajc/YuG7N+l78RQDX/0Svr4UZm6D/IXpgynyt+C06+jlGo3FdbyDw8Qfm6Kx
      mCP17GP4h0bw7KVPNtDczGGWC5iGROT4JGZxB6PZoTVzk9W3FkifG0eOp1CjPoInHyOcDIHr
      Ur15B5NDIset1xt4ZBFBlLBdkUohhxIIE5Bd8KhUi3nifUPotTx4IyQPQFH4U9itOtXZNQQ1
      SPzUJGa5BLJEfXEDyR/GaVeInjlJY26V8KnjSIJFt6Hh8UvUFraJnDqCtMf6Yy1fQs0kP/5T
      z26jdwT8apd2N0JsUEVrOajxwO7vpOM05hdR0oOo8b0kd30yjHIJMRylcu0ukak+WrkWsdOT
      OK06jhLEo8rohRKeVHLfyXB2q0Z1fovI6aNYjQ5qKoqeLwEGzY0inmSG0GAYy5Qx81vIqQG8
      oYP3U/jb0PIlvBGV6twGkVNH0VaWkeJ9+FPhPY9hVssIgSj65hr440iSDaZGa6eCNzOAImqY
      tpfQaAajWkeWXVrFDpGJgd5ugE9LrPUIj/BZ49e+QcYjPMKDcAhdIm1uXLlGrG+Q0vosxa6H
      WLB3r8y/DcfS+PGNN9lsGYzHE/zg5nmOpDL8+KPX2dEcxuO7xSjnb7xFJD3E+7ffYrOp4+p5
      Xr97FTU8QNz3MCPE5fr8Bd5bnmMkM8r62gVKYpqNjat8uLrEeGYM2dX5wUdvslRrcDTdz4d3
      3kKNTiJ1s7y1vMZU6mH5Rn+XaJfLM2+jhCcIyuDYOj+evsREKso3L76BjsT69j3emH6fUGKK
      xD77hK1v3+H1e5dwfBkyAR9X5z7k8sYaQcnm/NwVrm3tsL1zm6rjo1zPk44czJv1iarZGj+Y
      vszxvmFevfEOx/snKJeXuVGoMxLdm1G/vj3NT2ZukIxleO/222y1u4wm0hjNDf7qxmUkReXO
      8hVu7myDUeWNpXkGFJuaGCJ0OP0BXDb+//bO7Eey+7rvn7vWvld1Ve/dsw+HMxxuIoeiFMm2
      DDGyAMeAHb8ICRAgT0H+iDwkeQ1gIEGgPAS2BSWSBcpaKNKiuA9n5/RMT+9rVXWtXdut5dbd
      89BDUhRJsbvVDcjRfN8a6Lrn96u69/7O+Z7vOWdzlWK5xvKDu5Ty6/z0lX/if/3t93n1Jz/k
      1X/8IT997VXeuv7gSKxZtsF4cpS72wtslZd5f3sN2zbIJbLc3V7EAzrtAm8t3qVlVKgZIVq1
      OSpWiJfOzHJ9O78PKy6J+AynQy4b9RLvLF1np28SCqep11ZoGjaWNeTJMy9Sqa+htbf4+f1r
      dG2XdxffZqFaPvT+9F6Zt5bv0HmoQFjfWeFOYZVW5QGbw70KqCtnn8YRg0xH9hk5/hpubK/y
      Z8/+CR8s3wDPJRLJUCwvEYhOk1Nczk1fYL26wY2lt+h6gaOTvHsed9Zucyu/SrW+wZtri+Da
      3Nr8gPX6/ogJAEeOELbrLBTXWNit47HXwnNl+x59JBzHYnb8EoJRZ35ng6XyJtd2thnxHdt8
      AAjGMzS3HqBEM/R2S0xfeJZcMgK+CJfOn+b0xUuIR9RBwvUcUsmTjPgcctnzTEdDeK5DNnOW
      Ecmg70IsPskTuVECgQkeT6uU+waZcIAfL23x5xfO78OKiJ8eG0aYS6NTfOXEnlJREP184+x5
      Vup1FF+MQuEaF068wD/cfB1FtLi7/CZ3am0KjZ1DT8QMRMZ4Znz8o79PT10iF/ThBcb49195
      ieX8HMWde4xPPol6iMJjQdiTKnmeC56HJIf4+uwJ1ttt7u1qPDWS4j986z9yKpHh5vyP+d4H
      Nw+3kd/AcFjj9dVFGu0KocQsZ1IJEGWunHnyANnZvV61X7v4VbZ3S/z1lT+n3VxnYHvE0xf4
      zpe+zNzWArq2RSBxlr984S/4d09cYLOyw3/5+d/R51hcIA/TcknGI4zkxohlxqhuLlJr9Th3
      +iTJRAIlGMYnSiRTv/ugbFGAGyvXSKZOcTI1gmEZTGfGuLZ0jfTIWXqdPPHoKJ5tkE5kWNx6
      QC73GFp9AV1Q8ftiZEJfoK/xbH52+3VU1UcyNkZAdFGDGfTOOhtdl4spP4vVErcL26iKyr++
      8m1yoTCPnXyRb5w+Q8gfZyZ1+LpgyzZIxLLc27zPZCrH0DKYSY/w+v33OTv9BDIuU5lpIofQ
      IoVEmzcW7/Dk2ecY6H3a7TxFQ+b5mSkcR2U6ncUy2ni+ND7PZCJ7ivHo/hmaz4OshPnymaeJ
      +v2cHplgaBlMp8fxXBcHlfF9uUACXa3EtWKRF04/xeLWbRLJk8jekKjq8cuFOS5Nn+W9lTsE
      FD8TmXGqvQGXshl0McjF0anjD4KdocbNDx6QHJ3izMz4F3/giNEf9gn4Qsc6H8CyDGxBIiAf
      rxiuO9SJ+A/u5jzC5+MRDfoIf9A4Bi2Qx259F38wSKfVQvXvNUR1HZOONsT/sGOzbfRZW1vH
      k/wEDzHh/LNgGhq3t1dJRdNIrkVZ0wj7/LjOkA+2lohH0pRq6+waLmHJ44PiOqlI6mA6JM9l
      If8AyRfHGNRZ3m2QCccQAM8dUusPCakKNa2B5A25ublAudsjGz2aoeBat8Z8tUJQMLm1vcyu
      bqA4A9ZbbTKhg7smhtHh1vYysXD6oxii0q4SUFXu5xcIBJKU6uvYUhB92MOvHj2jV6itc7+0
      iSWoxH0qpXZj3yfdcNjmg+ImqWiSYnWNmuGQCARx7T7X1u9jCT4GvQrFnk5QMFlpNImr0HVE
      fJJ4PA/Aaz/+PlYgx9biPJJk8eDBMo7T49ZcHndQZ3OnhtVtsl3XmJycPNRsq8/C96//hEvj
      M3QdiWL+PX6wkufF2dMsbN3BFYe8uVFio75Ftb5N3x7gDCosDgKcTuz/xmk0lskPBd5ZusFa
      dRPFbuKGJkn6BH7+7v/muuYnQ4P/+quf8K3HX0Bxe7y+scmzU6eOpCbh3dVbiIM8FXmaManF
      9VKFlfIWGcWgKSQYCR5MV/KLO79gMpPh9ZUtLo1N0O3u8J9/9j1m0zF6rsWbK6tslOdYrebR
      XZnZdPbIaNAPoco+1rauY4VnsVrzfPfOXb5++sI+Punx/sotIorBG8v3KQ1FkqpAOpKiXLjB
      P5VbXMzmuF8qsF1+wL2dbe5XNnHMPuMj06jiMZREAoxMnaGzPU9Ht1je2OG5Z0+xudUg6Re4
      v7TJoN3ECcT50rOXWbh398jstrQqtzbvslBcZkcXSfgkPA/OzzyD7HiItLENnb7r8tj0s8iS
      iD08mLgrmTrDlB8QJfyiS7mn702BQeKlS19BEgWmRi9wKTuCJCnczy/zL5/82pHFIH/02BUK
      fY/HMwlubm/wF0/9C07Ew9wvLFDpH5xZMzyRycwZMOt4ns3VjRXOZUcZy10gKYooksvzs5eJ
      qArlxjrv54+mMdavI6CqbOsSzyZVFpsDxkL+fRbRCbx4/gVKjSaTET+ldomrmwt703Ii4/z1
      5ee5ujbP10+dwZWi/NmlKzyRzbBSq/LynbexOC4xnKLy3HNP09xtkQyrvH/1HrmZSfqGSSoR
      wh+OYfcaPLj/gEhi5MjsXp66AIKAJEh4rkGpvct6fZvbK++x0hkQ84UIqCqKJHNz+U12Bjbh
      Ax7ptdoCb+YLxANhAqoPSZQY6ruUujqiIKFKEoIgoMp7bl3D9JgIHZXb4PI/fvbfaHkK/eEQ
      U/QTkwU8z0PwZXl85OCs2mjIx4+uv0wydZLt3SoRn0qxWWZu7To3K3WigRBnRqdIxycx9AZl
      rXVEe/kYdm+bcPIMnusgCQ7FVg1jn53hXn7ru8x1LBKxccYDPmRJJt8oUm/u8MbyTSKBAP/p
      5b9BUgL4QyMI+DiXilLt1I5LDPf7hZ1GkZHEBMox9qwy9BZNV2X0i+jUR/i9w6OSyEf4g8Yj
      Mdwj/EHjGDI3Lq+/8lPCyQxDT0bWNVACXH7+CiH5GLNRwGLxOj1TJ504Tbe3Q15r883H/pRG
      c4nCoEsyPIlk7lCxQsyGVdaqi/jiF3k6O7V/I67FrfVXSOT+BFHfYLm6zKWTL5FTHW7k76H4
      YgS9ASYSyVCK7UYeUQ7y/PQzRxIId/sl3iss8eL0Rdbqq1R0h/GggulKnBm7TOSA44u2qnep
      611C4dM8lspwr3ADy5M5O/4kncZtqkww7MwRiszil2TOjJw+chao2t5go/oAOXoWV6+iqnEu
      jV/cHz3tudxYe4WJ3PNs1x4gyGGem34K1xnwzvIvePzkt9kqXcNEIeFTKPb6XEzl8EdPEFfk
      4wmCTctCliQsy2A4NLA7eTbrxx8fnB59ivFwDE+OkPH7ODv+NLIAm81tFFFGESUigQyeazAS
      n0WUw1zKTB7QikciEMP2YCo5QzQ8xWggiNYroNmgiApDewiuwXxxjtHMRfyCeegpkb8JSY4Q
      lCAYyBAU4fLEBYpaHUmUDzwfDKA5HHB56grd3jauM6TUrSNJCq6tUe9r2K5DUA0zGFQZ2iaa
      efTJzmz8BK4U5rGwQN10kaX954U63QI92wMpxGPZU/SN3h6D5EE8EMHxPAzLwLSH+JUQQUVh
      p9ug3dsrYz2WByAUS/PE5af4oxdf4NzFi8RjGTK/S93jPlFuLLHrRpgJRyhobaZjSVzPJeJP
      cCJzmmJzg7AvvNdJzdzFU9LIB30ti+pHzFGrs0kyfhJwUZUgo/EZ9EGVXPI0uUiCVDhDf6hh
      OvaR0aBBX2RvqJ/nUTdssoEQmcg4I36oDg4+JlXCo2808IQgniCSjkyQVjzmK6sYjkVz0OLS
      1PNE/REGepWlysrRbOTX4Nm7oGRQlDAT8Ulco4q+TxZoR6tg2z3qWp6mJRJTJUzXQZQCBGUF
      1xmiBkYY9fsJx2aZCIawHIdCYxWdY4kBPJrNFsnkXju/+s4WXdfP7ETuWJtTAZSaq7QNg1x8
      FlyDZCjJZm2RseQJCo0NxlKn8YsumjEkosj0HIj5Dq6tMYw2lhhBdDREJYY7LLPrhvE5TVw5
      TkxyKPf7zKYmyO+uEgiOkg397sK/D9HsN0gEk7QGTZKhFH29TmWgM5ucPPApYJgdNps7TKdP
      MTR1FAxqQ4OZxCQ4fTRHJCLD0JXo9Uv4g6PE1KN9mbn2np246qfW2caWooxF9jkiCegPm0hK
      jFZnC8mXQcYiEUzSHzZRfCn6vQI9V2UylqVnaPhEl/JAZzo++qg9+iP8YeNIg+BHYrhH+OeG
      Y9ACuWwuL7C8soxmQH5tnVQuR724wfLaNqFwiAf35tAMj/QBNDi/Da3WJmtdC72b50Z+jXRs
      FNFqc71YYDKeotvd4bXFGwRCGe5vXGO91UGhz9WNBWKRLCHli98DrmPw3uYDppI59N4Ot6st
      yrUF3lu7QyA6QUIVeGfpXYoDk8lojHfXPmA8GuP1hXepGy7jsUOK4TyPB9s3kYLjBCVYKdzl
      3a1lQorIe2u3uVetcCaV5v3NJaaSBy+7rOyu8avlm0jBLEm/ynLxHte2VkkHfby2eAMTleXt
      m3QJ0O42SIbjR8MCeQ431q6x2mojO12ubi0QDae4vvw2ay2N2XRuH3Y8lgtzXF27RcMWWc5/
      wFa3z3QiS79X5GcL13HEAFule8zX68i2xjv5TbKKS4cgYflYSiJFZk6fxRwMCEkDlotNZEFg
      Y2MdSRIZdhtUG11kWTpsq5xPwjW4unyVpeYu724u8qXxFP+0NM+tlXe5Vdord2zpBqNBhxtb
      q8yVNpBkmetr93hmdpZX52/ty8xaeZl3NuYAl/eW32C+UuWZk89gOi6j4SBYHeZrdRZLKxRq
      q/xy9S5Do8/Z6adZL97jsH2x9EGFV+bfofUwx+jKYc4EDEpegvNxP/HoGCuled7bXDjU9a9v
      LfL1C89zc+UWrt3njbV5MtEU1foau4aFIgosV1a5tvwmTXt/o2v3BXfI/XKBzeoav1q7x5XZ
      07x84/+iCVnc3vZH+/3tEDg78QSCaxEVNdzADFp7k6HjcX35A65cuMLc5m1i8WnM/g63Cis8
      KK1ys7RF+qEq+VhqgpfvXmPkzFNMj+eYnphAEgVOnr3I2dkUa1strrz4ZRr59X1OAvwCiD5e
      OHUZGfjmuae5WVij0VjieqVOvVPB8kBWgpybeJZ+b4tvXf429PM8Nvss84Ul7H3GLWcmLpEL
      Btjcep+VnsVOu0qjsUw0dZ6AKNLrNxgdOUcQm9HceWZiUcKhNOWd25w78fyhv+hAaJRnxz/O
      U4yG/NzrKTydDPFuocRXp6d5bOoJ0l9Y2P85EARkyQeehee6iHIIeVhiy4rxV0/9MXNbd/jO
      V77DVDTJvdVf8vLC3CF38kkYRp9YbJysX+GF009zq7CEZztIooIsCvsuIbWsFh0vwohPQZZk
      JEHExcPxBFRJRpR8+JwWcmiKf/XUS/zl2TNs1kr8zVs/ZMAxuECubTI3v4jo2ZiuiN8XJJWM
      slvJs13WOHV6mo2lRWK5STKJ2JEwQ65jYgg++r0SDd3lG5e/yddmzyDJQQy9hozDtcIqj01c
      ZLsyj+fPEhX6FDo9Xjz3HDF1f8kjTe/xxMnneGp0HEGKEhIMcpnTKEaZouGnp23hD+c4kx5F
      03tERZ1XNzaIB8JMJUYOTYXqRo94LMfKzhI3Vq/h90eIR7K4rsWJ9Djg0dEHzKTHDnxt1R3w
      9uodzs08jWXbJGSHou5wcSTDtY17nBq/wIhfxJYTCFaPdHKaiejvzmhJokKtuYUlxwgJJlWt
      y1cu/imlym1MNcPl0f2NyrUGdWx/jpOpLHObN5D8GSKKyEwiwi8e3GEmM8l7q7eJBWJMpCeo
      9LqcT8XpODKPj07//y+G0wYa4UD0WEsiTVPHEmRCB8zCHgwe7UGPePDwXfQe4dM40gdA07RH
      VOgj/LPC8STC6lV6uoniC5LLph+WC9oYlovft5fm1nsdPCVE8IBD3QAsQ2dgOESj4Y+ubTkg
      Cy5a3yAWDTPodZF8AfwP3RvHMnEEGXvYx5NUAqqE1u0RjkSRP2e0kG0aCIoPSQDbHDIwHCLh
      EHh7e7GGAyzHJRyJoSoi/a6GJ/kIB30YholPVel2O0hq8BBlnx6GYaIqEp1Ol2AkiipL2JZB
      f2gRDYdwHQtXkPGsIUMbIqHggV1K17bodHtEonHkh+IbYzhE9aloHY1gOIo17CP7guA5KKr6
      OwXCxnCI4vcj4qH3e7iiSkAR0XoDorEYgudg2S7qPt1SAMscIsg+jH4XUfET8Kt4novW0QiF
      I/R7Go4LoXAA03QJBRQcJJSjLon8ECvzt/je3/8fpEiG2uY8D7YaVBbf5pVbBezdNe6uV+gX
      5yh5WSbTB9fQF/LbGN0mti9OUIH1hTmaloqhNdC1Bj1HQut0qNR2yWbSgMfa/Rv0xTC9Vptm
      vYrW1ZBkBccTCfg+/WXbRp9b164RHZvFL3kU8wVajTpqNEGnvEZ+1yYV9bG9sUEkPYJsdVkr
      tmg1agQVgZtzS2TjPor1Ps16lXQmc6Cbs1rcZDW/i2Ro6IJErdYknYyzU8jT3q0ih2Ms372F
      EExS3ikiOkMcOUjggK1R8ptrCBJU6n1SiQjWsMeNm3OEA9AcuDR2GzRqRdpaD9PyiD186RwG
      nmtx/Z33yczOIBo66/kyxqBLtVYjGPKz2+jSqm5S63lkkvujyD3XYe7WNdRQnFKlTqfdJJVO
      062XaA+GNNoDIkGF9fVN9EGfcm0X0THxh2PIx1MSKfDEc1/h5PQ0F2ejrNU97J07tO0QExMT
      qMEID+5cpTvc1xjAz8T07AksVyDslwGR8fEJJAEmpmcRRA8BhVw6tte/3wOtUUUNxRAlH1MT
      I4hqgGG/S7/XodvXP9OGpAQYz304QE9gcmoSUfDod1rYog9RAFUGNTZCxK9gGUPC8SRBWUKN
      pUjFglhDg0giiU8RcA94zmbGxvHLIrrhks2mwdlrDTc5NYUsihiWx9R4DgSJkF9B6zTo6Qcf
      YGc5kMqM4Zo9PM+lWmsQj0VwkTAHPQRJYiQzgiR46AONevPw8wGqOyUSyRQAoqygSh6tRgt/
      MIjW0ehoPUYnJtm/aNijUS0TiiVwPRfXNnG8PUVCbGSMsCLg4SHYQ5Jj00yOj5KKB2l1+uQL
      O7gckxjuQ4TiGTrFeRbKFqemM8zP3eSXr72OaXk47uE50LvX32HoKZiDLgPTRngY4W5vrOIg
      Y+sdtoo1ZFmi19WwXRj0emitOlevXkdWVRKJFODh2J/9IKH2l9sAAAb7SURBVArih5y3i9bV
      2FxfB1HCth0MfYDW7aE1d4mnMtjmAEfy0yzn0UwHVdz7Wv2hEPXiFrolHDgIFx9eIxZWWFle
      R1R9aFqPzY01XFFEQPho35Ik4klBEtGDU6F+RWBjdQklFKPb7YHn0mm30A17L1fjuaTSKfzB
      CGZfo93pHdjGRxBA01p0NY3+wEQURPzhCCG/iutYpDIjB9YyeUBf69DrDZAkCcGDrtalWS7Q
      6FtIokCj1SGdjBMIx5AEiXBAptNu43BsBTHew6JmgV+fDOHBp45P4RA86IdLtk0dw5UI/Rb/
      uqd1CEbjiL8l7fZ5a/Ae6mo7nS6x2MdH8id3BY6po7syYb/y0fU8z/vE/x18n96nCsM7He0T
      6/iMnRw4BvjNn//Dtf82HOY3+3V7nmPT000i4d8UIn78jR3Exv5uYeFhG8iP//cTk+JN0/y9
      1fI8YpYe4bjwe18Sadv2Q43RIzzC0eNTLJCtd/j+3/0tv3zzHfzpSRRHZ2BY9NpNhq6I2evS
      1tpIagBda/LB1TfoB7KkIxLf/+5/5x9+8ipDMUzUB46gsHzzNapOAnHYYugIvP/6T4mOnSGo
      7i/8cF0X9zfihcLWGrVaHX8kiewarG9s0u7pmIMOu7U6nuJjJ7+F4QhEQgG6jSqFag3Dcqnu
      FGm0NByzT73RxBN9n8kCuY7N2sI8vmQWVfQo5bcoVXfxqSLbhTID3aDTqFKrNwhE4sieyerq
      BrttDYw+tVYHSRIoFop0BwaxSORA7kmvs8vmTp1kLMTa0gN8sSyqBOXCFqVyFVlVqJZ2KFQa
      GL021XqDUDT+uZTu56FRLVKuVDBclUjQh+faLC0sEQyI5ItVdNOhVtygb3nogwGhcOjQLFC1
      VKBe20UKRPApIlqjQqHew9XblKtVbGQqhW2amk4iEduXnVa1RLnRQpZECvk87Z5OPB5F79TY
      LNawHAj6RBaW1sHW2dqp4xdsbNmPKomflkNvzV8ncf6rvBDVKHZa/P0PfsQTf/wtOpv3uFe0
      mPV1MIIhohOXqDx4H2yLr56+Aij81b/9N/zP7/6Ix5IGP/jHV3FdiFpFEvYI6zvz3NnRuTwq
      YR22V/hDZMemaFYK2I4LPoXcSIrNnV0k/96JMRwOsR0whjquB5Zp4Dg2puUyPTNLfnuLwcDB
      FwxQrlRJRGc+ZcNzHASBjzQpqZEc2voahmFgWQ6CaDI9MUmjvLcOU9cIJLLYWp2u4SIi0ayU
      0V2ZlHqI1o+ShGOaD9ch4LgfriOLtrqKoIbwS7tEJqcIqyL1nTyW63HQDkRab8j0iZNsbWxD
      OkyzXsOwHCzLxLJtBMNAFEUGnSbBaALDtPEfogs1QL1eJxpPozx8SEVBwLItYqNZgv4Gu4ZL
      LjvCRrGK57GvF4ZuDBGRMGz3o/vA8/ZyOLZjY5gWu7U6tmPvERuCR6PTI6EEQQ1/mgWKpTJs
      zN/hrbff5NbdRQKJMc6P+ck3TUTHxCPESy99lcGgjyf5iEcCn1rUsN8jms4huga50VEkvcFG
      Y4joHk3blE6jiutPEA3IuKaO4akEFRjaAlNTObotjczoONhDXA+6usXM9AxGv025uE1qdILM
      yAhhv4zq+/T6ASTVR9D34Y27FwiPZ5NUy02yU1N49pD2bhWCSSIBBUmWMU0T23HwB8LkMnEG
      hk0ylaHf3j0wDRoOhxEFAUn1E/R/fEK12xpT42na2oC2bpMIqbTrZcRIkvAhbkwBD9sa4qLg
      uQ7Ntoah92i0+4xPTeMYA2ZPnSUY8DPQGhRK1QPb+BD+YIRcKkC51gYEwuG9nILR71Dpuoyn
      AgxskahfxNwXS+4h+0KMZVN0Wg0MTyWkgut6dLsG07NTDLtNWt0eg26PaHqUbCyIaVqUdnYw
      +YwYwPM8ihtL5Os9nrh8ifJ2npnZce7dWyQQjuDzPEans1RbFpJep94ZMnvuAsmQD8+1WF3L
      c+rkJPNzd4mNniShGOR3+ww7LYLRBH6fx+jEKQL7dIE+KwYoF7awPIlIyI8jB2GoIQWiBGWX
      erNLdjRLq15FDcUxei3iyRT12i7JdIJ6pY6o+kjFIzTbXXK57Oe6DYNuBzkYpl6tkYgEaPdN
      spkktUqFUDxFr1XDdkViET+WGMQdtBB8EaJ+kd12n2wuQ7teQwxESETCB2RoXDqdHrFYlEGv
      gxyIUK9UScaCNLtDRrMjdLsasUiYUqmI5YpkR8cO3GfV1HtU6k0yuVFs0yISDtLtdAiGg1TL
      VaKpEYKKx9AW0bUGvkiScOBwzYwNvUe92SWTjtLqmORSYToDE0fX6OomsWQGZ6iBEiIZ25/L
      aOp9ak2NbC5LZ7eK6I+giB7BgI9KpUYikyXoU+h0OkRjMQb9Poro0ega5EZS/D/S6S0oBhzi
      4gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 18' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 19' width='192'>
      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
      /3R709H5Nv4X16E5X37j9zwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Optimization Results' width='192'>
      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
      nUVZJHRd59NPPyUajXL27FmGhoawLIt79+5x48YNzp8/v+l3GxoauHv3LoqiPFUMey0DAwPc
      unXrqc80TePnP//5nqQbLCWhUAi3242iKGQyGWZmZlCUXKD77Owsbrebixcv8s4773Dp0iXm
      5uZ45ZVXSKVS3Lt3r+DothMuX76843bbOo6mJYU2l+OpXCx2kx+Sjxw5su7vlmUxOztLS0tu
      3ZEfRm/evMmxY8c4fDhnsk0kEtTX12NZFlVVVYWOvRHBYBCHw0EsFqO+vp5Tp05x+fJl3njj
      DT799FOCwSDd3d1ks1l6e3sLP3ZPTw/BYJChoSEMw2BsbIxkMsnZs2cxTZOlpSXS6fRT17Ad
      0uk0V69e5cKFC8RiMTo6OsryRM2PAKlUirq6On7xi1/gdrtxuVy8/fbbQG6EfvPNN5mbm0MU
      RU6dOsXk5CRvvvkmg4ODO5K7uro+s3bqcZaN7Xgk26oAJ0+e4P7APbp6i/8Rd0NfXx8ffvgh
      brcbr9dLfX09qVSKa9euEQgEuH79emGk6OvrI5PJcOHChcL3T51an8zlWQu7rq4ubty4QVtb
      G+3t7YyOjjI4OEhnZycdHR2MjY1x6tQpurq6uHXrFpIkcfPmTbq7uxkbG+Pdd9/lZz/7GX19
      ffzjP/4jwWAQn89HXV0dP//5zzl37hzd3d3bvv7f/OY3tLW18eGHHxIMBrl9+zYul4ve3l4m
      Jydxu90cP34cj8eD1+slFMolRFu77pFlmfv373Ps2DFisRhdXV3PlJuv4K5pGt99nM49P6df
      S319PfX1ORf37u5uuru70TStYL0rdh8gnzc2v/dz8+ZNVlZWeP3112lqamJ2dpalpSXm5+dp
      b29HkiT6+vqor6+3VwFEp4fTZ87aKWJDvF4v7777LuPj46iqyjfffIPX6+WNN96gpqamcFwk
      EuHevXt873vf25W81tbWgp86QG9vL5cvX+YP/uAPqK6uXjeFyr++dOkSkUiEH/7wh7jdbn78
      4x/T3Nz81LlPnDjB559/Tnt7+7bbI0kSJ06cwOfz0dHRgdPpZHV1ldHRUd577z1UVeXmzZuY
      pkk6ncbtdhMKhZifz4VSiqJIS0sLk5OTTExM4HA4qKure6Zt3u12o6oqpmlu2PG3wuVyFXaS
      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
      DfD/A6lKcl1zGfKxAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Landing Page Performance' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Funnel Chart DB' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='All Offer Timeline and Funnel DB' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top Device Performance DB' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Perf by Pantip Category' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Pantip Kaidee Room Perf DB' width='192'>
      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
      ycNAIkEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Pantip Kaidee Room Perf by Offer DB' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pantip Room Perf by Offer DB' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Optimal Impression Cap' width='192'>
      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
      hLlEBxA2tf8BIAGEmrjLd44AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Submitter Device Charact DB' width='192'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
